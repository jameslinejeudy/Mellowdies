{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\james\\\\Downloads\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Trackbackgroundbox = () => {\n  const boxStyle = {\n    width: '100px',\n    height: '100px',\n    backgroundColor: 'pink',\n    position: 'fixed',\n    top: '50%',\n    right: '0',\n    transform: 'translateY(-50%)'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: boxStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n};\n_c = Trackbackgroundbox;\nfunction Landingpage() {\n  _s();\n  const waveformRef = useRef(null);\n  const location = useLocation();\n  const {\n    audioFiles\n  } = location.state || {\n    audioFiles: []\n  };\n  useEffect(() => {\n    if (audioFiles && audioFiles.length > 0) {\n      console.log('Creating WaveSurfer instance...');\n      const wavesurfer = WaveSurfer.create({\n        container: waveformRef.current,\n        waveColor: 'blue',\n        progressColor: 'pink',\n        height: 100,\n        width: 600\n      });\n      console.log('Loading audio file:', audioFiles[0].url);\n      wavesurfer.load(audioFiles[0].url);\n\n      // Optional: Clean up the WaveSurfer instance on component unmount\n      return () => {\n        if (wavesurfer) wavesurfer.destroy();\n      };\n    } else {\n      console.log('No audio files available to display.');\n    }\n  }, [audioFiles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Selected Audio Tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: waveformRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), \" \", audioFiles && audioFiles.length > 0 ? /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: audioFiles[0].url,\n        type: audioFiles[0].mimeType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), \"Your browser does not support the audio element.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No audio tracks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(Landingpage, \"R+FesagimpqmzXTpqDSY5PJFnUc=\", false, function () {\n  return [useLocation];\n});\n_c2 = Landingpage;\nexport default Landingpage;\nvar _c, _c2;\n$RefreshReg$(_c, \"Trackbackgroundbox\");\n$RefreshReg$(_c2, \"Landingpage\");","map":{"version":3,"names":["React","useEffect","useRef","WaveSurfer","useLocation","jsxDEV","_jsxDEV","Trackbackgroundbox","boxStyle","width","height","backgroundColor","position","top","right","transform","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","Landingpage","_s","waveformRef","location","audioFiles","state","length","console","log","wavesurfer","create","container","current","waveColor","progressColor","url","load","destroy","children","ref","controls","src","type","mimeType","_c2","$RefreshReg$"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/src/Landingpage.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst Trackbackgroundbox = () => {\r\n    const boxStyle = {\r\n      width: '100px',\r\n      height: '100px',\r\n      backgroundColor: 'pink',\r\n      position: 'fixed',\r\n      top: '50%',\r\n      right: '0',\r\n      transform: 'translateY(-50%)',\r\n    };\r\n  \r\n    return <div style={boxStyle}></div>;\r\n  };\r\n\r\nfunction Landingpage() {\r\n    const waveformRef = useRef(null);\r\n    const location = useLocation();\r\n    const { audioFiles } = location.state || { audioFiles: [] };\r\n\r\n    useEffect(() => {\r\n        if (audioFiles && audioFiles.length > 0) {\r\n            console.log('Creating WaveSurfer instance...');\r\n            const wavesurfer = WaveSurfer.create({\r\n                container: waveformRef.current,\r\n                waveColor: 'blue',\r\n                progressColor: 'pink',\r\n                height: 100,\r\n                width: 600\r\n            \r\n            });\r\n\r\n            console.log('Loading audio file:', audioFiles[0].url);\r\n            wavesurfer.load(audioFiles[0].url);\r\n\r\n            // Optional: Clean up the WaveSurfer instance on component unmount\r\n            return () => {\r\n                if (wavesurfer) wavesurfer.destroy();\r\n            };\r\n        } else {\r\n            console.log('No audio files available to display.');\r\n        }\r\n    }, [audioFiles]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Your Selected Audio Tracks</h1>\r\n            <div ref={waveformRef}></div> {/* Waveform will be displayed here */}\r\n            {audioFiles && audioFiles.length > 0 ? (\r\n                <audio controls>\r\n                    <source src={audioFiles[0].url} type={audioFiles[0].mimeType} />\r\n                    Your browser does not support the audio element.\r\n                </audio>\r\n            ) : (\r\n                <p>No audio tracks available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Landingpage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}