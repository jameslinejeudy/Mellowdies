{"ast":null,"code":"(function (root) {\n  'use strict';\n\n  var audioContext = new (window.AudioContext || window.webkitAudioContext)();\n  function audioBufferSlice(buffer, begin, end, callback) {\n    if (!(this instanceof audioBufferSlice)) {\n      return new audioBufferSlice(buffer, begin, end, callback);\n    }\n    var error = null;\n    var duration = buffer.duration;\n    var channels = buffer.numberOfChannels;\n    var rate = buffer.sampleRate;\n    if (typeof end === 'function') {\n      callback = end;\n      end = duration;\n    }\n\n    // milliseconds to seconds\n    begin = begin / 1000;\n    end = end / 1000;\n    if (begin < 0) {\n      error = new RangeError('begin time must be greater than 0');\n    }\n    if (end > duration) {\n      error = new RangeError('end time must be less than or equal to ' + duration);\n    }\n    if (typeof callback !== 'function') {\n      error = new TypeError('callback must be a function');\n    }\n    var startOffset = rate * begin;\n    var endOffset = rate * end;\n    var frameCount = endOffset - startOffset;\n    var newArrayBuffer;\n    try {\n      newArrayBuffer = audioContext.createBuffer(channels, endOffset - startOffset, rate);\n      var anotherArray = new Float32Array(frameCount);\n      var offset = 0;\n      for (var channel = 0; channel < channels; channel++) {\n        buffer.copyFromChannel(anotherArray, channel, startOffset);\n        newArrayBuffer.copyToChannel(anotherArray, channel, offset);\n      }\n    } catch (e) {\n      error = e;\n    }\n    callback(error, newArrayBuffer);\n  }\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = audioBufferSlice;\n    }\n    exports.audioBufferSlice = audioBufferSlice;\n  } else if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return audioBufferSlice;\n    });\n  } else {\n    root.audioBufferSlice = audioBufferSlice;\n  }\n})(this);","map":{"version":3,"names":["root","audioContext","window","AudioContext","webkitAudioContext","audioBufferSlice","buffer","begin","end","callback","error","duration","channels","numberOfChannels","rate","sampleRate","RangeError","TypeError","startOffset","endOffset","frameCount","newArrayBuffer","createBuffer","anotherArray","Float32Array","offset","channel","copyFromChannel","copyToChannel","e","exports","module","define","amd"],"sources":["C:/Users/elect/Documents/CIS/4914/Mellowdies/mellowdies/node_modules/audiobuffer-slice/audiobuffer-slice.js"],"sourcesContent":["(function(root) {\r\n  'use strict';\r\n\r\n  var audioContext = new (window.AudioContext || window.webkitAudioContext);\r\n\r\n  function audioBufferSlice(buffer, begin, end, callback) {\r\n    if (!(this instanceof audioBufferSlice)) {\r\n      return new audioBufferSlice(buffer, begin, end, callback);\r\n    }\r\n\r\n    var error = null;\r\n\r\n    var duration = buffer.duration;\r\n    var channels = buffer.numberOfChannels;\r\n    var rate = buffer.sampleRate;\r\n\r\n    if (typeof end === 'function') {\r\n      callback = end;\r\n      end = duration;\r\n    }\r\n\r\n    // milliseconds to seconds\r\n    begin = begin/1000;\r\n    end = end/1000;\r\n\r\n    if (begin < 0) {\r\n      error = new RangeError('begin time must be greater than 0');\r\n    }\r\n\r\n    if (end > duration) {\r\n      error = new RangeError('end time must be less than or equal to ' + duration);\r\n    }\r\n\r\n    if (typeof callback !== 'function') {\r\n      error = new TypeError('callback must be a function');\r\n    }\r\n\r\n    var startOffset = rate * begin;\r\n    var endOffset = rate * end;\r\n    var frameCount = endOffset - startOffset;\r\n    var newArrayBuffer;\r\n\r\n    try {\r\n      newArrayBuffer = audioContext.createBuffer(channels, endOffset - startOffset, rate);\r\n      var anotherArray = new Float32Array(frameCount);\r\n      var offset = 0;\r\n\r\n      for (var channel = 0; channel < channels; channel++) {\r\n        buffer.copyFromChannel(anotherArray, channel, startOffset);\r\n        newArrayBuffer.copyToChannel(anotherArray, channel, offset);\r\n      }\r\n    } catch(e) {\r\n      error = e;\r\n    }\r\n\r\n    callback(error, newArrayBuffer);\r\n  }\r\n\r\n  if (typeof exports !== 'undefined') {\r\n    if (typeof module !== 'undefined' && module.exports) {\r\n      exports = module.exports = audioBufferSlice;\r\n    }\r\n    exports.audioBufferSlice = audioBufferSlice;\r\n  } else if (typeof define === 'function' && define.amd) {\r\n    define([], function() {\r\n      return audioBufferSlice;\r\n    });\r\n  } else {\r\n    root.audioBufferSlice = audioBufferSlice;\r\n  }\r\n})(this);\r\n"],"mappings":"AAAA,CAAC,UAASA,IAAI,EAAE;EACd,YAAY;;EAEZ,IAAIC,YAAY,GAAG,KAAKC,MAAM,CAACC,YAAY,IAAID,MAAM,CAACE,kBAAkB,GAAC;EAEzE,SAASC,gBAAgBA,CAACC,MAAM,EAAEC,KAAK,EAAEC,GAAG,EAAEC,QAAQ,EAAE;IACtD,IAAI,EAAE,IAAI,YAAYJ,gBAAgB,CAAC,EAAE;MACvC,OAAO,IAAIA,gBAAgB,CAACC,MAAM,EAAEC,KAAK,EAAEC,GAAG,EAAEC,QAAQ,CAAC;IAC3D;IAEA,IAAIC,KAAK,GAAG,IAAI;IAEhB,IAAIC,QAAQ,GAAGL,MAAM,CAACK,QAAQ;IAC9B,IAAIC,QAAQ,GAAGN,MAAM,CAACO,gBAAgB;IACtC,IAAIC,IAAI,GAAGR,MAAM,CAACS,UAAU;IAE5B,IAAI,OAAOP,GAAG,KAAK,UAAU,EAAE;MAC7BC,QAAQ,GAAGD,GAAG;MACdA,GAAG,GAAGG,QAAQ;IAChB;;IAEA;IACAJ,KAAK,GAAGA,KAAK,GAAC,IAAI;IAClBC,GAAG,GAAGA,GAAG,GAAC,IAAI;IAEd,IAAID,KAAK,GAAG,CAAC,EAAE;MACbG,KAAK,GAAG,IAAIM,UAAU,CAAC,mCAAmC,CAAC;IAC7D;IAEA,IAAIR,GAAG,GAAGG,QAAQ,EAAE;MAClBD,KAAK,GAAG,IAAIM,UAAU,CAAC,yCAAyC,GAAGL,QAAQ,CAAC;IAC9E;IAEA,IAAI,OAAOF,QAAQ,KAAK,UAAU,EAAE;MAClCC,KAAK,GAAG,IAAIO,SAAS,CAAC,6BAA6B,CAAC;IACtD;IAEA,IAAIC,WAAW,GAAGJ,IAAI,GAAGP,KAAK;IAC9B,IAAIY,SAAS,GAAGL,IAAI,GAAGN,GAAG;IAC1B,IAAIY,UAAU,GAAGD,SAAS,GAAGD,WAAW;IACxC,IAAIG,cAAc;IAElB,IAAI;MACFA,cAAc,GAAGpB,YAAY,CAACqB,YAAY,CAACV,QAAQ,EAAEO,SAAS,GAAGD,WAAW,EAAEJ,IAAI,CAAC;MACnF,IAAIS,YAAY,GAAG,IAAIC,YAAY,CAACJ,UAAU,CAAC;MAC/C,IAAIK,MAAM,GAAG,CAAC;MAEd,KAAK,IAAIC,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAGd,QAAQ,EAAEc,OAAO,EAAE,EAAE;QACnDpB,MAAM,CAACqB,eAAe,CAACJ,YAAY,EAAEG,OAAO,EAAER,WAAW,CAAC;QAC1DG,cAAc,CAACO,aAAa,CAACL,YAAY,EAAEG,OAAO,EAAED,MAAM,CAAC;MAC7D;IACF,CAAC,CAAC,OAAMI,CAAC,EAAE;MACTnB,KAAK,GAAGmB,CAAC;IACX;IAEApB,QAAQ,CAACC,KAAK,EAAEW,cAAc,CAAC;EACjC;EAEA,IAAI,OAAOS,OAAO,KAAK,WAAW,EAAE;IAClC,IAAI,OAAOC,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACD,OAAO,EAAE;MACnDA,OAAO,GAAGC,MAAM,CAACD,OAAO,GAAGzB,gBAAgB;IAC7C;IACAyB,OAAO,CAACzB,gBAAgB,GAAGA,gBAAgB;EAC7C,CAAC,MAAM,IAAI,OAAO2B,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACC,GAAG,EAAE;IACrDD,MAAM,CAAC,EAAE,EAAE,YAAW;MACpB,OAAO3B,gBAAgB;IACzB,CAAC,CAAC;EACJ,CAAC,MAAM;IACLL,IAAI,CAACK,gBAAgB,GAAGA,gBAAgB;EAC1C;AACF,CAAC,EAAE,IAAI,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}