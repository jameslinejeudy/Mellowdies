{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elect\\\\Documents\\\\CIS\\\\4914\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Landingpage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport RegionsPlugin from \"wavesurfer.js/dist/plugins/regions.js\";\nimport { useLocation } from 'react-router-dom';\nimport Sidebar from './Sidebar.js';\nimport cloud from '../images/cloud.png';\nimport PlayButton from './PlayButton.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst controller = new AbortController();\nconst signal = controller.signal;\nconst pagebackground = {\n  backgroundSize: 'cover',\n  backgroundImage: `url(${cloud})`,\n  backgroundPosition: 'center',\n  padding: '10px',\n  height: '100vh',\n  margin: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  fontFamily: 'Concert One'\n};\nconst musicbackground = {\n  width: '75%',\n  height: '80%',\n  position: 'fixed',\n  top: '0',\n  right: '0',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'flex-start',\n  alignItems: 'left',\n  backgroundColor: 'rgba(255, 255, 255, 0.3)',\n  marginTop: '5px',\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\n  overflowY: 'auto',\n  padding: '10px'\n};\nconst trackNameStyle = {\n  position: 'relative',\n  color: '#000000',\n  fontSize: '0.8rem',\n  zIndex: '1002',\n  padding: '5px',\n  borderRadius: '5px',\n  backgroundColor: 'rgba(255, 255, 255, 0.7)'\n};\nconst waveformStyle = {\n  width: '100%',\n  height: '75px',\n  position: 'relative',\n  marginBottom: '20px'\n};\nfunction bufferToWave(abuffer, offset, len) {\n  var numOfChan = abuffer.numberOfChannels,\n    length = len * numOfChan * 2 + 44,\n    buffer = new ArrayBuffer(length),\n    view = new DataView(buffer),\n    channels = [],\n    i,\n    sample,\n    pos = 0;\n\n  // write WAVE header\n  setUint32(0x46464952); // \"RIFF\"\n  setUint32(length - 8); // file length - 8\n  setUint32(0x45564157); // \"WAVE\"\n\n  setUint32(0x20746d66); // \"fmt \" chunk\n  setUint32(16); // length = 16\n  setUint16(1); // PCM (uncompressed)\n  setUint16(numOfChan);\n  setUint32(abuffer.sampleRate);\n  setUint32(abuffer.sampleRate * 2 * numOfChan); // avg. bytes/sec\n  setUint16(numOfChan * 2); // block-align\n  setUint16(16); // 16-bit (hardcoded in this demo)\n\n  setUint32(0x61746164); // \"data\" - chunk\n  setUint32(length - pos - 4); // chunk length\n\n  // write interleaved data\n  for (i = 0; i < abuffer.numberOfChannels; i++) channels.push(abuffer.getChannelData(i));\n  while (pos < length) {\n    for (i = 0; i < numOfChan; i++) {\n      // interleave channels\n      sample = Math.max(-1, Math.min(1, channels[i][offset])); // clamp\n      sample = (0.5 + sample < 0 ? sample * 32768 : sample * 32767) | 0; // scale to 16-bit signed int\n      view.setInt16(pos, sample, true); // update data chunk\n      pos += 2;\n    }\n    offset++; // next source sample\n  }\n\n  // create Blob\n  return (URL || webkitURL).createObjectURL(new Blob([buffer], {\n    type: \"audio/wav\"\n  }));\n  function setUint16(data) {\n    view.setUint16(pos, data, true);\n    pos += 2;\n  }\n  function setUint32(data) {\n    view.setUint32(pos, data, true);\n    pos += 4;\n  }\n}\nfunction Landingpage() {\n  _s();\n  const wavesurferRefs = useRef([]);\n  const location = useLocation();\n  const {\n    audioFiles\n  } = location.state || {\n    audioFiles: []\n  };\n  const [isReady, setIsReady] = useState(false);\n  const [speed, setSpeed] = useState(1);\n  const [progress, setProgress] = useState(0);\n  const regions = RegionsPlugin.create();\n  useEffect(() => {\n    wavesurferRefs.current = [];\n    if (audioFiles && audioFiles.length > 0) {\n      audioFiles.forEach((file, index) => {\n        const waveSurfer = WaveSurfer.create({\n          container: `#waveform-${index}`,\n          waveColor: 'blue',\n          progressColor: '#00FFFF',\n          height: 75,\n          backend: 'MediaElement',\n          plugins: [regions]\n        });\n        waveSurfer.load(file.url).catch(error => console.log(error));\n        waveSurfer.on('ready', () => setIsReady(true));\n        waveSurfer.on('audioprocess', () => {\n          setProgress(waveSurfer.getCurrentTime() / waveSurfer.getDuration() * 100);\n        });\n        waveSurfer.on('seek', progress => {\n          setProgress(progress * 100);\n        });\n        waveSurfer.on('destroy', () => {\n          controller.abort();\n        });\n        regions.on('region-created', region => {\n          regions.getRegions().forEach(r => {\n            if (r.id !== region.id) {\n              r.remove();\n            }\n          });\n        });\n\n        // Remove region if it's clicked again\n        try {\n          regions.on('region-clicked', (region, e) => {\n            e.stopPropagation(); // prevent triggering a click on the waveform\n            region.remove();\n          });\n        } catch (error) {\n          console.log(error);\n        }\n\n        // Allow region creation by dragging\n        regions.enableDragSelection({\n          color: 'rgba(245, 137, 5, 0.4)'\n        });\n        wavesurferRefs.current[index] = waveSurfer;\n      });\n      return () => {\n        wavesurferRefs.current.forEach(waveSurfer => waveSurfer.destroy());\n      };\n    }\n  }, [audioFiles]);\n  const handlePlaybackRateChange = rate => {\n    setSpeed(rate);\n    wavesurferRefs.current.forEach(waveSurfer => waveSurfer.setPlaybackRate(rate));\n  };\n  const regionToSend = async checked => {\n    setSendToAI(checked);\n    if (checked) {\n      // Get selected region\n      const selectedRegions = regions.getRegions();\n      if (selectedRegions.length === 0) {\n        alert(\"Please select a region first.\");\n        return;\n      }\n      const region = selectedRegions[0]; // Assuming one region at a time\n      const length = region.end - region.start;\n      if (length > 15) {\n        alert(\"Section is too long, please limit to 15 seconds or less.\");\n        return;\n      }\n      const audioBuffer = wavesurferRefs.current[0].backend.buffer;\n      const wavFileURL = bufferToWave(audioBuffer, startTime * audioBuffer.sampleRate, (endTime - startTime) * audioBuffer.sampleRate);\n      return wavFileURL;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: pagebackground,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: musicbackground,\n      children: audioFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: waveformStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: trackNameStyle,\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `waveform-${index}`,\n          style: {\n            width: '100%',\n            height: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AIMenu, {\n      handleBack: () => console.log(\"Back button clicked\") // Example handleBack function\n      ,\n      wavFileURL: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this), audioFiles && audioFiles.length > 0 ? /*#__PURE__*/_jsxDEV(PlayButton, {\n      playAllTracks: () => wavesurferRefs.current.forEach(waveSurfer => waveSurfer.playPause()),\n      forwardAllTracks: () => {\n        wavesurferRefs.current.forEach(waveSurfer => {\n          const currentTime = waveSurfer.getCurrentTime();\n          const duration = waveSurfer.getDuration();\n          waveSurfer.seekTo((currentTime + 5) / duration);\n        });\n      },\n      backwardAllTracks: () => {\n        wavesurferRefs.current.forEach(waveSurfer => {\n          const currentTime = waveSurfer.getCurrentTime();\n          waveSurfer.seekTo(Math.max((currentTime - 5) / waveSurfer.getDuration(), 0));\n        });\n      },\n      seekAllTracks: seekTo => wavesurferRefs.current.forEach(waveSurfer => waveSurfer.seekTo(seekTo)),\n      changeSpeedAllTracks: handlePlaybackRateChange,\n      isReady: isReady,\n      speed: speed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No audio tracks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 9\n  }, this);\n}\n_s(Landingpage, \"dK/LU+t3NJJfJRth0ItGrPDsyZM=\", false, function () {\n  return [useLocation];\n});\n_c = Landingpage;\nexport default Landingpage;\nvar _c;\n$RefreshReg$(_c, \"Landingpage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","WaveSurfer","RegionsPlugin","useLocation","Sidebar","cloud","PlayButton","jsxDEV","_jsxDEV","controller","AbortController","signal","pagebackground","backgroundSize","backgroundImage","backgroundPosition","padding","height","margin","display","flexDirection","fontFamily","musicbackground","width","position","top","right","justifyContent","alignItems","backgroundColor","marginTop","boxShadow","overflowY","trackNameStyle","color","fontSize","zIndex","borderRadius","waveformStyle","marginBottom","bufferToWave","abuffer","offset","len","numOfChan","numberOfChannels","length","buffer","ArrayBuffer","view","DataView","channels","i","sample","pos","setUint32","setUint16","sampleRate","push","getChannelData","Math","max","min","setInt16","URL","webkitURL","createObjectURL","Blob","type","data","Landingpage","_s","wavesurferRefs","location","audioFiles","state","isReady","setIsReady","speed","setSpeed","progress","setProgress","regions","create","current","forEach","file","index","waveSurfer","container","waveColor","progressColor","backend","plugins","load","url","catch","error","console","log","on","getCurrentTime","getDuration","abort","region","getRegions","r","id","remove","e","stopPropagation","enableDragSelection","destroy","handlePlaybackRateChange","rate","setPlaybackRate","regionToSend","checked","setSendToAI","selectedRegions","alert","end","start","audioBuffer","wavFileURL","startTime","endTime","style","children","map","name","fileName","_jsxFileName","lineNumber","columnNumber","AIMenu","handleBack","playAllTracks","playPause","forwardAllTracks","currentTime","duration","seekTo","backwardAllTracks","seekAllTracks","changeSpeedAllTracks","_c","$RefreshReg$"],"sources":["C:/Users/elect/Documents/CIS/4914/Mellowdies/mellowdies/src/Landingpage/Landingpage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport RegionsPlugin from \"wavesurfer.js/dist/plugins/regions.js\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport Sidebar from './Sidebar.js';\r\nimport cloud from '../images/cloud.png';\r\nimport PlayButton from './PlayButton.js';\r\nconst controller = new AbortController();\r\nconst signal = controller.signal\r\n\r\nconst pagebackground = {\r\n    backgroundSize: 'cover',\r\n    backgroundImage: `url(${cloud})`,\r\n    backgroundPosition: 'center',\r\n    padding: '10px',\r\n    height: '100vh',\r\n    margin: 0,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    fontFamily: 'Concert One',\r\n};\r\n\r\nconst musicbackground = {\r\n    width: '75%',\r\n    height: '80%',\r\n    position: 'fixed',\r\n    top: '0',\r\n    right: '0',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'left',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.3)',\r\n    marginTop: '5px',\r\n    boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\r\n    overflowY: 'auto',\r\n    padding: '10px',\r\n};\r\n\r\nconst trackNameStyle = {\r\n    position: 'relative',\r\n    color: '#000000',\r\n    fontSize: '0.8rem',\r\n    zIndex: '1002',\r\n    padding: '5px',\r\n    borderRadius: '5px',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.7)',\r\n};\r\n\r\nconst waveformStyle = {\r\n    width: '100%',\r\n    height: '75px',\r\n    position: 'relative',\r\n    marginBottom: '20px',\r\n};\r\n\r\nfunction bufferToWave(abuffer, offset, len) {\r\n\r\n    var numOfChan = abuffer.numberOfChannels,\r\n        length = len * numOfChan * 2 + 44,\r\n        buffer = new ArrayBuffer(length),\r\n        view = new DataView(buffer),\r\n        channels = [], i, sample,\r\n        pos = 0;\r\n  \r\n    // write WAVE header\r\n    setUint32(0x46464952);                         // \"RIFF\"\r\n    setUint32(length - 8);                         // file length - 8\r\n    setUint32(0x45564157);                         // \"WAVE\"\r\n  \r\n    setUint32(0x20746d66);                         // \"fmt \" chunk\r\n    setUint32(16);                                 // length = 16\r\n    setUint16(1);                                  // PCM (uncompressed)\r\n    setUint16(numOfChan);\r\n    setUint32(abuffer.sampleRate);\r\n    setUint32(abuffer.sampleRate * 2 * numOfChan); // avg. bytes/sec\r\n    setUint16(numOfChan * 2);                      // block-align\r\n    setUint16(16);                                 // 16-bit (hardcoded in this demo)\r\n  \r\n    setUint32(0x61746164);                         // \"data\" - chunk\r\n    setUint32(length - pos - 4);                   // chunk length\r\n  \r\n    // write interleaved data\r\n    for(i = 0; i < abuffer.numberOfChannels; i++)\r\n      channels.push(abuffer.getChannelData(i));\r\n  \r\n    while(pos < length) {\r\n      for(i = 0; i < numOfChan; i++) {             // interleave channels\r\n        sample = Math.max(-1, Math.min(1, channels[i][offset])); // clamp\r\n        sample = (0.5 + sample < 0 ? sample * 32768 : sample * 32767)|0; // scale to 16-bit signed int\r\n        view.setInt16(pos, sample, true);          // update data chunk\r\n        pos += 2;\r\n      }\r\n      offset++                                     // next source sample\r\n    }\r\n  \r\n    // create Blob\r\n    return (URL || webkitURL).createObjectURL(new Blob([buffer], {type: \"audio/wav\"}));\r\n  \r\n    function setUint16(data) {\r\n      view.setUint16(pos, data, true);\r\n      pos += 2;\r\n    }\r\n  \r\n    function setUint32(data) {\r\n      view.setUint32(pos, data, true);\r\n      pos += 4;\r\n    }\r\n}\r\n\r\nfunction Landingpage() {\r\n    const wavesurferRefs = useRef([]);\r\n    const location = useLocation();\r\n    const { audioFiles } = location.state || { audioFiles: [] };\r\n    const [isReady, setIsReady] = useState(false);\r\n    const [speed, setSpeed] = useState(1);\r\n    const [progress, setProgress] = useState(0);\r\n    const regions = RegionsPlugin.create();\r\n\r\n    useEffect(() => {\r\n        wavesurferRefs.current = [];\r\n        if (audioFiles && audioFiles.length > 0) {\r\n            audioFiles.forEach((file, index) => {\r\n                const waveSurfer = WaveSurfer.create({\r\n                    container: `#waveform-${index}`,\r\n                    waveColor: 'blue',\r\n                    progressColor: '#00FFFF',\r\n                    height: 75,\r\n                    backend: 'MediaElement',\r\n                    plugins: [regions],\r\n                });\r\n    \r\n                waveSurfer.load(file.url).catch(error => console.log(error));\r\n    \r\n                waveSurfer.on('ready', () => setIsReady(true));\r\n    \r\n                waveSurfer.on('audioprocess', () => {\r\n                    setProgress(waveSurfer.getCurrentTime() / waveSurfer.getDuration() * 100);\r\n                });\r\n    \r\n                waveSurfer.on('seek', (progress) => {\r\n                    setProgress(progress * 100);\r\n                });\r\n\r\n                waveSurfer.on('destroy', () => {\r\n                    controller.abort();\r\n                })\r\n                \r\n                regions.on('region-created', (region) => {\r\n                    regions.getRegions().forEach((r) => {\r\n                        if (r.id !== region.id) {\r\n                            r.remove();\r\n                        }\r\n                    });\r\n                });\r\n\r\n                // Remove region if it's clicked again\r\n                try {\r\n                    regions.on('region-clicked', (region, e) => {\r\n                        e.stopPropagation(); // prevent triggering a click on the waveform\r\n                        region.remove();\r\n                    });\r\n                } catch(error) {\r\n                    console.log(error);\r\n                }\r\n\r\n                // Allow region creation by dragging\r\n                regions.enableDragSelection({\r\n                    color: 'rgba(245, 137, 5, 0.4)',\r\n                });\r\n\r\n                    wavesurferRefs.current[index] = waveSurfer;\r\n                });\r\n        \r\n                return () => {\r\n                    wavesurferRefs.current.forEach(waveSurfer => waveSurfer.destroy());\r\n                };\r\n            }\r\n    }, [audioFiles]);\r\n\r\n    const handlePlaybackRateChange = (rate) => {\r\n        setSpeed(rate);\r\n        wavesurferRefs.current.forEach(waveSurfer => waveSurfer.setPlaybackRate(rate));\r\n    };\r\n\r\n    const regionToSend = async (checked) => {\r\n        setSendToAI(checked);\r\n\r\n        if (checked) {\r\n            // Get selected region\r\n            const selectedRegions = regions.getRegions();\r\n            if (selectedRegions.length === 0) {\r\n                alert(\"Please select a region first.\");\r\n                return;\r\n            }\r\n\r\n            const region = selectedRegions[0]; // Assuming one region at a time\r\n            const length = region.end - region.start;\r\n            if (length > 15) {\r\n                alert(\"Section is too long, please limit to 15 seconds or less.\");\r\n                return;\r\n            }\r\n            const audioBuffer = wavesurferRefs.current[0].backend.buffer;\r\n            const wavFileURL = bufferToWave(audioBuffer, startTime * audioBuffer.sampleRate, (endTime - startTime) * audioBuffer.sampleRate);\r\n\r\n            return wavFileURL;\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={pagebackground}>\r\n            <div style={musicbackground}>\r\n                {audioFiles.map((file, index) => (\r\n                    <div key={index} style={waveformStyle}>\r\n                        <div style={trackNameStyle}>{file.name}</div>\r\n                        <div id={`waveform-${index}`} style={{ width: '100%', height: '100%' }}></div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <Sidebar />\r\n\r\n            <AIMenu\r\n                handleBack={() => console.log(\"Back button clicked\")} // Example handleBack function\r\n                wavFileURL\r\n            />\r\n\r\n            {audioFiles && audioFiles.length > 0 ? (\r\n                <PlayButton\r\n                    playAllTracks={() => wavesurferRefs.current.forEach(waveSurfer => waveSurfer.playPause())}\r\n                    forwardAllTracks={() => {\r\n                        wavesurferRefs.current.forEach(waveSurfer => {\r\n                            const currentTime = waveSurfer.getCurrentTime();\r\n                            const duration = waveSurfer.getDuration();\r\n                            waveSurfer.seekTo((currentTime + 5) / duration);\r\n                        });\r\n                    }}\r\n                    backwardAllTracks={() => {\r\n                        wavesurferRefs.current.forEach(waveSurfer => {\r\n                            const currentTime = waveSurfer.getCurrentTime();\r\n                            waveSurfer.seekTo(Math.max((currentTime - 5) / waveSurfer.getDuration(), 0));\r\n                        });\r\n                    }}\r\n                    seekAllTracks={(seekTo) => wavesurferRefs.current.forEach(waveSurfer => waveSurfer.seekTo(seekTo))}\r\n                    changeSpeedAllTracks={handlePlaybackRateChange}\r\n                    isReady={isReady}\r\n                    speed={speed}\r\n                />\r\n            ) : (\r\n                <p>No audio tracks available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Landingpage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}