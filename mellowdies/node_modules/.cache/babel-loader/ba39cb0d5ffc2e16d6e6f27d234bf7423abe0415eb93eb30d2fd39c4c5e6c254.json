{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\james\\\\Downloads\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Landingpage.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport WaveSurfer from 'wavesurfer.js';\nimport WebAudioPlayer from 'wavesurfer.js/dist/webaudio.js';\nimport RegionsPlugin from 'wavesurfer.js/dist/plugins/regions.js';\nimport TimelinePlugin from 'wavesurfer.js/dist/plugins/timeline';\nimport Sidebar from './Sidebar.js';\nimport PlayButton from './PlayButton.js';\nimport './Landingpage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Landingpage = () => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const wavesurferRefs = useRef([]);\n  const containerRefs = useRef([]);\n  const [audioFiles, setAudioFiles] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.audioFiles) || []);\n  const [isReady, setIsReady] = useState(false);\n  const [speed, setSpeed] = useState(1);\n  const fileInputRef = useRef(null);\n  let longestDuration = 0;\n  useEffect(() => {\n    if (audioFiles && audioFiles.length > 0 && wavesurferRefs.current.length === 0) {\n      setTimeout(() => initializeWaveSurfers(), 100);\n    }\n  }, [audioFiles]);\n  const initializeWaveSurfers = () => {\n    wavesurferRefs.current = [];\n    audioFiles.forEach((file, index) => {\n      const container = containerRefs.current[index];\n      if (!container) {\n        console.warn(`No container found for index ${index}`);\n        return;\n      }\n      const waveSurfer = WaveSurfer.create({\n        container,\n        waveColor: 'blue',\n        progressColor: '#00FFFF',\n        height: 75,\n        cursorWidth: 2,\n        cursorColor: '#FF0000',\n        plugins: [RegionsPlugin.create(), TimelinePlugin.create({\n          container: container.previousSibling,\n          primaryColor: '#000',\n          secondaryColor: '#999'\n        })]\n      });\n      waveSurfer.on('ready', () => {\n        setIsReady(true);\n        const duration = waveSurfer.getDuration();\n        longestDuration = Math.max(longestDuration, duration);\n      });\n      waveSurfer.on('region-created', region => {\n        region.color = 'rgba(255, 140, 0, 0.3)';\n      });\n      waveSurfer.load(file.url);\n      wavesurferRefs.current[index] = waveSurfer;\n    });\n  };\n  const handleFileSelection = event => {\n    const selectedFiles = Array.from(event.target.files).map(file => ({\n      name: file.name,\n      url: URL.createObjectURL(file),\n      mimeType: file.type\n    }));\n    if (selectedFiles.length > 0) {\n      setAudioFiles(prev => [...prev, ...selectedFiles]);\n    } else {\n      alert('No audio files selected.');\n    }\n  };\n  const exportTracks = async () => {\n    const buffer = wavesurferRefs.current[0].getDecodedData(); // Simplified for single track logic\n    const blob = new Blob([buffer], {\n      type: 'audio/wav'\n    }); // Example for demonstration\n    navigate('/Exportpage', {\n      state: {\n        mergedAudio: URL.createObjectURL(blob)\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagebackground\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"musicbackground\",\n      children: audioFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trackNameStyle\",\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"timeline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"waveformStyle\",\n          ref: el => containerRefs.current[index] = el\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      waveData: wavesurferRefs.current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), audioFiles.length > 0 ? /*#__PURE__*/_jsxDEV(PlayButton, {\n      wavesurferRefs: wavesurferRefs,\n      setSpeed: setSpeed,\n      isReady: isReady,\n      speed: speed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No audio tracks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"exportButton\",\n      onClick: exportTracks,\n      children: \"Export\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      accept: \"audio/*\",\n      ref: fileInputRef,\n      style: {\n        display: 'none'\n      },\n      onChange: handleFileSelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(Landingpage, \"6lP/xuVgTSYfgOYzgRuLv01Tf8o=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Landingpage;\nexport default Landingpage;\nvar _c;\n$RefreshReg$(_c, \"Landingpage\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useNavigate","useLocation","WaveSurfer","WebAudioPlayer","RegionsPlugin","TimelinePlugin","Sidebar","PlayButton","jsxDEV","_jsxDEV","Landingpage","_s","_location$state","navigate","location","wavesurferRefs","containerRefs","audioFiles","setAudioFiles","state","isReady","setIsReady","speed","setSpeed","fileInputRef","longestDuration","length","current","setTimeout","initializeWaveSurfers","forEach","file","index","container","console","warn","waveSurfer","create","waveColor","progressColor","height","cursorWidth","cursorColor","plugins","previousSibling","primaryColor","secondaryColor","on","duration","getDuration","Math","max","region","color","load","url","handleFileSelection","event","selectedFiles","Array","from","target","files","map","name","URL","createObjectURL","mimeType","type","prev","alert","exportTracks","buffer","getDecodedData","blob","Blob","mergedAudio","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","ref","el","waveData","onClick","multiple","accept","style","display","onChange","_c","$RefreshReg$"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/src/Landingpage/Landingpage.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport WebAudioPlayer from 'wavesurfer.js/dist/webaudio.js';\r\nimport RegionsPlugin from 'wavesurfer.js/dist/plugins/regions.js';\r\nimport TimelinePlugin from 'wavesurfer.js/dist/plugins/timeline';\r\nimport Sidebar from './Sidebar.js';\r\nimport PlayButton from './PlayButton.js';\r\nimport './Landingpage.css';\r\n\r\nconst Landingpage = () => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const wavesurferRefs = useRef([]);\r\n    const containerRefs = useRef([]);\r\n    const [audioFiles, setAudioFiles] = useState(location.state?.audioFiles || []);\r\n    const [isReady, setIsReady] = useState(false);\r\n    const [speed, setSpeed] = useState(1);\r\n    const fileInputRef = useRef(null);\r\n    let longestDuration = 0;\r\n\r\n    useEffect(() => {\r\n        if (audioFiles && audioFiles.length > 0 && wavesurferRefs.current.length === 0) {\r\n            setTimeout(() => initializeWaveSurfers(), 100);\r\n        }\r\n    }, [audioFiles]);\r\n\r\n    const initializeWaveSurfers = () => {\r\n        wavesurferRefs.current = [];\r\n        audioFiles.forEach((file, index) => {\r\n            const container = containerRefs.current[index];\r\n            if (!container) {\r\n                console.warn(`No container found for index ${index}`);\r\n                return;\r\n            }\r\n\r\n            const waveSurfer = WaveSurfer.create({\r\n                container,\r\n                waveColor: 'blue',\r\n                progressColor: '#00FFFF',\r\n                height: 75,\r\n                cursorWidth: 2,\r\n                cursorColor: '#FF0000',\r\n                plugins: [\r\n                    RegionsPlugin.create(),\r\n                    TimelinePlugin.create({\r\n                        container: container.previousSibling,\r\n                        primaryColor: '#000',\r\n                        secondaryColor: '#999',\r\n                    }),\r\n                ],\r\n            });\r\n\r\n            waveSurfer.on('ready', () => {\r\n                setIsReady(true);\r\n                const duration = waveSurfer.getDuration();\r\n                longestDuration = Math.max(longestDuration, duration);\r\n            });\r\n\r\n            waveSurfer.on('region-created', (region) => {\r\n                region.color = 'rgba(255, 140, 0, 0.3)';\r\n            });\r\n\r\n            waveSurfer.load(file.url);\r\n            wavesurferRefs.current[index] = waveSurfer;\r\n        });\r\n    };\r\n\r\n    const handleFileSelection = (event) => {\r\n        const selectedFiles = Array.from(event.target.files).map((file) => ({\r\n            name: file.name,\r\n            url: URL.createObjectURL(file),\r\n            mimeType: file.type,\r\n        }));\r\n\r\n        if (selectedFiles.length > 0) {\r\n            setAudioFiles((prev) => [...prev, ...selectedFiles]);\r\n        } else {\r\n            alert('No audio files selected.');\r\n        }\r\n    };\r\n\r\n    const exportTracks = async () => {\r\n        const buffer = wavesurferRefs.current[0].getDecodedData(); // Simplified for single track logic\r\n        const blob = new Blob([buffer], { type: 'audio/wav' }); // Example for demonstration\r\n        navigate('/Exportpage', { state: { mergedAudio: URL.createObjectURL(blob) } });\r\n    };\r\n\r\n    return (\r\n        <div className=\"pagebackground\">\r\n            <div className=\"musicbackground\">\r\n                {audioFiles.map((file, index) => (\r\n                    <div key={index}>\r\n                        <div className=\"trackNameStyle\">{file.name}</div>\r\n                        <div id=\"timeline\"></div>\r\n                        <div className=\"waveformStyle\" ref={(el) => (containerRefs.current[index] = el)}></div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <Sidebar waveData={wavesurferRefs.current} />\r\n\r\n            {audioFiles.length > 0 ? (\r\n                <PlayButton\r\n                    wavesurferRefs={wavesurferRefs}\r\n                    setSpeed={setSpeed}\r\n                    isReady={isReady}\r\n                    speed={speed}\r\n                />\r\n            ) : (\r\n                <p>No audio tracks available.</p>\r\n            )}\r\n\r\n            <button\r\n                className=\"exportButton\"\r\n                onClick={exportTracks}\r\n            >\r\n                Export\r\n            </button>\r\n\r\n            <input\r\n                type=\"file\"\r\n                multiple\r\n                accept=\"audio/*\"\r\n                ref={fileInputRef}\r\n                style={{ display: 'none' }}\r\n                onChange={handleFileSelection}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Landingpage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,aAAa,MAAM,uCAAuC;AACjE,OAAOC,cAAc,MAAM,qCAAqC;AAChE,OAAOC,OAAO,MAAM,cAAc;AAClC,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA;EACtB,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,cAAc,GAAGlB,MAAM,CAAC,EAAE,CAAC;EACjC,MAAMmB,aAAa,GAAGnB,MAAM,CAAC,EAAE,CAAC;EAChC,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,EAAAc,eAAA,GAAAE,QAAQ,CAACK,KAAK,cAAAP,eAAA,uBAAdA,eAAA,CAAgBK,UAAU,KAAI,EAAE,CAAC;EAC9E,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM0B,YAAY,GAAG3B,MAAM,CAAC,IAAI,CAAC;EACjC,IAAI4B,eAAe,GAAG,CAAC;EAEvB1B,SAAS,CAAC,MAAM;IACZ,IAAIkB,UAAU,IAAIA,UAAU,CAACS,MAAM,GAAG,CAAC,IAAIX,cAAc,CAACY,OAAO,CAACD,MAAM,KAAK,CAAC,EAAE;MAC5EE,UAAU,CAAC,MAAMC,qBAAqB,CAAC,CAAC,EAAE,GAAG,CAAC;IAClD;EACJ,CAAC,EAAE,CAACZ,UAAU,CAAC,CAAC;EAEhB,MAAMY,qBAAqB,GAAGA,CAAA,KAAM;IAChCd,cAAc,CAACY,OAAO,GAAG,EAAE;IAC3BV,UAAU,CAACa,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAChC,MAAMC,SAAS,GAAGjB,aAAa,CAACW,OAAO,CAACK,KAAK,CAAC;MAC9C,IAAI,CAACC,SAAS,EAAE;QACZC,OAAO,CAACC,IAAI,CAAC,gCAAgCH,KAAK,EAAE,CAAC;QACrD;MACJ;MAEA,MAAMI,UAAU,GAAGlC,UAAU,CAACmC,MAAM,CAAC;QACjCJ,SAAS;QACTK,SAAS,EAAE,MAAM;QACjBC,aAAa,EAAE,SAAS;QACxBC,MAAM,EAAE,EAAE;QACVC,WAAW,EAAE,CAAC;QACdC,WAAW,EAAE,SAAS;QACtBC,OAAO,EAAE,CACLvC,aAAa,CAACiC,MAAM,CAAC,CAAC,EACtBhC,cAAc,CAACgC,MAAM,CAAC;UAClBJ,SAAS,EAAEA,SAAS,CAACW,eAAe;UACpCC,YAAY,EAAE,MAAM;UACpBC,cAAc,EAAE;QACpB,CAAC,CAAC;MAEV,CAAC,CAAC;MAEFV,UAAU,CAACW,EAAE,CAAC,OAAO,EAAE,MAAM;QACzB1B,UAAU,CAAC,IAAI,CAAC;QAChB,MAAM2B,QAAQ,GAAGZ,UAAU,CAACa,WAAW,CAAC,CAAC;QACzCxB,eAAe,GAAGyB,IAAI,CAACC,GAAG,CAAC1B,eAAe,EAAEuB,QAAQ,CAAC;MACzD,CAAC,CAAC;MAEFZ,UAAU,CAACW,EAAE,CAAC,gBAAgB,EAAGK,MAAM,IAAK;QACxCA,MAAM,CAACC,KAAK,GAAG,wBAAwB;MAC3C,CAAC,CAAC;MAEFjB,UAAU,CAACkB,IAAI,CAACvB,IAAI,CAACwB,GAAG,CAAC;MACzBxC,cAAc,CAACY,OAAO,CAACK,KAAK,CAAC,GAAGI,UAAU;IAC9C,CAAC,CAAC;EACN,CAAC;EAED,MAAMoB,mBAAmB,GAAIC,KAAK,IAAK;IACnC,MAAMC,aAAa,GAAGC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACI,MAAM,CAACC,KAAK,CAAC,CAACC,GAAG,CAAEhC,IAAI,KAAM;MAChEiC,IAAI,EAAEjC,IAAI,CAACiC,IAAI;MACfT,GAAG,EAAEU,GAAG,CAACC,eAAe,CAACnC,IAAI,CAAC;MAC9BoC,QAAQ,EAAEpC,IAAI,CAACqC;IACnB,CAAC,CAAC,CAAC;IAEH,IAAIV,aAAa,CAAChC,MAAM,GAAG,CAAC,EAAE;MAC1BR,aAAa,CAAEmD,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE,GAAGX,aAAa,CAAC,CAAC;IACxD,CAAC,MAAM;MACHY,KAAK,CAAC,0BAA0B,CAAC;IACrC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,MAAM,GAAGzD,cAAc,CAACY,OAAO,CAAC,CAAC,CAAC,CAAC8C,cAAc,CAAC,CAAC,CAAC,CAAC;IAC3D,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACH,MAAM,CAAC,EAAE;MAAEJ,IAAI,EAAE;IAAY,CAAC,CAAC,CAAC,CAAC;IACxDvD,QAAQ,CAAC,aAAa,EAAE;MAAEM,KAAK,EAAE;QAAEyD,WAAW,EAAEX,GAAG,CAACC,eAAe,CAACQ,IAAI;MAAE;IAAE,CAAC,CAAC;EAClF,CAAC;EAED,oBACIjE,OAAA;IAAKoE,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BrE,OAAA;MAAKoE,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC3B7D,UAAU,CAAC8C,GAAG,CAAC,CAAChC,IAAI,EAAEC,KAAK,kBACxBvB,OAAA;QAAAqE,QAAA,gBACIrE,OAAA;UAAKoE,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAE/C,IAAI,CAACiC;QAAI;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACjDzE,OAAA;UAAK0E,EAAE,EAAC;QAAU;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACzBzE,OAAA;UAAKoE,SAAS,EAAC,eAAe;UAACO,GAAG,EAAGC,EAAE,IAAMrE,aAAa,CAACW,OAAO,CAACK,KAAK,CAAC,GAAGqD;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAHjFlD,KAAK;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAENzE,OAAA,CAACH,OAAO;MAACgF,QAAQ,EAAEvE,cAAc,CAACY;IAAQ;MAAAoD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAE5CjE,UAAU,CAACS,MAAM,GAAG,CAAC,gBAClBjB,OAAA,CAACF,UAAU;MACPQ,cAAc,EAAEA,cAAe;MAC/BQ,QAAQ,EAAEA,QAAS;MACnBH,OAAO,EAAEA,OAAQ;MACjBE,KAAK,EAAEA;IAAM;MAAAyD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,gBAEFzE,OAAA;MAAAqE,QAAA,EAAG;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACnC,eAEDzE,OAAA;MACIoE,SAAS,EAAC,cAAc;MACxBU,OAAO,EAAEhB,YAAa;MAAAO,QAAA,EACzB;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETzE,OAAA;MACI2D,IAAI,EAAC,MAAM;MACXoB,QAAQ;MACRC,MAAM,EAAC,SAAS;MAChBL,GAAG,EAAE5D,YAAa;MAClBkE,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAC3BC,QAAQ,EAAEpC;IAAoB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACvE,EAAA,CAzHID,WAAW;EAAA,QACIV,WAAW,EACXC,WAAW;AAAA;AAAA4F,EAAA,GAF1BnF,WAAW;AA2HjB,eAAeA,WAAW;AAAC,IAAAmF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}