{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elect\\\\Documents\\\\CIS\\\\4914\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Menu.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst menubackground = {\n  width: '25%',\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'flex-start',\n  alignItems: 'left',\n  border: '2px solid #ffffff',\n  backgroundColor: '#ffffff',\n  fontFamily: \"'Concert One', cursive\",\n  fontSize: '1.2rem',\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\n  border: 'none',\n  position: 'fixed',\n  top: '0',\n  left: '0',\n  zIndex: '1000',\n  paddingTop: '20px',\n  overflowY: 'auto',\n  // Enable vertical scrolling\n  maxHeight: '100%' // Set a maximum height for the menu\n};\nconst backButtonStyle = {\n  marginTop: '10px',\n  background: '#007bff',\n  color: '#fff',\n  border: 'none',\n  padding: '10px 20px',\n  borderRadius: '5px',\n  cursor: 'pointer',\n  fontSize: '16px',\n  textAlign: 'center',\n  width: 'auto',\n  display: 'inline-block',\n  transition: 'background 0.3s ease'\n};\nconst reverseButtonStyle = {\n  ...backButtonStyle,\n  background: '#ff5722' // Different color for reverse button\n};\nconst sliderStyle = {\n  width: '80%',\n  margin: '10px auto'\n};\nconst adjustGainButtonStyle = {\n  ...backButtonStyle,\n  background: '#4caf50' // Different color for adjust gain button\n};\nconst modalStyle = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 'auto',\n  height: 'auto',\n  backgroundColor: '#fff',\n  padding: '20px',\n  borderRadius: '10px',\n  boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.3)',\n  zIndex: '1001'\n};\nconst overlayStyle = {\n  position: 'fixed',\n  top: '0',\n  left: '0',\n  right: '0',\n  bottom: '0',\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  zIndex: '1000'\n};\nconst contentStyle = {\n  flexGrow: 1,\n  paddingTop: '20px'\n};\nconst verticalSliderStyle = {\n  type: 'range',\n  orient: 'vertical',\n  appearance: 'slider-vertical',\n  width: '8%'\n};\nvar utils = require(\"audio-buffer-utils\");\nvar blobber = require('audiobuffer-to-blob');\nfunction combFilter(samples, sampleLength, delay, decay, sampleRate) {\n  let delaySamples = Math.ceil(delay * (sampleRate / 1000));\n  let combFilterSamples = samples;\n  for (let i = 0; i < sampleLength - delaySamples; i++) {\n    combFilterSamples[i + delaySamples] += combFilterSamples[i] * decay;\n  }\n  return combFilterSamples;\n}\nfunction allPassFilter(samples, sampleLength, sampleRate) {\n  let delaySamples = Math.ceil(88.69 * (sampleRate / 1000));\n  let allPassFilterSamples = new Float32Array(sampleLength);\n  let decayFactor = 0.131;\n  for (let i = 0; i < sampleLength; i++) {\n    allPassFilterSamples[i] = samples[i];\n    if (i - delaySamples >= 0) {\n      allPassFilterSamples[i] += allPassFilterSamples[i - delaySamples] * -decayFactor;\n    }\n    if (i - delaySamples >= 1) {\n      allPassFilterSamples[i] += allPassFilterSamples[i + 20 - delaySamples] * decayFactor;\n    }\n  }\n  let val = allPassFilterSamples[0];\n  let max = 0.0;\n  for (let i = 0; i < sampleLength; i++) {\n    if (Math.abs(allPassFilterSamples[i]) > max) {\n      max = Math.abs(allPassFilterSamples[i]);\n    }\n  }\n  for (let i = 0; i < allPassFilterSamples.length; i++) {\n    let currVal = allPassFilterSamples[i];\n    val = (val + (currVal - val)) / max;\n    allPassFilterSamples[i] = val;\n  }\n  return allPassFilterSamples;\n}\nfunction Menu({\n  handleBack,\n  waveData\n}) {\n  _s();\n  const [isGainModalOpen, setGainModalOpen] = useState(false);\n  const [isDelayModalOpen, setDelayModalOpen] = useState(false);\n  const [isDistortionModalOpen, setDistortionModalOpen] = useState(false);\n  const [isReverbModalOpen, setReverbModalOpen] = useState(false);\n  const [isEquaModalOpen, setEquaModalOpen] = useState(false);\n  const [isEquaInit, setEquaInit] = useState(false);\n  const [gainValue, setGainValue] = useState(100);\n  const [delayTime, setDelayTime] = useState(0.00);\n  const [feedback, setFeedback] = useState(0.00);\n  const [wetness, setWetness] = useState(0.00);\n  const [dryness, setDryness] = useState(0.00);\n  const [gainDistortValue, setGainDistortValue] = useState(100);\n  const [reverbTime, setReverbTime] = useState(0.00);\n  const [decay, setDecay] = useState(0.00);\n  const [reverbWet, setReverbWet] = useState(0.00);\n  const eqBands = [32, 64, 125, 250, 500, 1000, 2000, 4000, 8000, 16000];\n  let aContext = waveData[0].webAudioPlayer.audioContext;\n  const updateFilter = gainValue => {};\n  const filters = eqBands.map(band => {\n    const filter = aContext.createBiquadFilter();\n    filter.type = band <= 32 ? 'lowshelf' : band >= 16000 ? 'highshelf' : 'peaking';\n    filter.gain.value = Math.random() * 40 - 20;\n    filter.Q.value = 1; // resonance\n    filter.frequency.value = band; // the cut-off frequency\n    return filter;\n  });\n  if (isEquaInit === false) {\n    const eqNode = aContext.createGain();\n    // Connect the filters and media node sequentially\n    const equalizer = filters.reduce((prev, curr) => {\n      prev.connect(curr);\n      return curr;\n    }, eqNode);\n    // Connect the filters to the audio output\n    equalizer.connect(aContext.destination);\n    console.log(filters);\n    console.log(equalizer);\n  }\n  const reverse = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    if (buffer) {\n      utils.reverse(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n      console.log(\"Reversed region.\");\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    } else {\n      console.error('No audio buffer loaded');\n    }\n  };\n  const invert = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    if (buffer) {\n      utils.invert(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n      console.log(\"Inverted region.\");\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    } else {\n      console.error('No audio buffer loaded');\n    }\n  };\n  const normalize = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    if (buffer) {\n      utils.normalize(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n      console.log(\"Normalized region.\");\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    } else {\n      console.error('No audio buffer loaded');\n    }\n  };\n  const openGainModal = () => setGainModalOpen(true);\n  const closeGainModal = () => setGainModalOpen(false);\n  const adjustGain = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let gain = gainValue / 100;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] *= gain;\n        }\n      }\n      console.log('Gain adjusted:', gain);\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const fadeIn = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let stepInc = 1 / (end - start);\n    let currGain = 0;\n    let steps = 0;\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] *= currGain + steps * stepInc;\n          steps += 1;\n        }\n        steps = 0;\n      }\n      console.log('Region Faded In');\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const fadeOut = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let stepInc = 1 / (end - start);\n    let currGain = 1;\n    let steps = 0;\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] *= currGain - steps * stepInc;\n          steps += 1;\n        }\n        steps = 0;\n      }\n      console.log('Region Faded In');\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const openDistortionModal = () => setDistortionModalOpen(true);\n  const closeDistortionModal = () => setDistortionModalOpen(false);\n  const distort = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let gain = gainDistortValue / 100;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] = Math.atan(gain * channelData[sample]);\n        }\n      }\n      console.log('Distorted Region', gain);\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const openDelayModal = () => setDelayModalOpen(true);\n  const closeDelayModal = () => setDelayModalOpen(false);\n  const delay = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let delayLen = delayTime;\n    let delaySamples = Math.ceil(delayLen * sampleRate);\n    let wet = wetness;\n    let dry = dryness;\n    let feeder = feedback;\n    let index = 0;\n    if (buffer) {\n      let numChannels = buffer.numberOfChannels;\n      if (numChannels === 1) {\n        let channelData = buffer.getChannelData(0);\n        let delayBuffer = new Float32Array(channelData.subarray(start, end + 1));\n        for (let sample = start; sample < end; sample += 1) {\n          let delayed = delayBuffer[index];\n          channelData[sample] = channelData[sample] * dry + delayed * wet;\n          delayBuffer[index] = feeder * (delayed + channelData[sample]);\n          index += 1;\n        }\n      } else if (numChannels === 2) {\n        let channelLeft = buffer.getChannelData(0);\n        let channelRight = buffer.getChannelData(1);\n        let delayLeft = new Float32Array(channelLeft.subarray(start, end + 1));\n        let delayRight = new Float32Array(channelRight.subarray(start, end + 1));\n        delayLeft = channelLeft;\n        delayRight = channelRight;\n        for (let sample = start; sample < end; sample += 1) {\n          let delayed_left = delayLeft[index];\n          let delayed_right = delayRight[index];\n          channelLeft[sample] = channelLeft[sample] * dry + delayed_left * wet;\n          channelRight[sample] = channelRight[sample] * dry + delayed_right * wet;\n          delayLeft[index] = feeder * (delayed_left + channelLeft[sample]);\n          delayRight[index] = feeder * (delayed_right + channelRight[sample]);\n          index += 1;\n        }\n      }\n      console.log('Region Delayed');\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const openReverbModal = () => setReverbModalOpen(true);\n  const closeReverbModal = () => setReverbModalOpen(false);\n  const reverb = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let bufferSize = end - start;\n    let channelLeft = buffer.getChannelData(0);\n    let channelRight = buffer.getChannelData(1);\n    let samplesLeft = new Float32Array(channelLeft.subarray(start, end + 1));\n    let samplesRight = new Float32Array(channelRight.subarray(start, end + 1));\n    let delayinMilliSeconds = reverbTime * 1000;\n    let decayFactor = decay;\n    let combFilterSamplesLeft1 = combFilter(samplesLeft, bufferSize, delayinMilliSeconds, decayFactor, sampleRate);\n    let combFilterSamplesLeft2 = combFilter(samplesLeft, bufferSize, delayinMilliSeconds - 11.73, decayFactor - 0.1313, sampleRate);\n    let combFilterSamplesRight1 = combFilter(samplesRight, bufferSize, delayinMilliSeconds, decayFactor, sampleRate);\n    let combFilterSamplesRight2 = combFilter(samplesRight, bufferSize, delayinMilliSeconds - 11.73, decayFactor - 0.1313, sampleRate);\n    let outputCombLeft = new Float32Array(bufferSize);\n    let outputCombRight = new Float32Array(bufferSize);\n    for (let i = 0; i < bufferSize; i++) {\n      outputCombLeft[i] = combFilterSamplesLeft1[i] + combFilterSamplesLeft2[i];\n    }\n    for (let i = 0; i < bufferSize; i++) {\n      outputCombRight[i] = combFilterSamplesRight1[i] + combFilterSamplesRight2[i];\n    }\n    let audioMixLeft = new Float32Array(bufferSize);\n    let audioMixRight = new Float32Array(bufferSize);\n    for (let i = 0; i < bufferSize; i++) {\n      audioMixLeft[i] = (1 - reverbWet) * samplesLeft[i] + reverbWet * outputCombLeft[i];\n    }\n    for (let i = 0; i < bufferSize; i++) {\n      audioMixRight[i] = (1 - reverbWet) * samplesRight[i] + reverbWet * outputCombRight[i];\n    }\n    let allPassFilterSamplesLeft1 = allPassFilter(audioMixLeft, bufferSize, sampleRate);\n    let allPassFilterSamplesLeft2 = allPassFilter(allPassFilterSamplesLeft1, bufferSize, sampleRate);\n    let allPassFilterSamplesRight1 = allPassFilter(audioMixRight, bufferSize, sampleRate);\n    let allPassFilterSamplesRight2 = allPassFilter(allPassFilterSamplesRight1, bufferSize, sampleRate);\n    for (let i = 0; i < bufferSize; i++) {\n      channelLeft[start + i] = allPassFilterSamplesLeft2[i];\n      channelRight[start + i] = allPassFilterSamplesRight2[i];\n    }\n    console.log('Reverb Applied');\n    let blob = blobber(buffer);\n    waveData[0].waveSurfer.empty();\n    waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n  };\n  const closeEquaModal = () => setEquaModalOpen(false);\n  const openEquaModal = () => {\n    setEquaInit(true);\n    setEquaModalOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: menubackground,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: contentStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: backButtonStyle,\n        onClick: handleBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: reverse,\n        children: \"Reverse Selected Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: invert,\n        children: \"Invert Selected Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: normalize,\n        children: \"Normalize Selected Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: fadeIn,\n        children: \"Fade In Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: fadeOut,\n        children: \"Fade Out Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: openGainModal,\n        children: \"Adjust Gain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this), isGainModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: overlayStyle,\n          onClick: closeGainModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Gain Percentage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"gains\",\n            type: \"range\",\n            min: \"0\",\n            max: \"200\",\n            step: \"0.01\",\n            value: gainValue,\n            onInput: e => setGainValue(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"gainVal\",\n            children: [gainValue, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeGainModal,\n            style: backButtonStyle,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: adjustGain,\n            style: backButtonStyle,\n            children: \"Apply Gain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: openDelayModal,\n        children: \"Adjust Delay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this), isDelayModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: overlayStyle,\n          onClick: closeDelayModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Delay Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"delayT\",\n            type: \"range\",\n            min: \"0\",\n            max: \"6\",\n            step: \"0.01\",\n            value: delayTime,\n            onInput: e => setDelayTime(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"delayVal\",\n            children: delayTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"feedback\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: feedback,\n            onInput: e => setFeedback(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"feedVal\",\n            children: feedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Wet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"wets\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: wetness,\n            onInput: e => setWetness(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"wetVal\",\n            children: wetness\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Dry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"dryer\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: dryness,\n            onInput: e => setDryness(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"dryVal\",\n            children: dryness\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeDelayModal,\n            style: backButtonStyle,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: delay,\n            style: backButtonStyle,\n            children: \"Apply Delay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: openDistortionModal,\n        children: \"Apply Distortion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this), isDistortionModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: overlayStyle,\n          onClick: closeDistortionModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Gain Percentage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"gains\",\n            type: \"range\",\n            min: \"0\",\n            max: \"200\",\n            step: \"0.01\",\n            value: gainDistortValue,\n            onInput: e => setGainDistortValue(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"gainDistortVal\",\n            children: [gainDistortValue, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeDistortionModal,\n            style: backButtonStyle,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: distort,\n            style: backButtonStyle,\n            children: \"Apply Distortion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: openReverbModal,\n        children: \"Apply Reverb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 9\n      }, this), isReverbModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: overlayStyle,\n          onClick: closeReverbModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"reverbT\",\n            type: \"range\",\n            min: \"0\",\n            max: \"3\",\n            step: \"0.01\",\n            value: reverbTime,\n            onInput: e => setReverbTime(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"reverbTime\",\n            children: reverbTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Decay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"decay\",\n            type: \"range\",\n            min: \"0\",\n            max: \"3\",\n            step: \"0.01\",\n            value: decay,\n            onInput: e => setDecay(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"decayVal\",\n            children: decay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Wet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"wetR\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: reverbWet,\n            onInput: e => setReverbWet(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"wetRVal\",\n            children: reverbWet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeReverbModal,\n            style: backButtonStyle,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: reverb,\n            style: backButtonStyle,\n            children: \"Apply Reverb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: openEquaModal,\n        children: \"Parametric Equalizer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this), isEquaModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: overlayStyle,\n          onClick: closeEquaModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"32\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"32hz\",\n            type: \"range\",\n            orient: \"vertical\",\n            min: \"-40\",\n            max: \"40\",\n            step: \"0.1\",\n            value: filters[0].gain.value,\n            onInput: e => filters[0].gain.value = e.target.value,\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"band1\",\n            children: filters[0].gain.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"64\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"64hz\",\n            type: \"range\",\n            orient: \"vertical\",\n            min: \"-40\",\n            max: \"40\",\n            step: \"0.1\",\n            value: filters[1].gain.value,\n            onInput: e => filters[1].gain.value = e.target.value,\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"125\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"125hz\",\n            type: \"range\",\n            orient: \"vertical\",\n            min: \"-40\",\n            max: \"40\",\n            step: \"0.1\",\n            value: filters[2].gain.value,\n            onInput: e => filters[2].gain.value = e.target.value,\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"250\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"250hz\",\n            type: \"range\",\n            orient: \"vertical\",\n            min: \"-40\",\n            max: \"40\",\n            step: \"0.1\",\n            value: filters[3].gain.value,\n            onInput: e => filters[3].gain.value = e.target.value,\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"500hz\",\n            type: \"range\",\n            orient: \"vertical\",\n            min: \"-40\",\n            max: \"40\",\n            step: \"0.1\",\n            value: filters[4].gain.value,\n            onInput: e => filters[4].gain.value = e.target.value,\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"1000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"1000hz\",\n            type: \"range\",\n            orient: \"vertical\",\n            min: \"-40\",\n            max: \"40\",\n            step: \"0.1\",\n            value: filters[5].gain.value,\n            onInput: e => filters[5].gain.value = e.target.value,\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"2000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"2000hz\",\n            type: \"range\",\n            orient: \"vertical\",\n            min: \"-40\",\n            max: \"40\",\n            step: \"0.1\",\n            value: filters[6].gain.value,\n            onInput: e => filters[6].gain.value = e.target.value,\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"4000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"4000hz\",\n            type: \"range\",\n            orient: \"vertical\",\n            min: \"-40\",\n            max: \"40\",\n            step: \"0.1\",\n            value: filters[7].gain.value,\n            onInput: e => filters[7].gain.value = e.target.value,\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"8000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"8000hz\",\n            type: \"range\",\n            orient: \"vertical\",\n            min: \"-40\",\n            max: \"40\",\n            step: \"0.1\",\n            value: filters[8].gain.value,\n            onInput: e => filters[8].gain.value = e.target.value,\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"16000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"16000hz\",\n            type: \"range\",\n            orient: \"vertical\",\n            min: \"-40\",\n            max: \"40\",\n            step: \"0.1\",\n            value: filters[9].gain.value,\n            onInput: e => filters[9].gain.value = e.target.value,\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeEquaModal,\n            style: backButtonStyle,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 437,\n    columnNumber: 5\n  }, this);\n}\n_s(Menu, \"GsZ8TChULQwOFQ8gfgNR0JLBYhE=\");\n_c = Menu;\nexport default Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","menubackground","width","height","display","flexDirection","justifyContent","alignItems","border","backgroundColor","fontFamily","fontSize","boxShadow","position","top","left","zIndex","paddingTop","overflowY","maxHeight","backButtonStyle","marginTop","background","color","padding","borderRadius","cursor","textAlign","transition","reverseButtonStyle","sliderStyle","margin","adjustGainButtonStyle","modalStyle","transform","overlayStyle","right","bottom","contentStyle","flexGrow","verticalSliderStyle","type","orient","appearance","utils","require","blobber","combFilter","samples","sampleLength","delay","decay","sampleRate","delaySamples","Math","ceil","combFilterSamples","i","allPassFilter","allPassFilterSamples","Float32Array","decayFactor","val","max","abs","length","currVal","Menu","handleBack","waveData","_s","isGainModalOpen","setGainModalOpen","isDelayModalOpen","setDelayModalOpen","isDistortionModalOpen","setDistortionModalOpen","isReverbModalOpen","setReverbModalOpen","isEquaModalOpen","setEquaModalOpen","isEquaInit","setEquaInit","gainValue","setGainValue","delayTime","setDelayTime","feedback","setFeedback","wetness","setWetness","dryness","setDryness","gainDistortValue","setGainDistortValue","reverbTime","setReverbTime","setDecay","reverbWet","setReverbWet","eqBands","aContext","webAudioPlayer","audioContext","updateFilter","filters","map","band","filter","createBiquadFilter","gain","value","random","Q","frequency","eqNode","createGain","equalizer","reduce","prev","curr","connect","destination","console","log","reverse","buffer","waveSurfer","getDecodedData","region","regions","getRegions","start","end","blob","empty","loadBlob","catch","error","invert","normalize","openGainModal","closeGainModal","adjustGain","floor","channel","numberOfChannels","channelData","getChannelData","sample","fadeIn","stepInc","currGain","steps","fadeOut","openDistortionModal","closeDistortionModal","distort","atan","openDelayModal","closeDelayModal","delayLen","wet","dry","feeder","index","numChannels","delayBuffer","subarray","delayed","channelLeft","channelRight","delayLeft","delayRight","delayed_left","delayed_right","openReverbModal","closeReverbModal","reverb","bufferSize","samplesLeft","samplesRight","delayinMilliSeconds","combFilterSamplesLeft1","combFilterSamplesLeft2","combFilterSamplesRight1","combFilterSamplesRight2","outputCombLeft","outputCombRight","audioMixLeft","audioMixRight","allPassFilterSamplesLeft1","allPassFilterSamplesLeft2","allPassFilterSamplesRight1","allPassFilterSamplesRight2","closeEquaModal","openEquaModal","style","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","min","step","onInput","e","target","_c","$RefreshReg$"],"sources":["C:/Users/elect/Documents/CIS/4914/Mellowdies/mellowdies/src/Landingpage/Menu.js"],"sourcesContent":["import React, {useState}  from 'react';\r\n\r\nconst menubackground = {\r\n  width: '25%',\r\n  height: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'flex-start',\r\n  alignItems: 'left',\r\n  border: '2px solid #ffffff',\r\n  backgroundColor: '#ffffff',\r\n  fontFamily: \"'Concert One', cursive\",\r\n  fontSize: '1.2rem',\r\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\r\n  border: 'none',\r\n  position: 'fixed',\r\n  top: '0',\r\n  left: '0',\r\n  zIndex: '1000',\r\n  paddingTop: '20px',\r\n  overflowY: 'auto', // Enable vertical scrolling\r\n  maxHeight: '100%', // Set a maximum height for the menu\r\n};\r\n\r\nconst backButtonStyle = {\r\n  marginTop: '10px',\r\n  background: '#007bff',\r\n  color: '#fff',\r\n  border: 'none',\r\n  padding: '10px 20px',\r\n  borderRadius: '5px',\r\n  cursor: 'pointer',\r\n  fontSize: '16px',\r\n  textAlign: 'center',\r\n  width: 'auto',\r\n  display: 'inline-block',\r\n  transition: 'background 0.3s ease',\r\n};\r\n\r\nconst reverseButtonStyle = {\r\n  ...backButtonStyle,\r\n  background: '#ff5722', // Different color for reverse button\r\n};\r\n\r\nconst sliderStyle = {\r\n  width: '80%',\r\n  margin: '10px auto',\r\n};\r\n\r\nconst adjustGainButtonStyle = {\r\n  ...backButtonStyle,\r\n  background: '#4caf50', // Different color for adjust gain button\r\n};\r\n\r\n\r\nconst modalStyle = {\r\n  position: 'fixed',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 'auto',\r\n  height: 'auto',\r\n  backgroundColor: '#fff',\r\n  padding: '20px',\r\n  borderRadius: '10px',\r\n  boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.3)',\r\n  zIndex: '1001',\r\n};\r\n\r\nconst overlayStyle = {\r\n  position: 'fixed',\r\n  top: '0',\r\n  left: '0',\r\n  right: '0',\r\n  bottom: '0',\r\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  zIndex: '1000',\r\n};\r\n\r\nconst contentStyle = {\r\n  flexGrow: 1,\r\n  paddingTop: '20px',\r\n};\r\n\r\nconst verticalSliderStyle = {\r\n  type : 'range',\r\n  orient : 'vertical',\r\n  appearance : 'slider-vertical',\r\n  width : '8%',\r\n}\r\n\r\nvar utils = require(\"audio-buffer-utils\");\r\nvar blobber = require('audiobuffer-to-blob');\r\n\r\nfunction combFilter (samples, sampleLength, delay, decay, sampleRate) {\r\n  let delaySamples = Math.ceil(delay * (sampleRate / 1000));\r\n  let combFilterSamples = samples;\r\n  for (let i = 0; i < sampleLength - delaySamples; i++) {\r\n    combFilterSamples[i+delaySamples] += combFilterSamples[i] * decay;\r\n  }\r\n  return combFilterSamples;\r\n}\r\n\r\nfunction allPassFilter (samples, sampleLength, sampleRate) {\r\n  let delaySamples = Math.ceil(88.69 * (sampleRate/1000));\r\n  let allPassFilterSamples = new Float32Array(sampleLength);\r\n  let decayFactor = 0.131;\r\n  for (let i = 0; i < sampleLength; i++) {\r\n    allPassFilterSamples[i] = samples[i];\r\n    if (i - delaySamples >= 0) {\r\n      allPassFilterSamples[i] += allPassFilterSamples[i-delaySamples] * (-decayFactor);\r\n    }\r\n    if (i - delaySamples >= 1) {\r\n      allPassFilterSamples[i] += allPassFilterSamples[i+20-delaySamples] * decayFactor;\r\n    }\r\n  }\r\n  let val = allPassFilterSamples[0];\r\n  let max = 0.0;\r\n  for (let i = 0; i < sampleLength; i++) {\r\n    if(Math.abs(allPassFilterSamples[i]) > max) {\r\n      max = Math.abs(allPassFilterSamples[i]);\r\n    }\r\n  }\r\n  for (let i = 0; i < allPassFilterSamples.length; i++) {\r\n    let currVal = allPassFilterSamples[i];\r\n    val = (val + (currVal - val)) / max;\r\n    allPassFilterSamples[i] = val;\r\n  }\r\n  return allPassFilterSamples;\r\n}\r\n\r\nfunction Menu({ handleBack, waveData }) {\r\n  const [isGainModalOpen, setGainModalOpen] = useState(false);\r\n  const [isDelayModalOpen, setDelayModalOpen] = useState(false);\r\n  const [isDistortionModalOpen, setDistortionModalOpen] = useState(false);\r\n  const [isReverbModalOpen, setReverbModalOpen] = useState(false);\r\n  const [isEquaModalOpen, setEquaModalOpen] = useState(false);\r\n  const [isEquaInit, setEquaInit] = useState(false);\r\n  const [gainValue, setGainValue] = useState(100);\r\n  const [delayTime, setDelayTime] = useState(0.00);\r\n  const [feedback, setFeedback] = useState(0.00);\r\n  const [wetness, setWetness] = useState(0.00);\r\n  const [dryness, setDryness] = useState(0.00);\r\n  const [gainDistortValue, setGainDistortValue] = useState(100);\r\n  const [reverbTime, setReverbTime] = useState(0.00);\r\n  const [decay, setDecay] = useState(0.00);\r\n  const [reverbWet, setReverbWet] = useState(0.00);\r\n  const eqBands = [32, 64, 125, 250, 500, 1000, 2000, 4000, 8000, 16000]\r\n\r\n  let aContext = waveData[0].webAudioPlayer.audioContext;\r\n  \r\n  const updateFilter = (gainValue) => {\r\n\r\n  }\r\n\r\n  const filters = eqBands.map((band) => {\r\n    const filter = aContext.createBiquadFilter()\r\n    filter.type = band <= 32 ? 'lowshelf' : band >= 16000 ? 'highshelf' : 'peaking'\r\n    filter.gain.value = Math.random() * 40 - 20\r\n    filter.Q.value = 1 // resonance\r\n    filter.frequency.value = band // the cut-off frequency\r\n    return filter\r\n  })\r\n\r\n  if (isEquaInit === false) {\r\n      const eqNode = aContext.createGain();\r\n      // Connect the filters and media node sequentially\r\n      const equalizer = filters.reduce((prev, curr) => {\r\n        prev.connect(curr)\r\n        return curr\r\n      }, eqNode)\r\n      // Connect the filters to the audio output\r\n      equalizer.connect(aContext.destination)\r\n      console.log(filters)\r\n      console.log(equalizer)\r\n    }\r\n  \r\n  const reverse = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    if (buffer) {\r\n      utils.reverse(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n      console.log(\"Reversed region.\");\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    } else {\r\n      console.error('No audio buffer loaded');\r\n    }\r\n  };\r\n\r\n  const invert = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    if (buffer) {\r\n      utils.invert(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n      console.log(\"Inverted region.\");\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    } else {\r\n      console.error('No audio buffer loaded');\r\n    }\r\n  };\r\n\r\n  const normalize = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    if (buffer) {\r\n      utils.normalize(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n      console.log(\"Normalized region.\");\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    } else {\r\n      console.error('No audio buffer loaded');\r\n    }\r\n  };\r\n\r\n  const openGainModal = () => setGainModalOpen(true);\r\n  const closeGainModal = () => setGainModalOpen(false);\r\n\r\n  const adjustGain = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let gain = gainValue / 100;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] *= gain;\r\n        }\r\n      }\r\n      console.log('Gain adjusted:', gain);\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const fadeIn = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let stepInc = 1 / (end-start);\r\n    let currGain = 0;\r\n    let steps = 0;\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] *= (currGain + (steps * stepInc));\r\n            steps += 1;\r\n        }\r\n        steps = 0;\r\n      }\r\n      console.log('Region Faded In');\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const fadeOut = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let stepInc = 1 / (end-start);\r\n    let currGain = 1;\r\n    let steps = 0;\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] *= (currGain - (steps * stepInc));\r\n            steps += 1;\r\n        }\r\n        steps = 0;\r\n      }\r\n      console.log('Region Faded In');\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const openDistortionModal = () => setDistortionModalOpen(true);\r\n  const closeDistortionModal = () => setDistortionModalOpen(false);\r\n\r\n  const distort = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let gain = gainDistortValue / 100;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] = Math.atan(gain*channelData[sample]);\r\n        }\r\n      }\r\n      console.log('Distorted Region', gain);\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const openDelayModal = () => setDelayModalOpen(true);\r\n  const closeDelayModal = () => setDelayModalOpen(false);\r\n\r\n  const delay = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let delayLen = delayTime;\r\n    let delaySamples = Math.ceil(delayLen * sampleRate);\r\n    let wet = wetness;\r\n    let dry = dryness;\r\n    let feeder = feedback;\r\n    let index = 0;\r\n\r\n    if (buffer) {\r\n      let numChannels = buffer.numberOfChannels;\r\n      if (numChannels === 1) {\r\n        let channelData = buffer.getChannelData(0);\r\n        let delayBuffer = new Float32Array(channelData.subarray(start, end + 1));\r\n        for (let sample = start; sample < end; sample += 1) {\r\n          let delayed = delayBuffer[index];\r\n          channelData[sample] = (channelData[sample] * dry) + (delayed * wet) ;\r\n          delayBuffer[index] = feeder * (delayed + channelData[sample]);\r\n          index += 1;\r\n        }\r\n      } else if (numChannels === 2) {\r\n        let channelLeft = buffer.getChannelData(0);\r\n        let channelRight = buffer.getChannelData(1);\r\n        let delayLeft = new Float32Array(channelLeft.subarray(start, end + 1));\r\n        let delayRight = new Float32Array(channelRight.subarray(start, end + 1));\r\n        delayLeft = channelLeft;\r\n        delayRight = channelRight;\r\n        for (let sample = start; sample < end; sample += 1) {\r\n          let delayed_left = delayLeft[index];\r\n          let delayed_right = delayRight[index];\r\n          channelLeft[sample] = (channelLeft[sample] * dry) + (delayed_left * wet) ;\r\n          channelRight[sample] = (channelRight[sample] * dry) + (delayed_right * wet) ;\r\n          delayLeft[index] = feeder * (delayed_left + channelLeft[sample]);\r\n          delayRight[index] = feeder * (delayed_right + channelRight[sample]);\r\n          index += 1;\r\n        }\r\n      }\r\n      console.log('Region Delayed');\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const openReverbModal = () => setReverbModalOpen(true);\r\n  const closeReverbModal = () => setReverbModalOpen(false);\r\n\r\n  const reverb = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let bufferSize = end - start;\r\n    let channelLeft = buffer.getChannelData(0);\r\n    let channelRight = buffer.getChannelData(1);\r\n    let samplesLeft = new Float32Array(channelLeft.subarray(start, end + 1));\r\n    let samplesRight = new Float32Array(channelRight.subarray(start, end + 1));\r\n    let delayinMilliSeconds = reverbTime * 1000;\r\n    let decayFactor = decay;\r\n    let combFilterSamplesLeft1 = combFilter(samplesLeft, bufferSize, delayinMilliSeconds, decayFactor, sampleRate);\r\n    let combFilterSamplesLeft2 = combFilter(samplesLeft, bufferSize, (delayinMilliSeconds - 11.73), (decayFactor - 0.1313), sampleRate);\r\n    let combFilterSamplesRight1 = combFilter(samplesRight, bufferSize, delayinMilliSeconds, decayFactor, sampleRate);\r\n    let combFilterSamplesRight2 = combFilter(samplesRight, bufferSize, (delayinMilliSeconds - 11.73), (decayFactor - 0.1313), sampleRate);\r\n    let outputCombLeft = new Float32Array(bufferSize);\r\n    let outputCombRight = new Float32Array(bufferSize);\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      outputCombLeft[i] = ((combFilterSamplesLeft1[i] + combFilterSamplesLeft2[i])) ;\r\n    }\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      outputCombRight[i] = ((combFilterSamplesRight1[i] + combFilterSamplesRight2[i])) ;\r\n    }\r\n    let audioMixLeft = new Float32Array(bufferSize);\r\n    let audioMixRight = new Float32Array(bufferSize);\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      audioMixLeft[i] = ((1 - reverbWet) * samplesLeft[i]) + (reverbWet * outputCombLeft[i]);\r\n    }\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      audioMixRight[i] = ((1 - reverbWet) * samplesRight[i]) + (reverbWet * outputCombRight[i]);\r\n    }\r\n    let allPassFilterSamplesLeft1 = allPassFilter(audioMixLeft, bufferSize, sampleRate);\r\n    let allPassFilterSamplesLeft2 = allPassFilter(allPassFilterSamplesLeft1, bufferSize, sampleRate);\r\n    let allPassFilterSamplesRight1 = allPassFilter(audioMixRight, bufferSize, sampleRate);\r\n    let allPassFilterSamplesRight2 = allPassFilter(allPassFilterSamplesRight1, bufferSize, sampleRate);\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      channelLeft[start + i] = allPassFilterSamplesLeft2[i];\r\n      channelRight[start + i] = allPassFilterSamplesRight2[i];\r\n    }\r\n    console.log('Reverb Applied');\r\n    let blob = blobber(buffer);\r\n    waveData[0].waveSurfer.empty();\r\n    waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n  }\r\n\r\n  const closeEquaModal = () => setEquaModalOpen(false);\r\n  const openEquaModal = () => {\r\n    setEquaInit(true);\r\n    setEquaModalOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div style={menubackground}>\r\n      <div style={contentStyle}>\r\n        <button style={backButtonStyle} onClick={handleBack}>Back</button>\r\n\r\n        <button style={reverseButtonStyle} onClick={reverse}>\r\n          Reverse Selected Region\r\n        </button>\r\n\r\n        <button style={reverseButtonStyle} onClick={invert}>\r\n          Invert Selected Region\r\n        </button>\r\n\r\n        <button style={reverseButtonStyle} onClick={normalize}>\r\n          Normalize Selected Region\r\n        </button>\r\n\r\n        <button style={reverseButtonStyle} onClick={fadeIn}>\r\n          Fade In Region\r\n        </button>\r\n\r\n        <button style={reverseButtonStyle} onClick={fadeOut}>\r\n          Fade Out Region\r\n        </button>\r\n        \r\n        <button style={adjustGainButtonStyle} onClick={openGainModal}>\r\n          Adjust Gain\r\n        </button>\r\n\r\n        {isGainModalOpen && (\r\n          <>\r\n             <div style={overlayStyle} onClick={closeGainModal} />\r\n              <div style={modalStyle}>\r\n                <h2>Gain Percentage</h2>\r\n                <input\r\n                  id=\"gains\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"200\"\r\n                  step=\"0.01\"\r\n                  value={gainValue}\r\n                  onInput={(e) => setGainValue(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"gainVal\">{gainValue}%</output>\r\n              <button onClick={closeGainModal} style={backButtonStyle}>Close</button>\r\n              <button onClick={adjustGain} style={backButtonStyle}>Apply Gain</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <button style={adjustGainButtonStyle} onClick={openDelayModal}>\r\n          Adjust Delay\r\n        </button>\r\n\r\n        {isDelayModalOpen && (\r\n          <>\r\n             <div style={overlayStyle} onClick={closeDelayModal} />\r\n              <div style={modalStyle}>\r\n                <h2>Delay Time</h2>\r\n                <input\r\n                  id=\"delayT\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"6\"\r\n                  step=\"0.01\"\r\n                  value={delayTime}\r\n                  onInput={(e) => setDelayTime(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"delayVal\">{delayTime}</output>\r\n\r\n                <h2>Feedback</h2>\r\n                <input\r\n                  id=\"feedback\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={feedback}\r\n                  onInput={(e) => setFeedback(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"feedVal\">{feedback}</output>\r\n\r\n                <h2>Wet</h2>\r\n                <input\r\n                  id=\"wets\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={wetness}\r\n                  onInput={(e) => setWetness(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"wetVal\">{wetness}</output>\r\n\r\n                <h2>Dry</h2>\r\n                <input\r\n                  id=\"dryer\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={dryness}\r\n                  onInput={(e) => setDryness(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"dryVal\">{dryness}</output>\r\n              <button onClick={closeDelayModal} style={backButtonStyle}>Close</button>\r\n              <button onClick={delay} style={backButtonStyle}>Apply Delay</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <button style={adjustGainButtonStyle} onClick={openDistortionModal}>\r\n          Apply Distortion\r\n        </button>\r\n\r\n        {isDistortionModalOpen && (\r\n          <>\r\n             <div style={overlayStyle} onClick={closeDistortionModal} />\r\n              <div style={modalStyle}>\r\n                <h2>Gain Percentage</h2>\r\n                <input\r\n                  id=\"gains\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"200\"\r\n                  step=\"0.01\"\r\n                  value={gainDistortValue}\r\n                  onInput={(e) => setGainDistortValue(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"gainDistortVal\">{gainDistortValue}%</output>\r\n              <button onClick={closeDistortionModal} style={backButtonStyle}>Close</button>\r\n              <button onClick={distort} style={backButtonStyle}>Apply Distortion</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <button style={adjustGainButtonStyle} onClick={openReverbModal}>\r\n          Apply Reverb\r\n        </button>\r\n\r\n        {isReverbModalOpen && (\r\n          <>\r\n             <div style={overlayStyle} onClick={closeReverbModal} />\r\n              <div style={modalStyle}>\r\n                <h2>Time</h2>\r\n                <input\r\n                  id=\"reverbT\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"3\"\r\n                  step=\"0.01\"\r\n                  value={reverbTime}\r\n                  onInput={(e) => setReverbTime(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"reverbTime\">{reverbTime}</output>\r\n\r\n                <h2>Decay</h2>\r\n                <input\r\n                  id=\"decay\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"3\"\r\n                  step=\"0.01\"\r\n                  value={decay}\r\n                  onInput={(e) => setDecay(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"decayVal\">{decay}</output>\r\n\r\n                <h2>Wet</h2>\r\n                <input\r\n                  id=\"wetR\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={reverbWet}\r\n                  onInput={(e) => setReverbWet(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"wetRVal\">{reverbWet}</output>\r\n\r\n              <button onClick={closeReverbModal} style={backButtonStyle}>Close</button>\r\n              <button onClick={reverb} style={backButtonStyle}>Apply Reverb</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <button style={adjustGainButtonStyle} onClick={openEquaModal}>\r\n          Parametric Equalizer\r\n        </button>\r\n\r\n        {isEquaModalOpen && (\r\n          <>\r\n             <div style={overlayStyle} onClick={closeEquaModal} />\r\n              <div style={modalStyle}>\r\n\r\n              <h2>32</h2>\r\n                <input\r\n                  id=\"32hz\"\r\n                  type=\"range\"\r\n                  orient = \"vertical\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filters[0].gain.value}\r\n                  onInput={(e) => filters[0].gain.value = e.target.value}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"band1\">{filters[0].gain.value}</output>\r\n\r\n                <h2>64</h2>\r\n                <input\r\n                  id=\"64hz\"\r\n                  type=\"range\"\r\n                  orient = \"vertical\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filters[1].gain.value}\r\n                  onInput={(e) => filters[1].gain.value = e.target.value}\r\n                  style={sliderStyle}\r\n                />\r\n\r\n                <h2>125</h2>\r\n                <input\r\n                  id=\"125hz\"\r\n                  type=\"range\"\r\n                  orient = \"vertical\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filters[2].gain.value}\r\n                  onInput={(e) => filters[2].gain.value = e.target.value}\r\n                  style={sliderStyle}\r\n                />\r\n                 \r\n                <h2>250</h2>\r\n                <input\r\n                  id=\"250hz\"\r\n                  type=\"range\"\r\n                  orient = \"vertical\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filters[3].gain.value}\r\n                  onInput={(e) => filters[3].gain.value = e.target.value}\r\n                  style={sliderStyle}\r\n                />\r\n                 \r\n                <h2>500</h2>\r\n                <input\r\n                  id=\"500hz\"\r\n                  type=\"range\"\r\n                  orient = \"vertical\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filters[4].gain.value}\r\n                  onInput={(e) => filters[4].gain.value = e.target.value}\r\n                  style={sliderStyle}\r\n                />\r\n                 \r\n                <h2>1000</h2>\r\n                <input\r\n                  id=\"1000hz\"\r\n                  type=\"range\"\r\n                  orient = \"vertical\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filters[5].gain.value}\r\n                  onInput={(e) => filters[5].gain.value = e.target.value}\r\n                  style={sliderStyle}\r\n                />\r\n                 \r\n                <h2>2000</h2>\r\n                <input\r\n                  id=\"2000hz\"\r\n                  type=\"range\"\r\n                  orient = \"vertical\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filters[6].gain.value}\r\n                  onInput={(e) => filters[6].gain.value = e.target.value}\r\n                  style={sliderStyle}\r\n                />\r\n                 \r\n                <h2>4000</h2>\r\n                <input\r\n                  id=\"4000hz\"\r\n                  type=\"range\"\r\n                  orient = \"vertical\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filters[7].gain.value}\r\n                  onInput={(e) => filters[7].gain.value = e.target.value}\r\n                  style={sliderStyle}\r\n                />\r\n                 \r\n                <h2>8000</h2>\r\n                <input\r\n                  id=\"8000hz\"\r\n                  type=\"range\"\r\n                  orient = \"vertical\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filters[8].gain.value}\r\n                  onInput={(e) => filters[8].gain.value = e.target.value}\r\n                  style={sliderStyle}\r\n                />\r\n                 \r\n                <h2>16000</h2>\r\n                <input\r\n                  id=\"16000hz\"\r\n                  type=\"range\"\r\n                  orient = \"vertical\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filters[9].gain.value}\r\n                  onInput={(e) => filters[9].gain.value = e.target.value}\r\n                  style={sliderStyle}\r\n                />\r\n\r\n              <button onClick={closeEquaModal} style={backButtonStyle}>Close</button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}