{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst LogType = Object.freeze({\n  error: (/** @type {\"error\"} */\"error\"),\n  // message, c style arguments\n  warn: (/** @type {\"warn\"} */\"warn\"),\n  // message, c style arguments\n  info: (/** @type {\"info\"} */\"info\"),\n  // message, c style arguments\n  log: (/** @type {\"log\"} */\"log\"),\n  // message, c style arguments\n  debug: (/** @type {\"debug\"} */\"debug\"),\n  // message, c style arguments\n\n  trace: (/** @type {\"trace\"} */\"trace\"),\n  // no arguments\n\n  group: (/** @type {\"group\"} */\"group\"),\n  // [label]\n  groupCollapsed: (/** @type {\"groupCollapsed\"} */\"groupCollapsed\"),\n  // [label]\n  groupEnd: (/** @type {\"groupEnd\"} */\"groupEnd\"),\n  // [label]\n\n  profile: (/** @type {\"profile\"} */\"profile\"),\n  // [profileName]\n  profileEnd: (/** @type {\"profileEnd\"} */\"profileEnd\"),\n  // [profileName]\n\n  time: (/** @type {\"time\"} */\"time\"),\n  // name, time as [seconds, nanoseconds]\n\n  clear: (/** @type {\"clear\"} */\"clear\"),\n  // no arguments\n  status: (/** @type {\"status\"} */\"status\") // message, arguments\n});\nmodule.exports.LogType = LogType;\n\n/** @typedef {typeof LogType[keyof typeof LogType]} LogTypeEnum */\n\nconst LOG_SYMBOL = Symbol(\"webpack logger raw log method\");\nconst TIMERS_SYMBOL = Symbol(\"webpack logger times\");\nconst TIMERS_AGGREGATES_SYMBOL = Symbol(\"webpack logger aggregated times\");\nclass WebpackLogger {\n  /**\n   * @param {function(LogTypeEnum, any[]=): void} log log function\n   * @param {function(string | function(): string): WebpackLogger} getChildLogger function to create child logger\n   */\n  constructor(log, getChildLogger) {\n    this[LOG_SYMBOL] = log;\n    this.getChildLogger = getChildLogger;\n  }\n\n  /**\n   * @param {...any} args args\n   */\n  error(...args) {\n    this[LOG_SYMBOL](LogType.error, args);\n  }\n\n  /**\n   * @param {...any} args args\n   */\n  warn(...args) {\n    this[LOG_SYMBOL](LogType.warn, args);\n  }\n\n  /**\n   * @param {...any} args args\n   */\n  info(...args) {\n    this[LOG_SYMBOL](LogType.info, args);\n  }\n\n  /**\n   * @param {...any} args args\n   */\n  log(...args) {\n    this[LOG_SYMBOL](LogType.log, args);\n  }\n\n  /**\n   * @param {...any} args args\n   */\n  debug(...args) {\n    this[LOG_SYMBOL](LogType.debug, args);\n  }\n\n  /**\n   * @param {any} assertion assertion\n   * @param {...any} args args\n   */\n  assert(assertion, ...args) {\n    if (!assertion) {\n      this[LOG_SYMBOL](LogType.error, args);\n    }\n  }\n  trace() {\n    this[LOG_SYMBOL](LogType.trace, [\"Trace\"]);\n  }\n  clear() {\n    this[LOG_SYMBOL](LogType.clear);\n  }\n\n  /**\n   * @param {...any} args args\n   */\n  status(...args) {\n    this[LOG_SYMBOL](LogType.status, args);\n  }\n\n  /**\n   * @param {...any} args args\n   */\n  group(...args) {\n    this[LOG_SYMBOL](LogType.group, args);\n  }\n\n  /**\n   * @param {...any} args args\n   */\n  groupCollapsed(...args) {\n    this[LOG_SYMBOL](LogType.groupCollapsed, args);\n  }\n  groupEnd() {\n    this[LOG_SYMBOL](LogType.groupEnd);\n  }\n\n  /**\n   * @param {string=} label label\n   */\n  profile(label) {\n    this[LOG_SYMBOL](LogType.profile, [label]);\n  }\n\n  /**\n   * @param {string=} label label\n   */\n  profileEnd(label) {\n    this[LOG_SYMBOL](LogType.profileEnd, [label]);\n  }\n\n  /**\n   * @param {string} label label\n   */\n  time(label) {\n    /** @type {Map<string | undefined, [number, number]>} */\n    this[TIMERS_SYMBOL] = this[TIMERS_SYMBOL] || new Map();\n    this[TIMERS_SYMBOL].set(label, process.hrtime());\n  }\n\n  /**\n   * @param {string=} label label\n   */\n  timeLog(label) {\n    const prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n    if (!prev) {\n      throw new Error(`No such label '${label}' for WebpackLogger.timeLog()`);\n    }\n    const time = process.hrtime(prev);\n    this[LOG_SYMBOL](LogType.time, [label, ...time]);\n  }\n\n  /**\n   * @param {string=} label label\n   */\n  timeEnd(label) {\n    const prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n    if (!prev) {\n      throw new Error(`No such label '${label}' for WebpackLogger.timeEnd()`);\n    }\n    const time = process.hrtime(prev);\n    /** @type {Map<string | undefined, [number, number]>} */\n    this[TIMERS_SYMBOL].delete(label);\n    this[LOG_SYMBOL](LogType.time, [label, ...time]);\n  }\n\n  /**\n   * @param {string=} label label\n   */\n  timeAggregate(label) {\n    const prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n    if (!prev) {\n      throw new Error(`No such label '${label}' for WebpackLogger.timeAggregate()`);\n    }\n    const time = process.hrtime(prev);\n    /** @type {Map<string | undefined, [number, number]>} */\n    this[TIMERS_SYMBOL].delete(label);\n    /** @type {Map<string | undefined, [number, number]>} */\n    this[TIMERS_AGGREGATES_SYMBOL] = this[TIMERS_AGGREGATES_SYMBOL] || new Map();\n    const current = this[TIMERS_AGGREGATES_SYMBOL].get(label);\n    if (current !== undefined) {\n      if (time[1] + current[1] > 1e9) {\n        time[0] += current[0] + 1;\n        time[1] = time[1] - 1e9 + current[1];\n      } else {\n        time[0] += current[0];\n        time[1] += current[1];\n      }\n    }\n    this[TIMERS_AGGREGATES_SYMBOL].set(label, time);\n  }\n\n  /**\n   * @param {string=} label label\n   */\n  timeAggregateEnd(label) {\n    if (this[TIMERS_AGGREGATES_SYMBOL] === undefined) return;\n    const time = this[TIMERS_AGGREGATES_SYMBOL].get(label);\n    if (time === undefined) return;\n    this[TIMERS_AGGREGATES_SYMBOL].delete(label);\n    this[LOG_SYMBOL](LogType.time, [label, ...time]);\n  }\n}\nmodule.exports.Logger = WebpackLogger;","map":{"version":3,"names":["LogType","Object","freeze","error","warn","info","log","debug","trace","group","groupCollapsed","groupEnd","profile","profileEnd","time","clear","status","module","exports","LOG_SYMBOL","Symbol","TIMERS_SYMBOL","TIMERS_AGGREGATES_SYMBOL","WebpackLogger","constructor","getChildLogger","args","assert","assertion","label","Map","set","process","hrtime","timeLog","prev","get","Error","timeEnd","delete","timeAggregate","current","undefined","timeAggregateEnd","Logger"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/node_modules/webpack/lib/logging/Logger.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst LogType = Object.freeze({\n\terror: /** @type {\"error\"} */ (\"error\"), // message, c style arguments\n\twarn: /** @type {\"warn\"} */ (\"warn\"), // message, c style arguments\n\tinfo: /** @type {\"info\"} */ (\"info\"), // message, c style arguments\n\tlog: /** @type {\"log\"} */ (\"log\"), // message, c style arguments\n\tdebug: /** @type {\"debug\"} */ (\"debug\"), // message, c style arguments\n\n\ttrace: /** @type {\"trace\"} */ (\"trace\"), // no arguments\n\n\tgroup: /** @type {\"group\"} */ (\"group\"), // [label]\n\tgroupCollapsed: /** @type {\"groupCollapsed\"} */ (\"groupCollapsed\"), // [label]\n\tgroupEnd: /** @type {\"groupEnd\"} */ (\"groupEnd\"), // [label]\n\n\tprofile: /** @type {\"profile\"} */ (\"profile\"), // [profileName]\n\tprofileEnd: /** @type {\"profileEnd\"} */ (\"profileEnd\"), // [profileName]\n\n\ttime: /** @type {\"time\"} */ (\"time\"), // name, time as [seconds, nanoseconds]\n\n\tclear: /** @type {\"clear\"} */ (\"clear\"), // no arguments\n\tstatus: /** @type {\"status\"} */ (\"status\") // message, arguments\n});\n\nmodule.exports.LogType = LogType;\n\n/** @typedef {typeof LogType[keyof typeof LogType]} LogTypeEnum */\n\nconst LOG_SYMBOL = Symbol(\"webpack logger raw log method\");\nconst TIMERS_SYMBOL = Symbol(\"webpack logger times\");\nconst TIMERS_AGGREGATES_SYMBOL = Symbol(\"webpack logger aggregated times\");\n\nclass WebpackLogger {\n\t/**\n\t * @param {function(LogTypeEnum, any[]=): void} log log function\n\t * @param {function(string | function(): string): WebpackLogger} getChildLogger function to create child logger\n\t */\n\tconstructor(log, getChildLogger) {\n\t\tthis[LOG_SYMBOL] = log;\n\t\tthis.getChildLogger = getChildLogger;\n\t}\n\n\t/**\n\t * @param {...any} args args\n\t */\n\terror(...args) {\n\t\tthis[LOG_SYMBOL](LogType.error, args);\n\t}\n\n\t/**\n\t * @param {...any} args args\n\t */\n\twarn(...args) {\n\t\tthis[LOG_SYMBOL](LogType.warn, args);\n\t}\n\n\t/**\n\t * @param {...any} args args\n\t */\n\tinfo(...args) {\n\t\tthis[LOG_SYMBOL](LogType.info, args);\n\t}\n\n\t/**\n\t * @param {...any} args args\n\t */\n\tlog(...args) {\n\t\tthis[LOG_SYMBOL](LogType.log, args);\n\t}\n\n\t/**\n\t * @param {...any} args args\n\t */\n\tdebug(...args) {\n\t\tthis[LOG_SYMBOL](LogType.debug, args);\n\t}\n\n\t/**\n\t * @param {any} assertion assertion\n\t * @param {...any} args args\n\t */\n\tassert(assertion, ...args) {\n\t\tif (!assertion) {\n\t\t\tthis[LOG_SYMBOL](LogType.error, args);\n\t\t}\n\t}\n\n\ttrace() {\n\t\tthis[LOG_SYMBOL](LogType.trace, [\"Trace\"]);\n\t}\n\n\tclear() {\n\t\tthis[LOG_SYMBOL](LogType.clear);\n\t}\n\n\t/**\n\t * @param {...any} args args\n\t */\n\tstatus(...args) {\n\t\tthis[LOG_SYMBOL](LogType.status, args);\n\t}\n\n\t/**\n\t * @param {...any} args args\n\t */\n\tgroup(...args) {\n\t\tthis[LOG_SYMBOL](LogType.group, args);\n\t}\n\n\t/**\n\t * @param {...any} args args\n\t */\n\tgroupCollapsed(...args) {\n\t\tthis[LOG_SYMBOL](LogType.groupCollapsed, args);\n\t}\n\n\tgroupEnd() {\n\t\tthis[LOG_SYMBOL](LogType.groupEnd);\n\t}\n\n\t/**\n\t * @param {string=} label label\n\t */\n\tprofile(label) {\n\t\tthis[LOG_SYMBOL](LogType.profile, [label]);\n\t}\n\n\t/**\n\t * @param {string=} label label\n\t */\n\tprofileEnd(label) {\n\t\tthis[LOG_SYMBOL](LogType.profileEnd, [label]);\n\t}\n\n\t/**\n\t * @param {string} label label\n\t */\n\ttime(label) {\n\t\t/** @type {Map<string | undefined, [number, number]>} */\n\t\tthis[TIMERS_SYMBOL] = this[TIMERS_SYMBOL] || new Map();\n\t\tthis[TIMERS_SYMBOL].set(label, process.hrtime());\n\t}\n\n\t/**\n\t * @param {string=} label label\n\t */\n\ttimeLog(label) {\n\t\tconst prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n\t\tif (!prev) {\n\t\t\tthrow new Error(`No such label '${label}' for WebpackLogger.timeLog()`);\n\t\t}\n\t\tconst time = process.hrtime(prev);\n\t\tthis[LOG_SYMBOL](LogType.time, [label, ...time]);\n\t}\n\n\t/**\n\t * @param {string=} label label\n\t */\n\ttimeEnd(label) {\n\t\tconst prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n\t\tif (!prev) {\n\t\t\tthrow new Error(`No such label '${label}' for WebpackLogger.timeEnd()`);\n\t\t}\n\t\tconst time = process.hrtime(prev);\n\t\t/** @type {Map<string | undefined, [number, number]>} */\n\t\t(this[TIMERS_SYMBOL]).delete(label);\n\t\tthis[LOG_SYMBOL](LogType.time, [label, ...time]);\n\t}\n\n\t/**\n\t * @param {string=} label label\n\t */\n\ttimeAggregate(label) {\n\t\tconst prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n\t\tif (!prev) {\n\t\t\tthrow new Error(\n\t\t\t\t`No such label '${label}' for WebpackLogger.timeAggregate()`\n\t\t\t);\n\t\t}\n\t\tconst time = process.hrtime(prev);\n\t\t/** @type {Map<string | undefined, [number, number]>} */\n\t\t(this[TIMERS_SYMBOL]).delete(label);\n\t\t/** @type {Map<string | undefined, [number, number]>} */\n\t\tthis[TIMERS_AGGREGATES_SYMBOL] =\n\t\t\tthis[TIMERS_AGGREGATES_SYMBOL] || new Map();\n\t\tconst current = this[TIMERS_AGGREGATES_SYMBOL].get(label);\n\t\tif (current !== undefined) {\n\t\t\tif (time[1] + current[1] > 1e9) {\n\t\t\t\ttime[0] += current[0] + 1;\n\t\t\t\ttime[1] = time[1] - 1e9 + current[1];\n\t\t\t} else {\n\t\t\t\ttime[0] += current[0];\n\t\t\t\ttime[1] += current[1];\n\t\t\t}\n\t\t}\n\t\tthis[TIMERS_AGGREGATES_SYMBOL].set(label, time);\n\t}\n\n\t/**\n\t * @param {string=} label label\n\t */\n\ttimeAggregateEnd(label) {\n\t\tif (this[TIMERS_AGGREGATES_SYMBOL] === undefined) return;\n\t\tconst time = this[TIMERS_AGGREGATES_SYMBOL].get(label);\n\t\tif (time === undefined) return;\n\t\tthis[TIMERS_AGGREGATES_SYMBOL].delete(label);\n\t\tthis[LOG_SYMBOL](LogType.time, [label, ...time]);\n\t}\n}\n\nmodule.exports.Logger = WebpackLogger;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}