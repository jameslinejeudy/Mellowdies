{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\james\\\\Downloads\\\\Mellowdies\\\\mellowdies\\\\src\\\\Homepage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport gifBackground from './images/skybackground.png'; // Adjust the path if needed\nimport { useEffect } from 'react';\nimport useDrivePicker from 'react-google-drive-picker';\nimport { useNavigate } from 'react-router-dom'; // Ensure useNavigate is imported correctly\nimport Landingpage from './Landingpage.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pageStyle = {\n  backgroundImage: `url(${gifBackground})`,\n  // Set the image as the background\n  backgroundSize: 'cover',\n  // Ensures the image covers the entire page\n  backgroundPosition: 'center',\n  // Centers the background\n  textAlign: 'center',\n  padding: '20px',\n  // Adjust the padding\n  height: '100vh',\n  // Full viewport height\n  margin: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  // Arrange children in a column\n  alignItems: 'center',\n  fontFamily: 'Concert One' // Use Concert One font\n};\nconst headingStyle = {\n  color: '#000000',\n  // Black text color\n  fontSize: '3.5rem',\n  textShadow: '6px 6px 10px pink, -6px -6px 10px pink, 6px -6px 10px pink, -6px 6px 10px pink',\n  // Larger pink outline effect\n  marginBottom: '10px',\n  // Space below the heading\n  marginTop: '0' // Space above the heading\n};\nconst paragraphStyle = {\n  color: '#111111',\n  fontSize: '2rem',\n  margin: '5px 0' // Even out margins for the paragraph\n};\nconst containerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'flex-start',\n  // Align text at the top\n  width: '100%',\n  // Full width\n  paddingTop: '50px' // Add some padding from the top\n};\nconst buttonStyle = {\n  padding: '10px 20px',\n  borderRadius: '30px',\n  // Rounded corners for the buttons\n  border: '2px solid #ffffff',\n  // Sharp white border\n  backgroundColor: 'rgba(255, 255, 255, 0.5)',\n  // Slightly transparent white background\n  color: '#000',\n  // Black text color\n  fontFamily: \"'Concert One', cursive\",\n  // Apply Concert One font\n  cursor: 'pointer',\n  marginTop: '15px',\n  // Space between the buttons\n  width: '300px',\n  // Button width\n  textAlign: 'center',\n  fontSize: '1.2rem',\n  boxShadow: '3px 3px 5px white, -3px -3px 5px white, 3px -3px 5px white, -3px 3px 5px white' // Larger pink outline effect\n};\nfunction HomePage() {\n  _s();\n  const navigate = useNavigate(); // Initialize useNavigate\n\n  const handleFileUpload = event => {\n    const file = event.target.files[0]; // Get the selected file from the event\n    console.log(file);\n    if (file) {\n      navigate('/Landingpage');\n    }\n  };\n\n  // Google Drive Integration\n  const [openPicker, authResponse] = useDrivePicker();\n  const handleGoogleDrive = () => {\n    openPicker({\n      clientId: \"473620447998-mljs5baieqfr2bfk9berae2suhb7fqag.apps.googleusercontent.com\",\n      developerKey: \"AIzaSyApSN-CVcrcURGIUIAS3wtNgIlOszHwk2k\",\n      viewId: \"DOCS\",\n      // or you can remove this if it restricts the file types incorrectly\n      showUploadView: true,\n      showUploadFolders: true,\n      supportDrives: true,\n      multiselect: true,\n      mimeTypes: ['audio/mpeg', 'audio/wav', 'audio/mp3', 'audio/x-wav', 'audio/x-m4a'],\n      // Allow specific audio types\n      callbackFunction: data => {\n        console.log('Google Drive callback data:', data);\n        if (data.action === 'picked') {\n          // Ensure files were picked\n          const audioFiles = data.docs.filter(doc => doc.mimeType.startsWith('audio/'));\n          if (audioFiles.length > 0) {\n            console.log('Audio files selected from Google Drive:', audioFiles);\n            navigate('/Landingpage'); // Navigate to Landingpage if audio files are selected\n          } else {\n            console.log('No audio files selected');\n            alert('Please select only audio files.');\n          }\n        } else {\n          console.log('User canceled or closed the picker');\n        }\n      }\n    });\n    console.log('Google Drive clicked');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: pageStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: [\"  \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: headingStyle,\n        children: \"Mellowdies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: paragraphStyle,\n        children: \"Upload a file!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        style: buttonStyle,\n        accept: \"audio/*\" // This restricts file selection to audio files only\n        ,\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: handleGoogleDrive,\n        children: [\" \", \"Upload from Google Drive\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"NXhqLMh88lweDb2bU5Y3IvU90UE=\", false, function () {\n  return [useNavigate, useDrivePicker];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","gifBackground","useEffect","useDrivePicker","useNavigate","Landingpage","jsxDEV","_jsxDEV","pageStyle","backgroundImage","backgroundSize","backgroundPosition","textAlign","padding","height","margin","display","flexDirection","alignItems","fontFamily","headingStyle","color","fontSize","textShadow","marginBottom","marginTop","paragraphStyle","containerStyle","justifyContent","width","paddingTop","buttonStyle","borderRadius","border","backgroundColor","cursor","boxShadow","HomePage","_s","navigate","handleFileUpload","event","file","target","files","console","log","openPicker","authResponse","handleGoogleDrive","clientId","developerKey","viewId","showUploadView","showUploadFolders","supportDrives","multiselect","mimeTypes","callbackFunction","data","action","audioFiles","docs","filter","doc","mimeType","startsWith","length","alert","style","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/src/Homepage.js"],"sourcesContent":["import React from 'react';\r\nimport gifBackground from './images/skybackground.png';  // Adjust the path if needed\r\nimport  { useEffect } from 'react';\r\nimport useDrivePicker from 'react-google-drive-picker';\r\nimport { useNavigate } from 'react-router-dom';  // Ensure useNavigate is imported correctly\r\nimport Landingpage from './Landingpage.js';\r\n\r\n\r\n\r\n\r\nconst pageStyle = {\r\n  backgroundImage: `url(${gifBackground})`,  // Set the image as the background\r\n  backgroundSize: 'cover',  // Ensures the image covers the entire page\r\n  backgroundPosition: 'center',  // Centers the background\r\n  textAlign: 'center',\r\n  padding: '20px',  // Adjust the padding\r\n  height: '100vh',  // Full viewport height\r\n  margin: 0,\r\n  display: 'flex',\r\n  flexDirection: 'column',  // Arrange children in a column\r\n  alignItems: 'center',\r\n  fontFamily: 'Concert One',  // Use Concert One font\r\n};\r\n\r\nconst headingStyle = {\r\n    color: '#000000',  // Black text color\r\n    fontSize: '3.5rem',\r\n    textShadow: '6px 6px 10px pink, -6px -6px 10px pink, 6px -6px 10px pink, -6px 6px 10px pink',  // Larger pink outline effect\r\n    marginBottom: '10px',  // Space below the heading\r\n    marginTop: '0',  // Space above the heading\r\n  };\r\n  \r\n\r\nconst paragraphStyle = {\r\n  color: '#111111',\r\n  fontSize: '2rem',\r\n  margin: '5px 0',  // Even out margins for the paragraph\r\n};\r\n\r\nconst containerStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-start',  // Align text at the top\r\n  width: '100%',  // Full width\r\n  paddingTop: '50px',  // Add some padding from the top\r\n};\r\n\r\n  const buttonStyle = {\r\n    padding: '10px 20px',\r\n    borderRadius: '30px',  // Rounded corners for the buttons\r\n    border: '2px solid #ffffff',  // Sharp white border\r\n    backgroundColor: 'rgba(255, 255, 255, 0.5)',  // Slightly transparent white background\r\n    color: '#000',  // Black text color\r\n    fontFamily: \"'Concert One', cursive\",  // Apply Concert One font\r\n    cursor: 'pointer',\r\n    marginTop: '15px',  // Space between the buttons\r\n    width: '300px',  // Button width\r\n    textAlign: 'center',\r\n    fontSize: '1.2rem',\r\n    boxShadow: '3px 3px 5px white, -3px -3px 5px white, 3px -3px 5px white, -3px 3px 5px white',  // Larger pink outline effect\r\n  };\r\n  \r\n  \r\n\r\nfunction HomePage() {\r\n    const navigate = useNavigate();  // Initialize useNavigate\r\n\r\n    const handleFileUpload = (event) => {\r\n        const file = event.target.files[0]; // Get the selected file from the event\r\n        console.log(file); \r\n        if (file) {\r\n        navigate('/Landingpage');\r\n        }\r\n    };\r\n    \r\n    \r\n      // Google Drive Integration\r\n      const [openPicker, authResponse] = useDrivePicker();\r\n      const handleGoogleDrive = () => {\r\n        openPicker({\r\n            clientId: \"473620447998-mljs5baieqfr2bfk9berae2suhb7fqag.apps.googleusercontent.com\",\r\n            developerKey: \"AIzaSyApSN-CVcrcURGIUIAS3wtNgIlOszHwk2k\",\r\n            viewId: \"DOCS\", // or you can remove this if it restricts the file types incorrectly\r\n            showUploadView: true,\r\n            showUploadFolders: true,\r\n            supportDrives: true,\r\n            multiselect: true,\r\n            mimeTypes: ['audio/mpeg', 'audio/wav', 'audio/mp3', 'audio/x-wav', 'audio/x-m4a'], // Allow specific audio types\r\n            callbackFunction: (data) => {\r\n                console.log('Google Drive callback data:', data);\r\n    \r\n                if (data.action === 'picked') { // Ensure files were picked\r\n                    const audioFiles = data.docs.filter(doc => doc.mimeType.startsWith('audio/'));\r\n    \r\n                    if (audioFiles.length > 0) {\r\n                        console.log('Audio files selected from Google Drive:', audioFiles);\r\n                        navigate('/Landingpage');  // Navigate to Landingpage if audio files are selected\r\n                    } else {\r\n                        console.log('No audio files selected');\r\n                        alert('Please select only audio files.');\r\n                    }\r\n                } else {\r\n                    console.log('User canceled or closed the picker');\r\n                }\r\n            },\r\n        });\r\n        console.log('Google Drive clicked');\r\n    };\r\n    \r\n    \r\n  return (\r\n    <div style={pageStyle}>\r\n      <div style={containerStyle}>  {/* Container to hold text at the top */}\r\n        <h1 style={headingStyle}>Mellowdies</h1>\r\n        <p style={paragraphStyle}>Upload a file!</p>\r\n\r\n        {/* Accept only audio files */}\r\n        <input\r\n            type=\"file\"\r\n            style={buttonStyle}\r\n            accept=\"audio/*\"  // This restricts file selection to audio files only\r\n            onChange={handleFileUpload}\r\n        />\r\n\r\n\r\n         <button style={buttonStyle} onClick={handleGoogleDrive}> {/* Additional upload buttons */}\r\n             Upload from Google Drive\r\n         </button>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}