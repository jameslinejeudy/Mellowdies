{"ast":null,"code":"import menubutton from '../images/menubutton.png';\nimport React, { useState, useEffect } from \"react\";\nimport { Client } from \"@gradio/client\";\n\n//const app = await Client.connect(\"https://facebook-musicgen.hf.space/\");\n\nconst menubackground = {\n  width: '25%',\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  // Stack elements vertically\n  justifyContent: 'flex-start',\n  // Align items at the top initially\n  alignItems: 'left',\n  border: '2px solid #ffffff',\n  // Sharp white border\n  backgroundColor: '#ffffff',\n  // White background\n  fontFamily: \"'Concert One', cursive\",\n  // Apply Concert One font\n  fontSize: '1.2rem',\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\n  // Soft, glowy white shadow\n  border: 'none',\n  position: 'fixed',\n  // Fix the sidebar to the top\n  top: '0',\n  // Position it at the top\n  left: '0',\n  // Ensure it starts from the left edge\n  zIndex: '1000',\n  // Ensure it stays on top of other elements\n  paddingTop: '50px' // Add some space from the top\n};\nconst backbuttonStyle = {\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  justifyContent: 'center',\n  position: 'fixed',\n  // Fixes the button position\n  top: '1%',\n  // Adjust to add some space from the top\n  left: '0.5%',\n  zIndex: '1001',\n  // Ensure it stays on top of the menu\n  cursor: 'pointer',\n  backgroundColor: 'rgba(255, 255, 255, 0.0)',\n  // Transparent background\n  border: 'none',\n  padding: '0',\n  width: 'auto',\n  height: 'auto'\n};\nconst textstyle = {\n  color: '#000000',\n  // Black text color\n  fontSize: '2rem',\n  textAlign: 'center',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  marginTop: '50px' // Lower the menu header by adding a margin at the top\n};\nconst backButtonStyle = {\n  marginTop: '10px',\n  background: '#007bff',\n  // Blue background (Bootstrap primary color)\n  color: '#fff',\n  // White text color\n  border: 'none',\n  // Remove default border\n  padding: '10px 20px',\n  // Add padding to make the button taller and wider\n  borderRadius: '5px',\n  // Slightly round the corners\n  cursor: 'pointer',\n  // Change cursor to pointer\n  fontSize: '16px',\n  // Adjust font size\n  textAlign: 'center',\n  // Center the text\n  width: 'auto',\n  // Adjust width to fit the content\n  display: 'inline-block',\n  transition: 'background 0.3s ease' // Add a transition effect for hover\n};\nconst contentStyle = {\n  flexGrow: 1,\n  // Take up remaining space\n  paddingTop: '60px' // Add padding to push content lower\n};\nconst generateButtonStyle = {\n  marginTop: '20px',\n  background: '#28a745',\n  // Green background for the generate button\n  color: '#fff',\n  border: 'none',\n  padding: '10px 20px',\n  borderRadius: '5px',\n  cursor: 'pointer',\n  fontSize: '16px',\n  textAlign: 'center',\n  width: 'auto',\n  display: 'inline-block',\n  transition: 'background 0.3s ease'\n};\nconst descriptionBoxStyle = {\n  marginTop: '20px',\n  padding: '10px',\n  borderRadius: '5px',\n  border: '1px solid #ccc',\n  width: '90%' // Width of the input box\n};\nasync function generateMusic(description) {\n  try {\n    console.log(\"Connecting to the MusicGen API...\");\n\n    // Initialize the Client connection to the MusicGen API endpoint\n    const client = await Client.connect(\"https://facebook-musicgen.hf.space/\");\n    console.log(\"Connected to MusicGen API successfully.\");\n\n    // Test generating music using the text description\n    const result = await client.predict(0, [description]);\n\n    // If the result is received, process and return it\n    if (result && result.data) {\n      console.log(\"Music generation successful:\", result.data);\n      return result.data;\n    } else {\n      console.error(\"No data received from the API.\");\n      return null;\n    }\n  } catch (error) {\n    // Log the error and check if it's a CORS issue\n    if (error.message.includes(\"CORS\")) {\n      console.error(\"CORS error detected. The request was blocked:\", error);\n      alert(\"CORS issue: Your request was blocked.\");\n    } else {\n      console.error(\"Error while connecting to the API:\", error);\n    }\n  }\n}\n\n// Call this function when you want to generate music (e.g., via a button click)\nfunction handleGenerateMusicClick() {\n  const description = \"happy rock\"; // Example description, replace with user input if needed\n  generateMusic(description).then(audio => {\n    if (audio) {\n      // You can now play the audio or handle the response\n      console.log(\"Generated music:\", audio);\n    }\n  }).catch(error => {\n    console.error(\"Error during the music generation process:\", error);\n  });\n}\n\n// You can set up an event listener to call the function when a button is clicked\ndocument.getElementById(\"generate-button\").addEventListener(\"click\", handleGenerateMusicClick);","map":{"version":3,"names":["menubutton","React","useState","useEffect","Client","menubackground","width","height","display","flexDirection","justifyContent","alignItems","border","backgroundColor","fontFamily","fontSize","boxShadow","position","top","left","zIndex","paddingTop","backbuttonStyle","cursor","padding","textstyle","color","textAlign","marginTop","backButtonStyle","background","borderRadius","transition","contentStyle","flexGrow","generateButtonStyle","descriptionBoxStyle","generateMusic","description","console","log","client","connect","result","predict","data","error","message","includes","alert","handleGenerateMusicClick","then","audio","catch","document","getElementById","addEventListener"],"sources":["C:/Users/kevin/Desktop/School/Senior Project/Github Branch/Mellowdies/mellowdies/src/Landingpage/Ai.js"],"sourcesContent":["import menubutton from '../images/menubutton.png';\r\nimport React, { useState,useEffect } from \"react\";\r\nimport { Client } from \"@gradio/client\";\r\n\r\n//const app = await Client.connect(\"https://facebook-musicgen.hf.space/\");\r\n\r\nconst menubackground = {\r\n  width: '25%',\r\n  height: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column', // Stack elements vertically\r\n  justifyContent: 'flex-start', // Align items at the top initially\r\n  alignItems: 'left',\r\n  border: '2px solid #ffffff',  // Sharp white border\r\n  backgroundColor: '#ffffff',  // White background\r\n  fontFamily: \"'Concert One', cursive\",  // Apply Concert One font\r\n  fontSize: '1.2rem',\r\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',  // Soft, glowy white shadow\r\n  border: 'none',\r\n  position: 'fixed',  // Fix the sidebar to the top\r\n  top: '0',  // Position it at the top\r\n  left: '0',  // Ensure it starts from the left edge\r\n  zIndex: '1000',  // Ensure it stays on top of other elements\r\n  paddingTop: '50px', // Add some space from the top\r\n};\r\n\r\nconst backbuttonStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'row',  \r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  position: 'fixed', // Fixes the button position\r\n  top: '1%',  // Adjust to add some space from the top\r\n  left: '0.5%',\r\n  zIndex: '1001',  // Ensure it stays on top of the menu\r\n  cursor: 'pointer',\r\n  backgroundColor: 'rgba(255, 255, 255, 0.0)',  // Transparent background\r\n  border: 'none',\r\n  padding: '0',\r\n  width: 'auto',\r\n  height: 'auto',\r\n};\r\n\r\nconst textstyle = {\r\n  color: '#000000',  // Black text color\r\n  fontSize: '2rem',\r\n  textAlign: 'center',\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  marginTop: '50px',  // Lower the menu header by adding a margin at the top\r\n};\r\n\r\nconst backButtonStyle = {\r\nmarginTop: '10px',\r\nbackground: '#007bff', // Blue background (Bootstrap primary color)\r\ncolor: '#fff', // White text color\r\nborder: 'none', // Remove default border\r\npadding: '10px 20px', // Add padding to make the button taller and wider\r\nborderRadius: '5px', // Slightly round the corners\r\ncursor: 'pointer', // Change cursor to pointer\r\nfontSize: '16px', // Adjust font size\r\ntextAlign: 'center', // Center the text\r\nwidth: 'auto', // Adjust width to fit the content\r\ndisplay: 'inline-block',\r\ntransition: 'background 0.3s ease', // Add a transition effect for hover\r\n};\r\n\r\nconst contentStyle = {\r\nflexGrow: 1, // Take up remaining space\r\npaddingTop: '60px', // Add padding to push content lower\r\n};\r\n\r\nconst generateButtonStyle = {\r\n  marginTop: '20px',\r\n  background: '#28a745', // Green background for the generate button\r\n  color: '#fff',\r\n  border: 'none',\r\n  padding: '10px 20px',\r\n  borderRadius: '5px',\r\n  cursor: 'pointer',\r\n  fontSize: '16px',\r\n  textAlign: 'center',\r\n  width: 'auto',\r\n  display: 'inline-block',\r\n  transition: 'background 0.3s ease',\r\n};\r\n\r\nconst descriptionBoxStyle = {\r\n  marginTop: '20px',\r\n  padding: '10px',\r\n  borderRadius: '5px',\r\n  border: '1px solid #ccc',\r\n  width: '90%', // Width of the input box\r\n};\r\n\r\nasync function generateMusic(description) {\r\n  try {\r\n    console.log(\"Connecting to the MusicGen API...\");\r\n\r\n    // Initialize the Client connection to the MusicGen API endpoint\r\n    const client = await Client.connect(\"https://facebook-musicgen.hf.space/\");\r\n    console.log(\"Connected to MusicGen API successfully.\");\r\n\r\n    // Test generating music using the text description\r\n    const result = await client.predict(0, [description]);\r\n\r\n    // If the result is received, process and return it\r\n    if (result && result.data) {\r\n      console.log(\"Music generation successful:\", result.data);\r\n      return result.data;\r\n    } else {\r\n      console.error(\"No data received from the API.\");\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    // Log the error and check if it's a CORS issue\r\n    if (error.message.includes(\"CORS\")) {\r\n      console.error(\"CORS error detected. The request was blocked:\", error);\r\n      alert(\"CORS issue: Your request was blocked.\");\r\n    } else {\r\n      console.error(\"Error while connecting to the API:\", error);\r\n    }\r\n  }\r\n}\r\n\r\n// Call this function when you want to generate music (e.g., via a button click)\r\nfunction handleGenerateMusicClick() {\r\n  const description = \"happy rock\"; // Example description, replace with user input if needed\r\n  generateMusic(description)\r\n    .then((audio) => {\r\n      if (audio) {\r\n        // You can now play the audio or handle the response\r\n        console.log(\"Generated music:\", audio);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during the music generation process:\", error);\r\n    });\r\n}\r\n\r\n// You can set up an event listener to call the function when a button is clicked\r\ndocument.getElementById(\"generate-button\").addEventListener(\"click\", handleGenerateMusicClick);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}