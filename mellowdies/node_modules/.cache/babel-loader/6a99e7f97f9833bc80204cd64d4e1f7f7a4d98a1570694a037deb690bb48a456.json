{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elect\\\\Documents\\\\CIS\\\\4914\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Menu.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Menu.css';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar utils = require(\"audio-buffer-utils\");\nvar blobber = require('audiobuffer-to-blob');\nvar slicer = require('audiobuffer-slice');\nlet sliceBuffer = null;\nlet undoBuf = [];\nlet redoBuf = [];\nlet copyBufs = [];\nlet orig = null;\nfunction storeBuffer(buffer) {\n  undoBuf.push(buffer);\n}\nfunction getAudioSlice(buffer, start, end) {\n  slicer(buffer, start * 1000, end * 1000, function (error, slicedBuffer) {\n    if (error) {\n      console.error(error);\n      return;\n    } else {\n      sliceBuffer = slicedBuffer;\n    }\n  });\n  return sliceBuffer;\n}\nfunction Menu({\n  handleBack,\n  waveData\n}) {\n  _s();\n  const filters = waveData[0].filters;\n  const [isGainModalOpen, setGainModalOpen] = useState(false);\n  const [isDelayModalOpen, setDelayModalOpen] = useState(false);\n  const [isDistortionModalOpen, setDistortionModalOpen] = useState(false);\n  const [isReverbModalOpen, setReverbModalOpen] = useState(false);\n  const [isEquaModalOpen, setEquaModalOpen] = useState(false);\n  const [isEquaInit, setEquaInit] = useState(false);\n  const [isBacked, setBacked] = useState(false);\n  const [gainValue, setGainValue] = useState(100);\n  const [delayTime, setDelayTime] = useState(0.00);\n  const [feedback, setFeedback] = useState(0.00);\n  const [wetness, setWetness] = useState(0.00);\n  const [dryness, setDryness] = useState(0.00);\n  const [gainDistortValue, setGainDistortValue] = useState(100);\n  const [reverbTime, setReverbTime] = useState(0.00);\n  const [decay, setDecay] = useState(0.00);\n  const [reverbWet, setReverbWet] = useState(0.00);\n  const [filter0Val, setFilter0] = useState(filters[0].gain.value);\n  const [filter1Val, setFilter1] = useState(filters[1].gain.value);\n  const [filter2Val, setFilter2] = useState(filters[2].gain.value);\n  const [filter3Val, setFilter3] = useState(filters[3].gain.value);\n  const [filter4Val, setFilter4] = useState(filters[4].gain.value);\n  const [filter5Val, setFilter5] = useState(filters[5].gain.value);\n  const [filter6Val, setFilter6] = useState(filters[6].gain.value);\n  const [filter7Val, setFilter7] = useState(filters[7].gain.value);\n  const [filter8Val, setFilter8] = useState(filters[8].gain.value);\n  const [filter9Val, setFilter9] = useState(filters[9].gain.value);\n  const [showAdvanced, setShowAdvanced] = useState(false);\n  const error = message => toast.error(message);\n  const success = message => toast.success(message);\n  const toggleAdvancedOptions = () => {\n    setShowAdvanced(prev => !prev);\n  };\n  if (isBacked === false) {\n    orig = utils.clone(waveData[0].waveSurfer.getDecodedData());\n    setBacked(true);\n  }\n  if (isEquaInit === false) {\n    waveData[0].webAudioPlayer.gainNode.connect(filters[0]);\n    filters[0].connect(filters[1]);\n    filters[1].connect(filters[2]);\n    filters[2].connect(filters[3]);\n    filters[3].connect(filters[4]);\n    filters[4].connect(filters[5]);\n    filters[5].connect(filters[6]);\n    filters[6].connect(filters[7]);\n    filters[7].connect(filters[8]);\n    filters[8].connect(filters[9]);\n    filters[9].connect(waveData[0].webAudioPlayer.audioContext.destination);\n  }\n  const setFilter = () => {\n    filters[0].gain.value = filter0Val;\n    filters[1].gain.value = filter1Val;\n    filters[2].gain.value = filter2Val;\n    filters[3].gain.value = filter3Val;\n    filters[4].gain.value = filter4Val;\n    filters[5].gain.value = filter5Val;\n    filters[6].gain.value = filter6Val;\n    filters[7].gain.value = filter7Val;\n    filters[8].gain.value = filter8Val;\n    filters[9].gain.value = filter9Val;\n    success(\"EQ applied to current playback.\");\n  };\n  const undo = () => {\n    if (undoBuf.length >= 1) {\n      let buffer = undoBuf.pop();\n      let redoBuffer = waveData[0].waveSurfer.getDecodedData();\n      redoBuf.push(redoBuffer);\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n      success(\"Undid last action.\");\n    } else {\n      error(\"Nothing to undo.\");\n      return;\n    }\n  };\n  const redo = () => {\n    if (redoBuf.length >= 1) {\n      let buffer = redoBuf.pop();\n      let undoBuffer = waveData[0].waveSurfer.getDecodedData();\n      undoBuf.push(undoBuffer);\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n      success(\"Redid last action.\");\n    } else {\n      error(\"Nothing to redo.\");\n      return;\n    }\n  };\n  const reset = () => {\n    if (undoBuf.length >= 1) {\n      waveData[0].waveSurfer.loadBlob(blobber(orig)).catch(error => console.log(error));\n      undoBuf = [];\n      redoBuf = [];\n      success(\"All changes have been reset.\");\n    } else {\n      error(\"Nothing to reset.\");\n      return;\n    }\n  };\n  const reverse = () => {\n    if (waveData[0].regions.getRegions().length != 1) {\n      error(\"Please select a region to apply the effect.\");\n      return;\n    }\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    if (buffer) {\n      utils.reverse(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n      success(\"Reversed region.\");\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    } else {\n      error('No audio buffer loaded');\n    }\n  };\n  const invert = () => {\n    if (waveData[0].regions.getRegions().length != 1) {\n      error(\"Please select a region to apply the effect.\");\n      return;\n    }\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    if (buffer) {\n      utils.invert(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n      success(\"Inverted region.\");\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    } else {\n      error('No audio buffer loaded');\n    }\n  };\n  const normalize = () => {\n    if (waveData[0].regions.getRegions().length != 1) {\n      error(\"Please select a region to apply the effect.\");\n      return;\n    }\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    if (buffer) {\n      utils.normalize(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n      success(\"Normalized region.\");\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    } else {\n      error('No audio buffer loaded');\n    }\n  };\n  const openGainModal = () => setGainModalOpen(true);\n  const closeGainModal = () => setGainModalOpen(false);\n  const adjustGain = () => {\n    if (waveData[0].regions.getRegions().length != 1) {\n      error(\"Please select a region to apply the effect.\");\n      return;\n    }\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let gain = gainValue / 100;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] *= gain;\n        }\n      }\n      success('Adjusted gain on region:', gain);\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const fadeIn = () => {\n    if (waveData[0].regions.getRegions().length != 1) {\n      error(\"Please select a region to apply the effect.\");\n      return;\n    }\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let stepInc = 1 / (end - start);\n    let currGain = 0;\n    let steps = 0;\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] *= currGain + steps * stepInc;\n          steps += 1;\n        }\n        steps = 0;\n      }\n      success('Region faded in.');\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const fadeOut = () => {\n    if (waveData[0].regions.getRegions().length != 1) {\n      error(\"Please select a region to apply the effect.\");\n      return;\n    }\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let stepInc = 1 / (end - start);\n    let currGain = 1;\n    let steps = 0;\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] *= currGain - steps * stepInc;\n          steps += 1;\n        }\n        steps = 0;\n      }\n      success('Region faded out.');\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const openDistortionModal = () => setDistortionModalOpen(true);\n  const closeDistortionModal = () => setDistortionModalOpen(false);\n  const distort = () => {\n    if (waveData[0].regions.getRegions().length != 1) {\n      error(\"Please select a region to apply the effect.\");\n      return;\n    }\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    if (!buffer) return;\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    const gain = gainDistortValue / 100;\n    const wet = 0.5;\n    const dry = 1 - wet;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          const drySample = channelData[sample];\n          const wetSample = Math.atan(gain * drySample);\n          channelData[sample] = dry * drySample + wet * wetSample;\n        }\n      }\n      success('Applied distortion to region.');\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const openDelayModal = () => setDelayModalOpen(true);\n  const closeDelayModal = () => setDelayModalOpen(false);\n  const delay = () => {\n    if (waveData[0].regions.getRegions().length != 1) {\n      error(\"Please select a region to apply the effect.\");\n      return;\n    }\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    if (!buffer) return;\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let wet = wetness;\n    let dry = dryness;\n    let feeder = feedback;\n    let numChannels = buffer.numberOfChannels;\n    let delaySamples = Math.ceil(sampleRate * delayTime);\n    if (numChannels === 1) {\n      let channelData = buffer.getChannelData(0);\n      let delayBuffer = new Float32Array(delaySamples).fill(0);\n      for (let i = start; i < end; i++) {\n        let delayIndex = (i - start) % delaySamples;\n        let delayedSample = delayBuffer[delayIndex];\n        channelData[i] = channelData[i] * dry + delayedSample * wet;\n        delayBuffer[delayIndex] = feeder * delayedSample + channelData[i];\n      }\n    } else if (numChannels === 2) {\n      let channelLeft = buffer.getChannelData(0);\n      let channelRight = buffer.getChannelData(1);\n      let delayBufferLeft = new Float32Array(delaySamples).fill(0);\n      let delayBufferRight = new Float32Array(delaySamples).fill(0);\n      for (let i = start; i < end; i++) {\n        let delayIndex = (i - start) % delaySamples;\n        let delayedLeft = delayBufferLeft[delayIndex];\n        channelLeft[i] = channelLeft[i] * dry + delayedLeft * wet;\n        delayBufferLeft[delayIndex] = feeder * delayedLeft + channelLeft[i];\n        let delayedRight = delayBufferRight[delayIndex];\n        channelRight[i] = channelRight[i] * dry + delayedRight * wet;\n        delayBufferRight[delayIndex] = feeder * delayedRight + channelRight[i];\n      }\n    }\n    success(\"Applied delay to region.\");\n    let blob = blobber(buffer);\n    waveData[0].waveSurfer.loadBlob(blob).catch(error => console.error(error));\n  };\n  const openReverbModal = () => setReverbModalOpen(true);\n  const closeReverbModal = () => setReverbModalOpen(false);\n  const reverb = () => {\n    if (waveData[0].regions.getRegions().length != 1) {\n      error(\"Please select a region to apply the effect.\");\n      return;\n    }\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    if (!buffer) return;\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let undoBufize = end - start;\n    let channelLeft = buffer.getChannelData(0);\n    let channelRight = buffer.getChannelData(1);\n    let samplesLeft = new Float32Array(channelLeft.subarray(start, end));\n    let samplesRight = new Float32Array(channelRight.subarray(start, end));\n    const combDelays = [0.0297, 0.0371, 0.0411, 0.0437].map(t => Math.floor(t * sampleRate));\n    const combGains = [0.773, 0.802, 0.753, 0.733];\n    const allPassDelays = [0.005, 0.0017].map(t => Math.floor(t * sampleRate));\n    const decayFactor = decay || 0.5;\n    const wetLevel = reverbWet || 0.5;\n    const processCombFilters = samples => {\n      const combundoBuf = combDelays.map(delay => new Float32Array(delay).fill(0));\n      let output = new Float32Array(samples.length);\n      for (let i = 0; i < samples.length; i++) {\n        let wetSample = 0;\n        for (let c = 0; c < combundoBuf.length; c++) {\n          const delay = combundoBuf[c];\n          const delayIndex = i % delay.length;\n          const delayedSample = delay[delayIndex];\n          wetSample += delayedSample;\n          delay[delayIndex] = samples[i] + delayedSample * combGains[c] * decayFactor;\n        }\n        output[i] = wetSample;\n      }\n      return output;\n    };\n    let combOutputLeft = processCombFilters(samplesLeft);\n    let combOutputRight = processCombFilters(samplesRight);\n    const processAllPassFilters = samples => {\n      const allPassundoBuf = allPassDelays.map(delay => new Float32Array(delay).fill(0));\n      for (let i = 0; i < samples.length; i++) {\n        for (let a = 0; a < allPassundoBuf.length; a++) {\n          const delay = allPassundoBuf[a];\n          const delayIndex = i % delay.length;\n          const delayedSample = delay[delayIndex];\n          const allPassSample = -0.7 * samples[i] + delayedSample + 0.7 * samples[i];\n          delay[delayIndex] = samples[i] + delayedSample * 0.7;\n          samples[i] = allPassSample;\n        }\n      }\n      return samples;\n    };\n    let allPassOutputLeft = processAllPassFilters(combOutputLeft);\n    let allPassOutputRight = processAllPassFilters(combOutputRight);\n    for (let i = 0; i < undoBufize; i++) {\n      channelLeft[start + i] = (1 - wetLevel) * samplesLeft[i] + wetLevel * allPassOutputLeft[i];\n      channelRight[start + i] = (1 - wetLevel) * samplesRight[i] + wetLevel * allPassOutputRight[i];\n    }\n    success('Applied reverb to region');\n    let blob = blobber(buffer);\n    waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n  };\n  const closeEquaModal = () => setEquaModalOpen(false);\n  const openEquaModal = () => {\n    setEquaInit(true);\n    setEquaModalOpen(true);\n  };\n  const cut = () => {\n    if (waveData[0].regions.getRegions().length === 1) {\n      let buffer = waveData[0].waveSurfer.getDecodedData();\n      let clone = utils.clone(buffer);\n      storeBuffer(clone);\n      let region = waveData[0].regions.getRegions()[0];\n      let slicedBuffer = getAudioSlice(buffer, region.start, region.end);\n      copyBufs[0] = slicedBuffer;\n      let newBuf1 = getAudioSlice(buffer, 0, region.start);\n      let newBuf2 = getAudioSlice(buffer, region.end, buffer.duration);\n      let newBuf = utils.concat(newBuf1, newBuf2);\n      let blob = blobber(newBuf);\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n      success(\"Region has been cut.\");\n      return;\n    } else {\n      error(\"Please select a region to cut.\");\n      return;\n    }\n  };\n  const copy = () => {\n    if (waveData[0].regions.getRegions().length === 1) {\n      let buffer = waveData[0].waveSurfer.getDecodedData();\n      let clone = utils.clone(buffer);\n      storeBuffer(clone);\n      let region = waveData[0].regions.getRegions()[0];\n      let slicedBuffer = getAudioSlice(buffer, region.start, region.end);\n      copyBufs[0] = slicedBuffer;\n      success(\"Region has been copied.\");\n      return;\n    } else {\n      error(\"Please select a region to copy.\");\n      return;\n    }\n  };\n  const paste = () => {\n    if (copyBufs.length >= 1) {\n      let buffer = waveData[0].waveSurfer.getDecodedData();\n      let clone = utils.clone(buffer);\n      storeBuffer(clone);\n      if (waveData[0].regions.getRegions().length === 1) {\n        let region = waveData[0].regions.getRegions()[0];\n        let newBuf1 = getAudioSlice(buffer, 0, region.start);\n        let newBuf2 = getAudioSlice(buffer, region.end, buffer.duration);\n        let newBuf = utils.concat(newBuf1, copyBufs[0], newBuf2);\n        let blob = blobber(newBuf);\n        waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n        success(\"Region has been pasted.\");\n      } else {\n        let currTime = waveData[0].waveSurfer.getCurrentTime();\n        let newBuf1 = getAudioSlice(buffer, 0, currTime);\n        let newBuf2 = getAudioSlice(buffer, currTime, buffer.duration);\n        let newBuf = utils.concat(newBuf1, copyBufs[0], newBuf2);\n        let blob = blobber(newBuf);\n        waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n        success(\"Region has been pasted.\");\n      }\n    } else {\n      error(\"Nothing to paste.\");\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menubackground\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"bottom-right\",\n      autoClose: 2000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"topToolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toolbarButtonStyle\",\n        onClick: undo,\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toolbarButtonStyle\",\n        onClick: redo,\n        children: \"Redo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toolbarButtonStyle\",\n        onClick: reset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bufferButtonStyle\",\n        onClick: cut,\n        children: \"Cut\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bufferButtonStyle\",\n        onClick: copy,\n        children: \"Copy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bufferButtonStyle\",\n        onClick: paste,\n        children: \"Paste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentStyle\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"sectionTitle\",\n        children: \"Selected Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonGrid\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"backButtonStyle\",\n          onClick: handleBack,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"simpleButtonStyle\",\n          onClick: reverse,\n          children: \"Reverse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"simpleButtonStyle\",\n          onClick: fadeIn,\n          children: \"Fade In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"simpleButtonStyle\",\n          onClick: fadeOut,\n          children: \"Fade Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"simpleButtonStyle\",\n          onClick: invert,\n          children: \"Invert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentStyle\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"backButtonStyle\",\n          onClick: handleBack,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 9\n        }, this), isGainModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlayStyle\",\n            onClick: closeGainModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalStyle\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Gain Percentage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"gains\",\n              type: \"range\",\n              min: \"0\",\n              max: \"200\",\n              step: \"0.01\",\n              value: gainValue,\n              onInput: e => setGainValue(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"gainVal\",\n              children: [gainValue, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeGainModal,\n              className: \"navigationButtonStyle\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: adjustGain,\n              className: \"navigationButtonStyle\",\n              children: \"Apply Gain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), isDelayModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlayStyle\",\n            onClick: closeDelayModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalStyle\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Delay Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"delayT\",\n              type: \"range\",\n              min: \"0\",\n              max: \"6\",\n              step: \"0.01\",\n              value: delayTime,\n              onInput: e => setDelayTime(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"delayVal\",\n              children: delayTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"feedback\",\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.01\",\n              value: feedback,\n              onInput: e => setFeedback(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"feedVal\",\n              children: feedback\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Wet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"wets\",\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.01\",\n              value: wetness,\n              onInput: e => setWetness(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"wetVal\",\n              children: wetness\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Dry\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"dryer\",\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.01\",\n              value: dryness,\n              onInput: e => setDryness(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"dryVal\",\n              children: dryness\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeDelayModal,\n              className: \"navigationButtonStyle\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: delay,\n              className: \"navigationButtonStyle\",\n              children: \"Apply Delay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), isDistortionModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlayStyle\",\n            onClick: closeDistortionModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalStyle\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Gain Percentage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"gains\",\n              type: \"range\",\n              min: \"0\",\n              max: \"200\",\n              step: \"0.01\",\n              value: gainDistortValue,\n              onInput: e => setGainDistortValue(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"gainDistortVal\",\n              children: [gainDistortValue, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeDistortionModal,\n              className: \"navigationButtonStyle\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: distort,\n              className: \"navigationButtonStyle\",\n              children: \"Apply Distortion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), isReverbModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlayStyle\",\n            onClick: closeReverbModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalStyle\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"reverbT\",\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.01\",\n              value: reverbTime,\n              onInput: e => setReverbTime(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"reverbTime\",\n              children: reverbTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Decay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"decay\",\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.01\",\n              value: decay,\n              onInput: e => setDecay(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"decayVal\",\n              children: decay\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Wet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"wetR\",\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.01\",\n              value: reverbWet,\n              onInput: e => setReverbWet(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 741,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"wetRVal\",\n              children: reverbWet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeReverbModal,\n              className: \"navigationButtonStyle\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: reverb,\n              className: \"navigationButtonStyle\",\n              children: \"Apply Reverb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 754,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), isEquaModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlayStyle\",\n            onClick: closeEquaModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalStyle\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '5px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"32Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 765,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter0\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter0Val,\n                  onInput: e => setFilter0(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 766,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"0\",\n                  children: [filter0Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 776,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 764,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"64Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 780,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter1\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter1Val,\n                  onInput: e => setFilter1(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 781,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"1\",\n                  children: [filter1Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 791,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"125Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 795,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter2\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter2Val,\n                  onInput: e => setFilter2(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 796,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"2\",\n                  children: [filter2Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 806,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"250Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 810,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter3\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter3Val,\n                  onInput: e => setFilter3(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 811,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"3\",\n                  children: [filter3Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 821,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"500Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 825,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter4\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter4Val,\n                  onInput: e => setFilter4(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 826,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"4\",\n                  children: [filter4Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 836,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 824,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"1000Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 841,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter5\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter5Val,\n                  onInput: e => setFilter5(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 842,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"5\",\n                  children: [filter5Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 852,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 840,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"2000Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 856,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter6\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter6Val,\n                  onInput: e => setFilter6(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 857,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"6\",\n                  children: [filter6Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 867,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 855,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"4000Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 871,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter7\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter7Val,\n                  onInput: e => setFilter7(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 872,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"7\",\n                  children: [filter7Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 882,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 870,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"8000Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 886,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter8\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter8Val,\n                  onInput: e => setFilter8(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 887,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"8\",\n                  children: [filter8Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 897,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"16000Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 901,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter9\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter9Val,\n                  onInput: e => setFilter9(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 902,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"9\",\n                  children: [filter9Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 912,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 900,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: closeEquaModal,\n                className: \"navigationButtonStyle\",\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 915,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: setFilter,\n                className: \"navigationButtonStyle\",\n                children: \"Apply EQ\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 916,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"effectsButtonStyle\",\n          onClick: toggleAdvancedOptions,\n          children: showAdvanced ? 'Hide Audio Effects' : 'Audio Effects'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 9\n        }, this), showAdvanced && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"advancedOptions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButtonStyle\",\n            onClick: normalize,\n            children: \"Normalize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 927,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButtonStyle\",\n            onClick: openGainModal,\n            children: \"Adjust Gain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 930,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButtonStyle\",\n            onClick: openDelayModal,\n            children: \"Adjust Delay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButtonStyle\",\n            onClick: openDistortionModal,\n            children: \"Apply Distortion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 936,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButtonStyle\",\n            onClick: openReverbModal,\n            children: \"Apply Reverb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 939,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButtonStyle\",\n            onClick: openEquaModal,\n            children: \"10-Band Equalizer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 942,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 561,\n    columnNumber: 5\n  }, this);\n}\n_s(Menu, \"Z5ektoDyF0jY04bw130sEvaTpGs=\");\n_c = Menu;\nexport default Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","useState","toast","ToastContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","utils","require","blobber","slicer","sliceBuffer","undoBuf","redoBuf","copyBufs","orig","storeBuffer","buffer","push","getAudioSlice","start","end","error","slicedBuffer","console","Menu","handleBack","waveData","_s","filters","isGainModalOpen","setGainModalOpen","isDelayModalOpen","setDelayModalOpen","isDistortionModalOpen","setDistortionModalOpen","isReverbModalOpen","setReverbModalOpen","isEquaModalOpen","setEquaModalOpen","isEquaInit","setEquaInit","isBacked","setBacked","gainValue","setGainValue","delayTime","setDelayTime","feedback","setFeedback","wetness","setWetness","dryness","setDryness","gainDistortValue","setGainDistortValue","reverbTime","setReverbTime","decay","setDecay","reverbWet","setReverbWet","filter0Val","setFilter0","gain","value","filter1Val","setFilter1","filter2Val","setFilter2","filter3Val","setFilter3","filter4Val","setFilter4","filter5Val","setFilter5","filter6Val","setFilter6","filter7Val","setFilter7","filter8Val","setFilter8","filter9Val","setFilter9","showAdvanced","setShowAdvanced","message","success","toggleAdvancedOptions","prev","clone","waveSurfer","getDecodedData","webAudioPlayer","gainNode","connect","audioContext","destination","setFilter","undo","length","pop","redoBuffer","blob","loadBlob","catch","log","redo","undoBuffer","reset","reverse","regions","getRegions","region","sampleRate","invert","normalize","openGainModal","closeGainModal","adjustGain","Math","floor","ceil","channel","numberOfChannels","channelData","getChannelData","sample","fadeIn","stepInc","currGain","steps","fadeOut","openDistortionModal","closeDistortionModal","distort","wet","dry","drySample","wetSample","atan","openDelayModal","closeDelayModal","delay","feeder","numChannels","delaySamples","delayBuffer","Float32Array","fill","i","delayIndex","delayedSample","channelLeft","channelRight","delayBufferLeft","delayBufferRight","delayedLeft","delayedRight","openReverbModal","closeReverbModal","reverb","undoBufize","samplesLeft","subarray","samplesRight","combDelays","map","t","combGains","allPassDelays","decayFactor","wetLevel","processCombFilters","samples","combundoBuf","output","c","combOutputLeft","combOutputRight","processAllPassFilters","allPassundoBuf","a","allPassSample","allPassOutputLeft","allPassOutputRight","closeEquaModal","openEquaModal","cut","newBuf1","newBuf2","duration","newBuf","concat","copy","paste","currTime","getCurrentTime","className","children","position","autoClose","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","type","min","max","step","onInput","e","target","style","display","gap","_c","$RefreshReg$"],"sources":["C:/Users/elect/Documents/CIS/4914/Mellowdies/mellowdies/src/Landingpage/Menu.js"],"sourcesContent":["import React, {useState}  from 'react';\r\nimport './Menu.css';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nvar utils = require(\"audio-buffer-utils\");\r\nvar blobber = require('audiobuffer-to-blob');\r\nvar slicer = require('audiobuffer-slice');\r\nlet sliceBuffer = null;\r\n\r\nlet undoBuf = [];\r\nlet redoBuf = [];\r\nlet copyBufs = [];\r\nlet orig = null;\r\n\r\nfunction storeBuffer (buffer) {\r\n  undoBuf.push(buffer);\r\n}\r\n\r\nfunction getAudioSlice(buffer, start, end) {\r\n  slicer(buffer, start * 1000, end * 1000, function(error, slicedBuffer) {\r\n      if (error) {\r\n          console.error(error);\r\n          return;\r\n      } else {\r\n          sliceBuffer = slicedBuffer;\r\n      }\r\n  })\r\n  return sliceBuffer;\r\n}\r\n\r\nfunction Menu({ handleBack, waveData}) {\r\n  const filters = waveData[0].filters;\r\n  const [isGainModalOpen, setGainModalOpen] = useState(false);\r\n  const [isDelayModalOpen, setDelayModalOpen] = useState(false);\r\n  const [isDistortionModalOpen, setDistortionModalOpen] = useState(false);\r\n  const [isReverbModalOpen, setReverbModalOpen] = useState(false);\r\n  const [isEquaModalOpen, setEquaModalOpen] = useState(false);\r\n  const [isEquaInit, setEquaInit] = useState(false);\r\n  const [isBacked, setBacked] = useState(false);\r\n  const [gainValue, setGainValue] = useState(100);\r\n  const [delayTime, setDelayTime] = useState(0.00);\r\n  const [feedback, setFeedback] = useState(0.00);\r\n  const [wetness, setWetness] = useState(0.00);\r\n  const [dryness, setDryness] = useState(0.00);\r\n  const [gainDistortValue, setGainDistortValue] = useState(100);\r\n  const [reverbTime, setReverbTime] = useState(0.00);\r\n  const [decay, setDecay] = useState(0.00);\r\n  const [reverbWet, setReverbWet] = useState(0.00);\r\n  const [filter0Val, setFilter0] = useState(filters[0].gain.value);\r\n  const [filter1Val, setFilter1] = useState(filters[1].gain.value);\r\n  const [filter2Val, setFilter2] = useState(filters[2].gain.value);\r\n  const [filter3Val, setFilter3] = useState(filters[3].gain.value);\r\n  const [filter4Val, setFilter4] = useState(filters[4].gain.value);\r\n  const [filter5Val, setFilter5] = useState(filters[5].gain.value);\r\n  const [filter6Val, setFilter6] = useState(filters[6].gain.value);\r\n  const [filter7Val, setFilter7] = useState(filters[7].gain.value);\r\n  const [filter8Val, setFilter8] = useState(filters[8].gain.value);\r\n  const [filter9Val, setFilter9] = useState(filters[9].gain.value);\r\n  const [showAdvanced, setShowAdvanced] = useState(false);\r\n\r\n  const error = (message) => toast.error(message);\r\n\r\n  const success = (message) => toast.success(message);\r\n  \r\n  const toggleAdvancedOptions = () => {\r\n    setShowAdvanced((prev) => !prev);\r\n  };\r\n\r\n  if (isBacked === false) {\r\n    orig = utils.clone(waveData[0].waveSurfer.getDecodedData());\r\n    setBacked(true);\r\n  }\r\n\r\n  if (isEquaInit === false) {\r\n    waveData[0].webAudioPlayer.gainNode.connect(filters[0])\r\n    filters[0].connect(filters[1]);\r\n    filters[1].connect(filters[2]);\r\n    filters[2].connect(filters[3]);\r\n    filters[3].connect(filters[4]);\r\n    filters[4].connect(filters[5]);\r\n    filters[5].connect(filters[6]);\r\n    filters[6].connect(filters[7]);\r\n    filters[7].connect(filters[8]);\r\n    filters[8].connect(filters[9]);\r\n    filters[9].connect(waveData[0].webAudioPlayer.audioContext.destination);\r\n  }\r\n  \r\n  const setFilter = () => {\r\n    filters[0].gain.value = filter0Val;\r\n    filters[1].gain.value = filter1Val;\r\n    filters[2].gain.value = filter2Val;\r\n    filters[3].gain.value = filter3Val;\r\n    filters[4].gain.value = filter4Val;\r\n    filters[5].gain.value = filter5Val;\r\n    filters[6].gain.value = filter6Val;\r\n    filters[7].gain.value = filter7Val;\r\n    filters[8].gain.value = filter8Val;\r\n    filters[9].gain.value = filter9Val;\r\n    success(\"EQ applied to current playback.\");\r\n  }\r\n  \r\n  const undo = () => {\r\n    if (undoBuf.length >= 1) {\r\n      let buffer = undoBuf.pop();\r\n      let redoBuffer = waveData[0].waveSurfer.getDecodedData();\r\n      redoBuf.push(redoBuffer);\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n      success(\"Undid last action.\");\r\n    } else {\r\n      error(\"Nothing to undo.\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  const redo = () => {\r\n    if (redoBuf.length >= 1) {\r\n      let buffer = redoBuf.pop();\r\n      let undoBuffer = waveData[0].waveSurfer.getDecodedData();\r\n      undoBuf.push(undoBuffer);\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n      success(\"Redid last action.\");\r\n    } else {\r\n      error(\"Nothing to redo.\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  const reset = () => {\r\n    if (undoBuf.length >= 1) {\r\n      waveData[0].waveSurfer.loadBlob(blobber(orig)).catch(error => console.log(error));\r\n      undoBuf = [];\r\n      redoBuf = [];\r\n      success(\"All changes have been reset.\");\r\n    } else {\r\n      error(\"Nothing to reset.\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  const reverse = () => {\r\n    if (waveData[0].regions.getRegions().length != 1) {\r\n      error(\"Please select a region to apply the effect.\");\r\n      return;\r\n    }\r\n\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer);\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    if (buffer) {\r\n      utils.reverse(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n      success(\"Reversed region.\");\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    } else {\r\n      error('No audio buffer loaded');\r\n    }\r\n  };\r\n\r\n  const invert = () => {\r\n    if (waveData[0].regions.getRegions().length != 1) {\r\n      error(\"Please select a region to apply the effect.\");\r\n      return;\r\n    }\r\n\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer);\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    if (buffer) {\r\n      utils.invert(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n      success(\"Inverted region.\");\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    } else {\r\n      error('No audio buffer loaded');\r\n    }\r\n  };\r\n\r\n  const normalize = () => {\r\n    if (waveData[0].regions.getRegions().length != 1) {\r\n      error(\"Please select a region to apply the effect.\");\r\n      return;\r\n    }\r\n\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer);\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    if (buffer) {\r\n      utils.normalize(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n      success(\"Normalized region.\");\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    } else {\r\n      error('No audio buffer loaded');\r\n    }\r\n  };\r\n\r\n  const openGainModal = () => setGainModalOpen(true);\r\n  const closeGainModal = () => setGainModalOpen(false);\r\n\r\n  const adjustGain = () => {\r\n    if (waveData[0].regions.getRegions().length != 1) {\r\n      error(\"Please select a region to apply the effect.\");\r\n      return;\r\n    }\r\n\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer);\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let gain = gainValue / 100;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] *= gain;\r\n        }\r\n      }\r\n      success('Adjusted gain on region:', gain);\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const fadeIn = () => {\r\n    if (waveData[0].regions.getRegions().length != 1) {\r\n      error(\"Please select a region to apply the effect.\");\r\n      return;\r\n    }\r\n\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer);\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let stepInc = 1 / (end-start);\r\n    let currGain = 0;\r\n    let steps = 0;\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] *= (currGain + (steps * stepInc));\r\n            steps += 1;\r\n        }\r\n        steps = 0;\r\n      }\r\n      success('Region faded in.');\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const fadeOut = () => {\r\n    if (waveData[0].regions.getRegions().length != 1) {\r\n      error(\"Please select a region to apply the effect.\");\r\n      return;\r\n    }\r\n\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer);\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let stepInc = 1 / (end-start);\r\n    let currGain = 1;\r\n    let steps = 0;\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] *= (currGain - (steps * stepInc));\r\n            steps += 1;\r\n        }\r\n        steps = 0;\r\n      }\r\n      success('Region faded out.');\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const openDistortionModal = () => setDistortionModalOpen(true);\r\n  const closeDistortionModal = () => setDistortionModalOpen(false);\r\n\r\n  const distort = () => {\r\n    if (waveData[0].regions.getRegions().length != 1) {\r\n      error(\"Please select a region to apply the effect.\");\r\n      return;\r\n    }\r\n\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    if (!buffer) return;\r\n\r\n    let clone = utils.clone(buffer);\r\n    storeBuffer(clone);\r\n\r\n    let region = waveData[0].regions.getRegions()[0];\r\n    let sampleRate = buffer.sampleRate;\r\n\r\n    const gain = gainDistortValue / 100; \r\n    const wet = 0.5;\r\n    const dry = 1 - wet; \r\n\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n\r\n    if (buffer) {\r\n        for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n            let channelData = buffer.getChannelData(channel);\r\n\r\n            for (let sample = start; sample < end; sample += 1) {\r\n                const drySample = channelData[sample];\r\n                const wetSample = Math.atan(gain * drySample);\r\n                channelData[sample] = (dry * drySample) + (wet * wetSample);\r\n            }\r\n        }\r\n\r\n        success('Applied distortion to region.');\r\n        let blob = blobber(buffer);\r\n        waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n};\r\n\r\n\r\n  const openDelayModal = () => setDelayModalOpen(true);\r\n  const closeDelayModal = () => setDelayModalOpen(false);\r\n\r\n  const delay = () => {\r\n    if (waveData[0].regions.getRegions().length != 1) {\r\n      error(\"Please select a region to apply the effect.\");\r\n      return;\r\n    }\r\n\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    if (!buffer) return;\r\n\r\n    let clone = utils.clone(buffer);\r\n    storeBuffer(clone);\r\n\r\n    let region = waveData[0].regions.getRegions()[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let wet = wetness;\r\n    let dry = dryness;\r\n    let feeder = feedback;\r\n\r\n    let numChannels = buffer.numberOfChannels;\r\n    let delaySamples = Math.ceil(sampleRate * delayTime);\r\n\r\n    if (numChannels === 1) {\r\n        let channelData = buffer.getChannelData(0);\r\n        let delayBuffer = new Float32Array(delaySamples).fill(0);\r\n\r\n        for (let i = start; i < end; i++) {\r\n            let delayIndex = (i - start) % delaySamples;\r\n            let delayedSample = delayBuffer[delayIndex];\r\n            channelData[i] = (channelData[i] * dry) + (delayedSample * wet);\r\n            delayBuffer[delayIndex] = (feeder * delayedSample) + channelData[i];\r\n        }\r\n    } else if (numChannels === 2) {\r\n        let channelLeft = buffer.getChannelData(0);\r\n        let channelRight = buffer.getChannelData(1);\r\n        let delayBufferLeft = new Float32Array(delaySamples).fill(0);\r\n        let delayBufferRight = new Float32Array(delaySamples).fill(0);\r\n\r\n        for (let i = start; i < end; i++) {\r\n            let delayIndex = (i - start) % delaySamples;\r\n            let delayedLeft = delayBufferLeft[delayIndex];\r\n            channelLeft[i] = (channelLeft[i] * dry) + (delayedLeft * wet);\r\n            delayBufferLeft[delayIndex] = (feeder * delayedLeft) + channelLeft[i];\r\n            let delayedRight = delayBufferRight[delayIndex];\r\n            channelRight[i] = (channelRight[i] * dry) + (delayedRight * wet);\r\n            delayBufferRight[delayIndex] = (feeder * delayedRight) + channelRight[i];\r\n        }\r\n    }\r\n    success(\"Applied delay to region.\");\r\n    let blob = blobber(buffer);\r\n    waveData[0].waveSurfer.loadBlob(blob).catch(error => console.error(error));\r\n};\r\n\r\n\r\n  const openReverbModal = () => setReverbModalOpen(true);\r\n  const closeReverbModal = () => setReverbModalOpen(false);\r\n\r\n  const reverb = () => {\r\n    if (waveData[0].regions.getRegions().length != 1) {\r\n      error(\"Please select a region to apply the effect.\");\r\n      return;\r\n    }\r\n\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    if (!buffer) return;\r\n\r\n    let clone = utils.clone(buffer);\r\n    storeBuffer(clone);\r\n\r\n    let region = waveData[0].regions.getRegions()[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let undoBufize = end - start;\r\n\r\n    let channelLeft = buffer.getChannelData(0);\r\n    let channelRight = buffer.getChannelData(1);\r\n    let samplesLeft = new Float32Array(channelLeft.subarray(start, end));\r\n    let samplesRight = new Float32Array(channelRight.subarray(start, end));\r\n\r\n    const combDelays = [0.0297, 0.0371, 0.0411, 0.0437].map(t => Math.floor(t * sampleRate));\r\n    const combGains = [0.773, 0.802, 0.753, 0.733];\r\n    const allPassDelays = [0.005, 0.0017].map(t => Math.floor(t * sampleRate));\r\n    const decayFactor = decay || 0.5;\r\n    const wetLevel = reverbWet || 0.5;\r\n\r\n    const processCombFilters = (samples) => {\r\n        const combundoBuf = combDelays.map(delay => new Float32Array(delay).fill(0));\r\n        let output = new Float32Array(samples.length);\r\n\r\n        for (let i = 0; i < samples.length; i++) {\r\n            let wetSample = 0;\r\n            for (let c = 0; c < combundoBuf.length; c++) {\r\n                const delay = combundoBuf[c];\r\n                const delayIndex = i % delay.length;\r\n                const delayedSample = delay[delayIndex];\r\n                wetSample += delayedSample;\r\n                delay[delayIndex] = samples[i] + delayedSample * combGains[c] * decayFactor;\r\n            }\r\n            output[i] = wetSample;\r\n        }\r\n        return output;\r\n    };\r\n\r\n    let combOutputLeft = processCombFilters(samplesLeft);\r\n    let combOutputRight = processCombFilters(samplesRight);\r\n\r\n    const processAllPassFilters = (samples) => {\r\n        const allPassundoBuf = allPassDelays.map(delay => new Float32Array(delay).fill(0));\r\n\r\n        for (let i = 0; i < samples.length; i++) {\r\n            for (let a = 0; a < allPassundoBuf.length; a++) {\r\n                const delay = allPassundoBuf[a];\r\n                const delayIndex = i % delay.length;\r\n                const delayedSample = delay[delayIndex];\r\n\r\n                const allPassSample = -0.7 * samples[i] + delayedSample + 0.7 * samples[i];\r\n                delay[delayIndex] = samples[i] + delayedSample * 0.7;\r\n                samples[i] = allPassSample;\r\n            }\r\n        }\r\n        return samples;\r\n    };\r\n\r\n    let allPassOutputLeft = processAllPassFilters(combOutputLeft);\r\n    let allPassOutputRight = processAllPassFilters(combOutputRight);\r\n\r\n    for (let i = 0; i < undoBufize; i++) {\r\n        channelLeft[start + i] = ((1 - wetLevel) * samplesLeft[i]) + (wetLevel * allPassOutputLeft[i]);\r\n        channelRight[start + i] = ((1 - wetLevel) * samplesRight[i]) + (wetLevel * allPassOutputRight[i]);\r\n    }\r\n\r\n    success('Applied reverb to region');\r\n    let blob = blobber(buffer);\r\n    waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n};\r\n\r\n  const closeEquaModal = () => setEquaModalOpen(false);\r\n  const openEquaModal = () => {\r\n    setEquaInit(true);\r\n    setEquaModalOpen(true);\r\n  }\r\n\r\n  const cut = () => {\r\n    if (waveData[0].regions.getRegions().length === 1) {\r\n      let buffer = waveData[0].waveSurfer.getDecodedData();\r\n      let clone = utils.clone(buffer)\r\n      storeBuffer(clone);\r\n      let region = (waveData[0].regions.getRegions())[0];\r\n      let slicedBuffer = getAudioSlice(buffer, region.start, region.end);\r\n      copyBufs[0] = slicedBuffer;\r\n      let newBuf1 = getAudioSlice(buffer, 0, region.start);\r\n      let newBuf2 = getAudioSlice(buffer, region.end, buffer.duration);\r\n      let newBuf = utils.concat(newBuf1, newBuf2);\r\n      let blob = blobber(newBuf);\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n      success(\"Region has been cut.\");\r\n      return;\r\n    } else {\r\n      error(\"Please select a region to cut.\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  const copy = () => {\r\n    if (waveData[0].regions.getRegions().length === 1) {\r\n      let buffer = waveData[0].waveSurfer.getDecodedData();\r\n      let clone = utils.clone(buffer);\r\n      storeBuffer(clone);\r\n      let region = (waveData[0].regions.getRegions())[0];\r\n      let slicedBuffer = getAudioSlice(buffer, region.start, region.end);\r\n      copyBufs[0] = slicedBuffer;\r\n      success(\"Region has been copied.\");\r\n      return;\r\n    } else {\r\n      error(\"Please select a region to copy.\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  const paste = () => {\r\n    if (copyBufs.length >= 1) {\r\n      let buffer = waveData[0].waveSurfer.getDecodedData();\r\n      let clone = utils.clone(buffer);\r\n      storeBuffer(clone);\r\n      if (waveData[0].regions.getRegions().length === 1) {\r\n        let region = (waveData[0].regions.getRegions())[0];\r\n        let newBuf1 = getAudioSlice(buffer, 0, region.start);\r\n        let newBuf2 = getAudioSlice(buffer, region.end, buffer.duration);\r\n        let newBuf = utils.concat(newBuf1, copyBufs[0], newBuf2);\r\n        let blob = blobber(newBuf);\r\n        waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n        success(\"Region has been pasted.\");\r\n      } else {\r\n        let currTime = waveData[0].waveSurfer.getCurrentTime();\r\n        let newBuf1 = getAudioSlice(buffer, 0, currTime);\r\n        let newBuf2 = getAudioSlice(buffer, currTime, buffer.duration);\r\n        let newBuf = utils.concat(newBuf1, copyBufs[0], newBuf2);\r\n        let blob = blobber(newBuf);\r\n        waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n        success(\"Region has been pasted.\");\r\n      }\r\n    } else {\r\n      error(\"Nothing to paste.\");\r\n      return;\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className=\"menubackground\">\r\n      <ToastContainer position=\"bottom-right\" autoClose={2000} />\r\n\r\n      {/* Toolbar at the Top */}\r\n      <div className=\"topToolbar\">\r\n        <button className=\"toolbarButtonStyle\" onClick={undo}>\r\n          Undo\r\n        </button>\r\n        <button className=\"toolbarButtonStyle\" onClick={redo}>\r\n          Redo\r\n        </button>\r\n        <button className=\"toolbarButtonStyle\" onClick={reset}>\r\n          Reset\r\n        </button>\r\n        <button  className=\"bufferButtonStyle\" onClick={cut}>\r\n          Cut\r\n        </button>\r\n\r\n        <button  className=\"bufferButtonStyle\" onClick={copy}>\r\n          Copy\r\n        </button>\r\n\r\n        <button  className=\"bufferButtonStyle\" onClick={paste}>\r\n          Paste\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"contentStyle\">\r\n        <h3 className=\"sectionTitle\">Selected Region</h3>\r\n        <div className=\"buttonGrid\">\r\n          <button className=\"backButtonStyle\" onClick={handleBack}>Back</button>\r\n          <button className=\"simpleButtonStyle\" onClick={reverse}>Reverse</button>\r\n          <button className=\"simpleButtonStyle\" onClick={fadeIn}>Fade In</button>\r\n          <button className=\"simpleButtonStyle\" onClick={fadeOut}>Fade Out</button>\r\n          <button className=\"simpleButtonStyle\" onClick={invert}>Invert</button>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div className=\"contentStyle\">\r\n        <div className='buttonContainer'>\r\n\r\n        <button className=\"backButtonStyle\" onClick={handleBack}>Back</button>\r\n\r\n        {isGainModalOpen && (\r\n          <>\r\n             <div className=\"overlayStyle\" onClick={closeGainModal} />\r\n              <div className=\"modalStyle\">\r\n                <h2>Gain Percentage</h2>\r\n                <input\r\n                  id=\"gains\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"200\"\r\n                  step=\"0.01\"\r\n                  value={gainValue}\r\n                  onInput={(e) => setGainValue(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"gainVal\">{gainValue}%</output>\r\n              <button onClick={closeGainModal} className=\"navigationButtonStyle\">Close</button>\r\n              <button onClick={adjustGain} className=\"navigationButtonStyle\">Apply Gain</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {isDelayModalOpen && (\r\n          <>\r\n             <div className=\"overlayStyle\" onClick={closeDelayModal} />\r\n              <div className=\"modalStyle\">\r\n                <h2>Delay Time</h2>\r\n                <input\r\n                  id=\"delayT\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"6\"\r\n                  step=\"0.01\"\r\n                  value={delayTime}\r\n                  onInput={(e) => setDelayTime(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"delayVal\">{delayTime}</output>\r\n\r\n                <h2>Feedback</h2>\r\n                <input\r\n                  id=\"feedback\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={feedback}\r\n                  onInput={(e) => setFeedback(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"feedVal\">{feedback}</output>\r\n\r\n                <h2>Wet</h2>\r\n                <input\r\n                  id=\"wets\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={wetness}\r\n                  onInput={(e) => setWetness(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"wetVal\">{wetness}</output>\r\n\r\n                <h2>Dry</h2>\r\n                <input\r\n                  id=\"dryer\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={dryness}\r\n                  onInput={(e) => setDryness(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"dryVal\">{dryness}</output>\r\n              <button onClick={closeDelayModal} className=\"navigationButtonStyle\">Close</button>\r\n              <button onClick={delay} className=\"navigationButtonStyle\">Apply Delay</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {isDistortionModalOpen && (\r\n          <>\r\n             <div className=\"overlayStyle\" onClick={closeDistortionModal} />\r\n              <div className=\"modalStyle\">\r\n                <h2>Gain Percentage</h2>\r\n                <input\r\n                  id=\"gains\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"200\"\r\n                  step=\"0.01\"\r\n                  value={gainDistortValue}\r\n                  onInput={(e) => setGainDistortValue(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"gainDistortVal\">{gainDistortValue}%</output>\r\n              <button onClick={closeDistortionModal} className=\"navigationButtonStyle\">Close</button>\r\n              <button onClick={distort} className=\"navigationButtonStyle\">Apply Distortion</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {isReverbModalOpen && (\r\n          <>\r\n             <div className=\"overlayStyle\" onClick={closeReverbModal} />\r\n              <div className=\"modalStyle\">\r\n                <h2>Time</h2>\r\n                <input\r\n                  id=\"reverbT\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={reverbTime}\r\n                  onInput={(e) => setReverbTime(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"reverbTime\">{reverbTime}</output>\r\n\r\n                <h2>Decay</h2>\r\n                <input\r\n                  id=\"decay\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={decay}\r\n                  onInput={(e) => setDecay(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"decayVal\">{decay}</output>\r\n\r\n                <h2>Wet</h2>\r\n                <input\r\n                  id=\"wetR\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={reverbWet}\r\n                  onInput={(e) => setReverbWet(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"wetRVal\">{reverbWet}</output>\r\n\r\n              <button onClick={closeReverbModal} className=\"navigationButtonStyle\">Close</button>\r\n              <button onClick={reverb} className=\"navigationButtonStyle\">Apply Reverb</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {isEquaModalOpen && (\r\n          <>\r\n             <div className=\"overlayStyle\" onClick={closeEquaModal} />\r\n              <div className=\"modalStyle\">\r\n              <div style={{ display: 'flex', gap: '5px' }}>\r\n                <div className=\"sliderContainerStyle\">\r\n                  <h2>32Hz</h2>\r\n                    <input\r\n                      id=\"filter0\"\r\n                      type=\"range\"\r\n                      min=\"-40\"\r\n                      max=\"40\"\r\n                      step=\"0.1\"\r\n                      value={filter0Val}\r\n                      onInput={(e) => setFilter0(e.target.value)}\r\n                      className=\"verticalSliderStyle\"\r\n                    />\r\n                    <output id=\"0\">{filter0Val} dB</output>\r\n                </div>\r\n                \r\n                <div className=\"sliderContainerStyle\">\r\n                  <h2>64Hz</h2>\r\n                    <input\r\n                      id=\"filter1\"\r\n                      type=\"range\"\r\n                      min=\"-40\"\r\n                      max=\"40\"\r\n                      step=\"0.1\"\r\n                      value={filter1Val}\r\n                      onInput={(e) => setFilter1(e.target.value)}\r\n                      className=\"verticalSliderStyle\"\r\n                    />\r\n                    <output id=\"1\">{filter1Val} dB</output>\r\n                </div>\r\n\r\n                <div className=\"sliderContainerStyle\">\r\n                  <h2>125Hz</h2>\r\n                  <input\r\n                    id=\"filter2\"\r\n                    type=\"range\"\r\n                    min=\"-40\"\r\n                    max=\"40\"\r\n                    step=\"0.1\"\r\n                    value={filter2Val}\r\n                    onInput={(e) => setFilter2(e.target.value)}\r\n                    className=\"verticalSliderStyle\"\r\n                  />\r\n                  <output id=\"2\">{filter2Val} dB</output>\r\n                  </div>\r\n\r\n                <div className=\"sliderContainerStyle\"> \r\n                <h2>250Hz</h2>\r\n                <input\r\n                  id=\"filter3\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter3Val}\r\n                  onInput={(e) => setFilter3(e.target.value)}\r\n                  className=\"verticalSliderStyle\"\r\n                />\r\n                <output id=\"3\">{filter3Val} dB</output>\r\n                </div>\r\n                 \r\n                <div className=\"sliderContainerStyle\">\r\n                <h2>500Hz</h2>\r\n                <input\r\n                  id=\"filter4\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter4Val}\r\n                  onInput={(e) => setFilter4(e.target.value)}\r\n                  className=\"verticalSliderStyle\"\r\n                />\r\n                <output id=\"4\">{filter4Val} dB</output>\r\n                </div>\r\n                 \r\n\r\n                <div className=\"sliderContainerStyle\">\r\n                <h2>1000Hz</h2>\r\n                <input\r\n                  id=\"filter5\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter5Val}\r\n                  onInput={(e) => setFilter5(e.target.value)}\r\n                  className=\"verticalSliderStyle\"\r\n                />\r\n                <output id=\"5\">{filter5Val} dB</output>\r\n                </div>\r\n                 \r\n                <div className=\"sliderContainerStyle\">\r\n                <h2>2000Hz</h2>\r\n                <input\r\n                  id=\"filter6\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter6Val}\r\n                  onInput={(e) => setFilter6(e.target.value)}\r\n                  className=\"verticalSliderStyle\"\r\n                />\r\n                <output id=\"6\">{filter6Val} dB</output>\r\n                </div>\r\n                 \r\n                <div className=\"sliderContainerStyle\">\r\n                <h2>4000Hz</h2>\r\n                <input\r\n                  id=\"filter7\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter7Val}\r\n                  onInput={(e) => setFilter7(e.target.value)}\r\n                  className=\"verticalSliderStyle\"\r\n                />\r\n                <output id=\"7\">{filter7Val} dB</output>\r\n                </div>\r\n                 \r\n                <div className=\"sliderContainerStyle\">\r\n                <h2>8000Hz</h2>\r\n                <input\r\n                  id=\"filter8\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter8Val}\r\n                  onInput={(e) => setFilter8(e.target.value)}\r\n                  className=\"verticalSliderStyle\"\r\n                />\r\n                <output id=\"8\">{filter8Val} dB</output>\r\n                </div>\r\n                 \r\n                <div className=\"sliderContainerStyle\">\r\n                <h2>16000Hz</h2>\r\n                <input\r\n                  id=\"filter9\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter9Val}\r\n                  onInput={(e) => setFilter9(e.target.value)}\r\n                  className=\"verticalSliderStyle\"\r\n                />\r\n                <output id=\"9\">{filter9Val} dB</output>\r\n                </div>\r\n\r\n              <button onClick={closeEquaModal} className=\"navigationButtonStyle\">Close</button>\r\n              <button onClick={setFilter} className=\"navigationButtonStyle\">Apply EQ</button>\r\n\r\n            </div>\r\n            </div>\r\n          </>\r\n        )}\r\n        <button className=\"effectsButtonStyle\" onClick={toggleAdvancedOptions}>\r\n            {showAdvanced ? 'Hide Audio Effects' : 'Audio Effects'}\r\n          </button>\r\n          {showAdvanced && (\r\n            <div className=\"advancedOptions\">\r\n              <button className=\"modalButtonStyle\" onClick={normalize}>\r\n                Normalize\r\n              </button>\r\n              <button  className=\"modalButtonStyle\" onClick={openGainModal}>\r\n                Adjust Gain\r\n              </button>\r\n              <button  className=\"modalButtonStyle\" onClick={openDelayModal}>\r\n                Adjust Delay\r\n              </button>\r\n              <button  className=\"modalButtonStyle\" onClick={openDistortionModal}>\r\n                Apply Distortion\r\n              </button>\r\n              <button  className=\"modalButtonStyle\" onClick={openReverbModal}>\r\n                Apply Reverb\r\n              </button>\r\n              <button  className=\"modalButtonStyle\" onClick={openEquaModal}>\r\n                10-Band Equalizer\r\n              </button>\r\n              {/* Add other advanced buttons here as needed */}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}