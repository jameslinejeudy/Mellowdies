{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n  equals\n} = require(\"./util/ArrayHelpers\");\nconst SortableSet = require(\"./util/SortableSet\");\nconst makeSerializable = require(\"./util/makeSerializable\");\nconst {\n  forEachRuntime\n} = require(\"./util/runtime\");\n\n/** @typedef {import(\"./Dependency\").RuntimeSpec} RuntimeSpec */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"./ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"./serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"./serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"./util/Hash\")} Hash */\n\n/** @typedef {typeof UsageState.OnlyPropertiesUsed | typeof UsageState.NoInfo | typeof UsageState.Unknown | typeof UsageState.Used} RuntimeUsageStateType */\n/** @typedef {typeof UsageState.Unused | RuntimeUsageStateType} UsageStateType */\n\nconst UsageState = Object.freeze({\n  Unused: (/** @type {0} */0),\n  OnlyPropertiesUsed: (/** @type {1} */1),\n  NoInfo: (/** @type {2} */2),\n  Unknown: (/** @type {3} */3),\n  Used: (/** @type {4} */4)\n});\nconst RETURNS_TRUE = () => true;\nconst CIRCULAR = Symbol(\"circular target\");\nclass RestoreProvidedData {\n  constructor(exports, otherProvided, otherCanMangleProvide, otherTerminalBinding) {\n    this.exports = exports;\n    this.otherProvided = otherProvided;\n    this.otherCanMangleProvide = otherCanMangleProvide;\n    this.otherTerminalBinding = otherTerminalBinding;\n  }\n\n  /**\n   * @param {ObjectSerializerContext} context context\n   */\n  serialize({\n    write\n  }) {\n    write(this.exports);\n    write(this.otherProvided);\n    write(this.otherCanMangleProvide);\n    write(this.otherTerminalBinding);\n  }\n\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {RestoreProvidedData} RestoreProvidedData\n   */\n  static deserialize({\n    read\n  }) {\n    return new RestoreProvidedData(read(), read(), read(), read());\n  }\n}\nmakeSerializable(RestoreProvidedData, \"webpack/lib/ModuleGraph\", \"RestoreProvidedData\");\n\n/** @typedef {Map<string, ExportInfo>} Exports */\n/** @typedef {string | string[] | false} UsedName */\n\nclass ExportsInfo {\n  constructor() {\n    /** @type {Exports} */\n    this._exports = new Map();\n    this._otherExportsInfo = new ExportInfo(null);\n    this._sideEffectsOnlyInfo = new ExportInfo(\"*side effects only*\");\n    this._exportsAreOrdered = false;\n    /** @type {ExportsInfo=} */\n    this._redirectTo = undefined;\n  }\n\n  /**\n   * @returns {Iterable<ExportInfo>} all owned exports in any order\n   */\n  get ownedExports() {\n    return this._exports.values();\n  }\n\n  /**\n   * @returns {Iterable<ExportInfo>} all owned exports in order\n   */\n  get orderedOwnedExports() {\n    if (!this._exportsAreOrdered) {\n      this._sortExports();\n    }\n    return this._exports.values();\n  }\n\n  /**\n   * @returns {Iterable<ExportInfo>} all exports in any order\n   */\n  get exports() {\n    if (this._redirectTo !== undefined) {\n      const map = new Map(this._redirectTo._exports);\n      for (const [key, value] of this._exports) {\n        map.set(key, value);\n      }\n      return map.values();\n    }\n    return this._exports.values();\n  }\n\n  /**\n   * @returns {Iterable<ExportInfo>} all exports in order\n   */\n  get orderedExports() {\n    if (!this._exportsAreOrdered) {\n      this._sortExports();\n    }\n    if (this._redirectTo !== undefined) {\n      const map = new Map(Array.from(this._redirectTo.orderedExports, item => [item.name, item]));\n      for (const [key, value] of this._exports) {\n        map.set(key, value);\n      }\n      // sorting should be pretty fast as map contains\n      // a lot of presorted items\n      this._sortExportsMap(map);\n      return map.values();\n    }\n    return this._exports.values();\n  }\n\n  /**\n   * @returns {ExportInfo} the export info of unlisted exports\n   */\n  get otherExportsInfo() {\n    if (this._redirectTo !== undefined) return this._redirectTo.otherExportsInfo;\n    return this._otherExportsInfo;\n  }\n\n  /**\n   * @param {Exports} exports exports\n   * @private\n   */\n  _sortExportsMap(exports) {\n    if (exports.size > 1) {\n      const namesInOrder = [];\n      for (const entry of exports.values()) {\n        namesInOrder.push(entry.name);\n      }\n      namesInOrder.sort();\n      let i = 0;\n      for (const entry of exports.values()) {\n        const name = namesInOrder[i];\n        if (entry.name !== name) break;\n        i++;\n      }\n      for (; i < namesInOrder.length; i++) {\n        const name = namesInOrder[i];\n        const correctEntry = /** @type {ExportInfo} */exports.get(name);\n        exports.delete(name);\n        exports.set(name, correctEntry);\n      }\n    }\n  }\n  _sortExports() {\n    this._sortExportsMap(this._exports);\n    this._exportsAreOrdered = true;\n  }\n\n  /**\n   * @param {ExportsInfo | undefined} exportsInfo exports info\n   * @returns {boolean} result\n   */\n  setRedirectNamedTo(exportsInfo) {\n    if (this._redirectTo === exportsInfo) return false;\n    this._redirectTo = exportsInfo;\n    return true;\n  }\n  setHasProvideInfo() {\n    for (const exportInfo of this._exports.values()) {\n      if (exportInfo.provided === undefined) {\n        exportInfo.provided = false;\n      }\n      if (exportInfo.canMangleProvide === undefined) {\n        exportInfo.canMangleProvide = true;\n      }\n    }\n    if (this._redirectTo !== undefined) {\n      this._redirectTo.setHasProvideInfo();\n    } else {\n      if (this._otherExportsInfo.provided === undefined) {\n        this._otherExportsInfo.provided = false;\n      }\n      if (this._otherExportsInfo.canMangleProvide === undefined) {\n        this._otherExportsInfo.canMangleProvide = true;\n      }\n    }\n  }\n  setHasUseInfo() {\n    for (const exportInfo of this._exports.values()) {\n      exportInfo.setHasUseInfo();\n    }\n    this._sideEffectsOnlyInfo.setHasUseInfo();\n    if (this._redirectTo !== undefined) {\n      this._redirectTo.setHasUseInfo();\n    } else {\n      this._otherExportsInfo.setHasUseInfo();\n    }\n  }\n\n  /**\n   * @param {string} name export name\n   * @returns {ExportInfo} export info for this name\n   */\n  getOwnExportInfo(name) {\n    const info = this._exports.get(name);\n    if (info !== undefined) return info;\n    const newInfo = new ExportInfo(name, this._otherExportsInfo);\n    this._exports.set(name, newInfo);\n    this._exportsAreOrdered = false;\n    return newInfo;\n  }\n\n  /**\n   * @param {string} name export name\n   * @returns {ExportInfo} export info for this name\n   */\n  getExportInfo(name) {\n    const info = this._exports.get(name);\n    if (info !== undefined) return info;\n    if (this._redirectTo !== undefined) return this._redirectTo.getExportInfo(name);\n    const newInfo = new ExportInfo(name, this._otherExportsInfo);\n    this._exports.set(name, newInfo);\n    this._exportsAreOrdered = false;\n    return newInfo;\n  }\n\n  /**\n   * @param {string} name export name\n   * @returns {ExportInfo} export info for this name\n   */\n  getReadOnlyExportInfo(name) {\n    const info = this._exports.get(name);\n    if (info !== undefined) return info;\n    if (this._redirectTo !== undefined) return this._redirectTo.getReadOnlyExportInfo(name);\n    return this._otherExportsInfo;\n  }\n\n  /**\n   * @param {string[]} name export name\n   * @returns {ExportInfo | undefined} export info for this name\n   */\n  getReadOnlyExportInfoRecursive(name) {\n    const exportInfo = this.getReadOnlyExportInfo(name[0]);\n    if (name.length === 1) return exportInfo;\n    if (!exportInfo.exportsInfo) return;\n    return exportInfo.exportsInfo.getReadOnlyExportInfoRecursive(name.slice(1));\n  }\n\n  /**\n   * @param {string[]=} name the export name\n   * @returns {ExportsInfo | undefined} the nested exports info\n   */\n  getNestedExportsInfo(name) {\n    if (Array.isArray(name) && name.length > 0) {\n      const info = this.getReadOnlyExportInfo(name[0]);\n      if (!info.exportsInfo) return;\n      return info.exportsInfo.getNestedExportsInfo(name.slice(1));\n    }\n    return this;\n  }\n\n  /**\n   * @param {boolean=} canMangle true, if exports can still be mangled (defaults to false)\n   * @param {Set<string>=} excludeExports list of unaffected exports\n   * @param {any=} targetKey use this as key for the target\n   * @param {ModuleGraphConnection=} targetModule set this module as target\n   * @param {number=} priority priority\n   * @returns {boolean} true, if this call changed something\n   */\n  setUnknownExportsProvided(canMangle, excludeExports, targetKey, targetModule, priority) {\n    let changed = false;\n    if (excludeExports) {\n      for (const name of excludeExports) {\n        // Make sure these entries exist, so they can get different info\n        this.getExportInfo(name);\n      }\n    }\n    for (const exportInfo of this._exports.values()) {\n      if (!canMangle && exportInfo.canMangleProvide !== false) {\n        exportInfo.canMangleProvide = false;\n        changed = true;\n      }\n      if (excludeExports && excludeExports.has(exportInfo.name)) continue;\n      if (exportInfo.provided !== true && exportInfo.provided !== null) {\n        exportInfo.provided = null;\n        changed = true;\n      }\n      if (targetKey) {\n        exportInfo.setTarget(targetKey, /** @type {ModuleGraphConnection} */targetModule, [exportInfo.name], -1);\n      }\n    }\n    if (this._redirectTo !== undefined) {\n      if (this._redirectTo.setUnknownExportsProvided(canMangle, excludeExports, targetKey, targetModule, priority)) {\n        changed = true;\n      }\n    } else {\n      if (this._otherExportsInfo.provided !== true && this._otherExportsInfo.provided !== null) {\n        this._otherExportsInfo.provided = null;\n        changed = true;\n      }\n      if (!canMangle && this._otherExportsInfo.canMangleProvide !== false) {\n        this._otherExportsInfo.canMangleProvide = false;\n        changed = true;\n      }\n      if (targetKey) {\n        this._otherExportsInfo.setTarget(targetKey, /** @type {ModuleGraphConnection} */targetModule, undefined, priority);\n      }\n    }\n    return changed;\n  }\n\n  /**\n   * @param {RuntimeSpec} runtime the runtime\n   * @returns {boolean} true, when something changed\n   */\n  setUsedInUnknownWay(runtime) {\n    let changed = false;\n    for (const exportInfo of this._exports.values()) {\n      if (exportInfo.setUsedInUnknownWay(runtime)) {\n        changed = true;\n      }\n    }\n    if (this._redirectTo !== undefined) {\n      if (this._redirectTo.setUsedInUnknownWay(runtime)) {\n        changed = true;\n      }\n    } else {\n      if (this._otherExportsInfo.setUsedConditionally(used => used < UsageState.Unknown, UsageState.Unknown, runtime)) {\n        changed = true;\n      }\n      if (this._otherExportsInfo.canMangleUse !== false) {\n        this._otherExportsInfo.canMangleUse = false;\n        changed = true;\n      }\n    }\n    return changed;\n  }\n\n  /**\n   * @param {RuntimeSpec} runtime the runtime\n   * @returns {boolean} true, when something changed\n   */\n  setUsedWithoutInfo(runtime) {\n    let changed = false;\n    for (const exportInfo of this._exports.values()) {\n      if (exportInfo.setUsedWithoutInfo(runtime)) {\n        changed = true;\n      }\n    }\n    if (this._redirectTo !== undefined) {\n      if (this._redirectTo.setUsedWithoutInfo(runtime)) {\n        changed = true;\n      }\n    } else {\n      if (this._otherExportsInfo.setUsed(UsageState.NoInfo, runtime)) {\n        changed = true;\n      }\n      if (this._otherExportsInfo.canMangleUse !== false) {\n        this._otherExportsInfo.canMangleUse = false;\n        changed = true;\n      }\n    }\n    return changed;\n  }\n\n  /**\n   * @param {RuntimeSpec} runtime the runtime\n   * @returns {boolean} true, when something changed\n   */\n  setAllKnownExportsUsed(runtime) {\n    let changed = false;\n    for (const exportInfo of this._exports.values()) {\n      if (!exportInfo.provided) continue;\n      if (exportInfo.setUsed(UsageState.Used, runtime)) {\n        changed = true;\n      }\n    }\n    return changed;\n  }\n\n  /**\n   * @param {RuntimeSpec} runtime the runtime\n   * @returns {boolean} true, when something changed\n   */\n  setUsedForSideEffectsOnly(runtime) {\n    return this._sideEffectsOnlyInfo.setUsedConditionally(used => used === UsageState.Unused, UsageState.Used, runtime);\n  }\n\n  /**\n   * @param {RuntimeSpec} runtime the runtime\n   * @returns {boolean} true, when the module exports are used in any way\n   */\n  isUsed(runtime) {\n    if (this._redirectTo !== undefined) {\n      if (this._redirectTo.isUsed(runtime)) {\n        return true;\n      }\n    } else if (this._otherExportsInfo.getUsed(runtime) !== UsageState.Unused) {\n      return true;\n    }\n    for (const exportInfo of this._exports.values()) {\n      if (exportInfo.getUsed(runtime) !== UsageState.Unused) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {RuntimeSpec} runtime the runtime\n   * @returns {boolean} true, when the module is used in any way\n   */\n  isModuleUsed(runtime) {\n    if (this.isUsed(runtime)) return true;\n    if (this._sideEffectsOnlyInfo.getUsed(runtime) !== UsageState.Unused) return true;\n    return false;\n  }\n\n  /**\n   * @param {RuntimeSpec} runtime the runtime\n   * @returns {SortableSet<string> | boolean | null} set of used exports, or true (when namespace object is used), or false (when unused), or null (when unknown)\n   */\n  getUsedExports(runtime) {\n    // eslint-disable-next-line no-constant-binary-expression\n    if (!this._redirectTo !== undefined) {\n      switch (this._otherExportsInfo.getUsed(runtime)) {\n        case UsageState.NoInfo:\n          return null;\n        case UsageState.Unknown:\n        case UsageState.OnlyPropertiesUsed:\n        case UsageState.Used:\n          return true;\n      }\n    }\n    const array = [];\n    if (!this._exportsAreOrdered) this._sortExports();\n    for (const exportInfo of this._exports.values()) {\n      switch (exportInfo.getUsed(runtime)) {\n        case UsageState.NoInfo:\n          return null;\n        case UsageState.Unknown:\n          return true;\n        case UsageState.OnlyPropertiesUsed:\n        case UsageState.Used:\n          array.push(exportInfo.name);\n      }\n    }\n    if (this._redirectTo !== undefined) {\n      const inner = this._redirectTo.getUsedExports(runtime);\n      if (inner === null) return null;\n      if (inner === true) return true;\n      if (inner !== false) {\n        for (const item of inner) {\n          array.push(item);\n        }\n      }\n    }\n    if (array.length === 0) {\n      switch (this._sideEffectsOnlyInfo.getUsed(runtime)) {\n        case UsageState.NoInfo:\n          return null;\n        case UsageState.Unused:\n          return false;\n      }\n    }\n    return /** @type {SortableSet<string>} */new SortableSet(array);\n  }\n\n  /**\n   * @returns {null | true | string[]} list of exports when known\n   */\n  getProvidedExports() {\n    // eslint-disable-next-line no-constant-binary-expression\n    if (!this._redirectTo !== undefined) {\n      switch (this._otherExportsInfo.provided) {\n        case undefined:\n          return null;\n        case null:\n          return true;\n        case true:\n          return true;\n      }\n    }\n    const array = [];\n    if (!this._exportsAreOrdered) this._sortExports();\n    for (const exportInfo of this._exports.values()) {\n      switch (exportInfo.provided) {\n        case undefined:\n          return null;\n        case null:\n          return true;\n        case true:\n          array.push(exportInfo.name);\n      }\n    }\n    if (this._redirectTo !== undefined) {\n      const inner = this._redirectTo.getProvidedExports();\n      if (inner === null) return null;\n      if (inner === true) return true;\n      for (const item of inner) {\n        if (!array.includes(item)) {\n          array.push(item);\n        }\n      }\n    }\n    return array;\n  }\n\n  /**\n   * @param {RuntimeSpec} runtime the runtime\n   * @returns {ExportInfo[]} exports that are relevant (not unused and potential provided)\n   */\n  getRelevantExports(runtime) {\n    const list = [];\n    for (const exportInfo of this._exports.values()) {\n      const used = exportInfo.getUsed(runtime);\n      if (used === UsageState.Unused) continue;\n      if (exportInfo.provided === false) continue;\n      list.push(exportInfo);\n    }\n    if (this._redirectTo !== undefined) {\n      for (const exportInfo of this._redirectTo.getRelevantExports(runtime)) {\n        if (!this._exports.has(exportInfo.name)) list.push(exportInfo);\n      }\n    }\n    if (this._otherExportsInfo.provided !== false && this._otherExportsInfo.getUsed(runtime) !== UsageState.Unused) {\n      list.push(this._otherExportsInfo);\n    }\n    return list;\n  }\n\n  /**\n   * @param {string | string[]} name the name of the export\n   * @returns {boolean | undefined | null} if the export is provided\n   */\n  isExportProvided(name) {\n    if (Array.isArray(name)) {\n      const info = this.getReadOnlyExportInfo(name[0]);\n      if (info.exportsInfo && name.length > 1) {\n        return info.exportsInfo.isExportProvided(name.slice(1));\n      }\n      return info.provided ? name.length === 1 || undefined : info.provided;\n    }\n    const info = this.getReadOnlyExportInfo(name);\n    return info.provided;\n  }\n\n  /**\n   * @param {RuntimeSpec} runtime runtime\n   * @returns {string} key representing the usage\n   */\n  getUsageKey(runtime) {\n    const key = [];\n    if (this._redirectTo !== undefined) {\n      key.push(this._redirectTo.getUsageKey(runtime));\n    } else {\n      key.push(this._otherExportsInfo.getUsed(runtime));\n    }\n    key.push(this._sideEffectsOnlyInfo.getUsed(runtime));\n    for (const exportInfo of this.orderedOwnedExports) {\n      key.push(exportInfo.getUsed(runtime));\n    }\n    return key.join(\"|\");\n  }\n\n  /**\n   * @param {RuntimeSpec} runtimeA first runtime\n   * @param {RuntimeSpec} runtimeB second runtime\n   * @returns {boolean} true, when equally used\n   */\n  isEquallyUsed(runtimeA, runtimeB) {\n    if (this._redirectTo !== undefined) {\n      if (!this._redirectTo.isEquallyUsed(runtimeA, runtimeB)) return false;\n    } else if (this._otherExportsInfo.getUsed(runtimeA) !== this._otherExportsInfo.getUsed(runtimeB)) {\n      return false;\n    }\n    if (this._sideEffectsOnlyInfo.getUsed(runtimeA) !== this._sideEffectsOnlyInfo.getUsed(runtimeB)) {\n      return false;\n    }\n    for (const exportInfo of this.ownedExports) {\n      if (exportInfo.getUsed(runtimeA) !== exportInfo.getUsed(runtimeB)) return false;\n    }\n    return true;\n  }\n\n  /**\n   * @param {string | string[]} name export name\n   * @param {RuntimeSpec} runtime check usage for this runtime only\n   * @returns {UsageStateType} usage status\n   */\n  getUsed(name, runtime) {\n    if (Array.isArray(name)) {\n      if (name.length === 0) return this.otherExportsInfo.getUsed(runtime);\n      const info = this.getReadOnlyExportInfo(name[0]);\n      if (info.exportsInfo && name.length > 1) {\n        return info.exportsInfo.getUsed(name.slice(1), runtime);\n      }\n      return info.getUsed(runtime);\n    }\n    const info = this.getReadOnlyExportInfo(name);\n    return info.getUsed(runtime);\n  }\n\n  /**\n   * @param {string | string[]} name the export name\n   * @param {RuntimeSpec} runtime check usage for this runtime only\n   * @returns {UsedName} the used name\n   */\n  getUsedName(name, runtime) {\n    if (Array.isArray(name)) {\n      // TODO improve this\n      if (name.length === 0) {\n        if (!this.isUsed(runtime)) return false;\n        return name;\n      }\n      const info = this.getReadOnlyExportInfo(name[0]);\n      const x = info.getUsedName(name[0], runtime);\n      if (x === false) return false;\n      const arr = /** @type {string[]} */\n      x === name[0] && name.length === 1 ? name : [x];\n      if (name.length === 1) {\n        return arr;\n      }\n      if (info.exportsInfo && info.getUsed(runtime) === UsageState.OnlyPropertiesUsed) {\n        const nested = info.exportsInfo.getUsedName(name.slice(1), runtime);\n        if (!nested) return false;\n        return arr.concat(nested);\n      }\n      return arr.concat(name.slice(1));\n    }\n    const info = this.getReadOnlyExportInfo(name);\n    const usedName = info.getUsedName(name, runtime);\n    return usedName;\n  }\n\n  /**\n   * @param {Hash} hash the hash\n   * @param {RuntimeSpec} runtime the runtime\n   * @returns {void}\n   */\n  updateHash(hash, runtime) {\n    this._updateHash(hash, runtime, new Set());\n  }\n\n  /**\n   * @param {Hash} hash the hash\n   * @param {RuntimeSpec} runtime the runtime\n   * @param {Set<ExportsInfo>} alreadyVisitedExportsInfo for circular references\n   * @returns {void}\n   */\n  _updateHash(hash, runtime, alreadyVisitedExportsInfo) {\n    const set = new Set(alreadyVisitedExportsInfo);\n    set.add(this);\n    for (const exportInfo of this.orderedExports) {\n      if (exportInfo.hasInfo(this._otherExportsInfo, runtime)) {\n        exportInfo._updateHash(hash, runtime, set);\n      }\n    }\n    this._sideEffectsOnlyInfo._updateHash(hash, runtime, set);\n    this._otherExportsInfo._updateHash(hash, runtime, set);\n    if (this._redirectTo !== undefined) {\n      this._redirectTo._updateHash(hash, runtime, set);\n    }\n  }\n\n  /**\n   * @returns {RestoreProvidedData} restore provided data\n   */\n  getRestoreProvidedData() {\n    const otherProvided = this._otherExportsInfo.provided;\n    const otherCanMangleProvide = this._otherExportsInfo.canMangleProvide;\n    const otherTerminalBinding = this._otherExportsInfo.terminalBinding;\n    const exports = [];\n    for (const exportInfo of this.orderedExports) {\n      if (exportInfo.provided !== otherProvided || exportInfo.canMangleProvide !== otherCanMangleProvide || exportInfo.terminalBinding !== otherTerminalBinding || exportInfo.exportsInfoOwned) {\n        exports.push({\n          name: exportInfo.name,\n          provided: exportInfo.provided,\n          canMangleProvide: exportInfo.canMangleProvide,\n          terminalBinding: exportInfo.terminalBinding,\n          exportsInfo: exportInfo.exportsInfoOwned ? /** @type {NonNullable<ExportInfo[\"exportsInfo\"]>} */\n          exportInfo.exportsInfo.getRestoreProvidedData() : undefined\n        });\n      }\n    }\n    return new RestoreProvidedData(exports, otherProvided, otherCanMangleProvide, otherTerminalBinding);\n  }\n\n  /**\n   * @param {{ otherProvided: any, otherCanMangleProvide: any, otherTerminalBinding: any, exports: any }} data data\n   */\n  restoreProvided({\n    otherProvided,\n    otherCanMangleProvide,\n    otherTerminalBinding,\n    exports\n  }) {\n    let wasEmpty = true;\n    for (const exportInfo of this._exports.values()) {\n      wasEmpty = false;\n      exportInfo.provided = otherProvided;\n      exportInfo.canMangleProvide = otherCanMangleProvide;\n      exportInfo.terminalBinding = otherTerminalBinding;\n    }\n    this._otherExportsInfo.provided = otherProvided;\n    this._otherExportsInfo.canMangleProvide = otherCanMangleProvide;\n    this._otherExportsInfo.terminalBinding = otherTerminalBinding;\n    for (const exp of exports) {\n      const exportInfo = this.getExportInfo(exp.name);\n      exportInfo.provided = exp.provided;\n      exportInfo.canMangleProvide = exp.canMangleProvide;\n      exportInfo.terminalBinding = exp.terminalBinding;\n      if (exp.exportsInfo) {\n        const exportsInfo = exportInfo.createNestedExportsInfo();\n        exportsInfo.restoreProvided(exp.exportsInfo);\n      }\n    }\n    if (wasEmpty) this._exportsAreOrdered = true;\n  }\n}\n\n/** @typedef {{ module: Module, export: string[] }} TargetItemWithoutConnection */\n/** @typedef {{ module: Module, connection: ModuleGraphConnection, export: string[] | undefined }} TargetItem */\n/** @typedef {Map<any, { connection: ModuleGraphConnection | null, export: string[], priority: number }>} Target */\n\nclass ExportInfo {\n  /**\n   * @param {string} name the original name of the export\n   * @param {ExportInfo=} initFrom init values from this ExportInfo\n   */\n  constructor(name, initFrom) {\n    /** @type {string} */\n    this.name = name;\n    /**\n     * @private\n     * @type {string | null}\n     */\n    this._usedName = initFrom ? initFrom._usedName : null;\n    /**\n     * @private\n     * @type {UsageStateType | undefined}\n     */\n    this._globalUsed = initFrom ? initFrom._globalUsed : undefined;\n    /**\n     * @private\n     * @type {Map<string, RuntimeUsageStateType>}\n     */\n    this._usedInRuntime = initFrom && initFrom._usedInRuntime ? new Map(initFrom._usedInRuntime) : undefined;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._hasUseInRuntimeInfo = initFrom ? initFrom._hasUseInRuntimeInfo : false;\n    /**\n     * true: it is provided\n     * false: it is not provided\n     * null: only the runtime knows if it is provided\n     * undefined: it was not determined if it is provided\n     * @type {boolean | null | undefined}\n     */\n    this.provided = initFrom ? initFrom.provided : undefined;\n    /**\n     * is the export a terminal binding that should be checked for export star conflicts\n     * @type {boolean}\n     */\n    this.terminalBinding = initFrom ? initFrom.terminalBinding : false;\n    /**\n     * true: it can be mangled\n     * false: is can not be mangled\n     * undefined: it was not determined if it can be mangled\n     * @type {boolean | undefined}\n     */\n    this.canMangleProvide = initFrom ? initFrom.canMangleProvide : undefined;\n    /**\n     * true: it can be mangled\n     * false: is can not be mangled\n     * undefined: it was not determined if it can be mangled\n     * @type {boolean | undefined}\n     */\n    this.canMangleUse = initFrom ? initFrom.canMangleUse : undefined;\n    /** @type {boolean} */\n    this.exportsInfoOwned = false;\n    /** @type {ExportsInfo | undefined} */\n    this.exportsInfo = undefined;\n    /** @type {Target | undefined} */\n    this._target = undefined;\n    if (initFrom && initFrom._target) {\n      this._target = new Map();\n      for (const [key, value] of initFrom._target) {\n        this._target.set(key, {\n          connection: value.connection,\n          export: value.export || [name],\n          priority: value.priority\n        });\n      }\n    }\n    /** @type {Target | undefined} */\n    this._maxTarget = undefined;\n  }\n\n  // TODO webpack 5 remove\n  /**\n   * @private\n   * @param {*} v v\n   */\n  set used(v) {\n    throw new Error(\"REMOVED\");\n  }\n\n  // TODO webpack 5 remove\n  /** @private */\n  get used() {\n    throw new Error(\"REMOVED\");\n  }\n\n  // TODO webpack 5 remove\n  /**\n   * @private\n   * @param {*} v v\n   */\n  set usedName(v) {\n    throw new Error(\"REMOVED\");\n  }\n\n  // TODO webpack 5 remove\n  /** @private */\n  get usedName() {\n    throw new Error(\"REMOVED\");\n  }\n  get canMangle() {\n    switch (this.canMangleProvide) {\n      case undefined:\n        return this.canMangleUse === false ? false : undefined;\n      case false:\n        return false;\n      case true:\n        switch (this.canMangleUse) {\n          case undefined:\n            return undefined;\n          case false:\n            return false;\n          case true:\n            return true;\n        }\n    }\n    throw new Error(`Unexpected flags for canMangle ${this.canMangleProvide} ${this.canMangleUse}`);\n  }\n\n  /**\n   * @param {RuntimeSpec} runtime only apply to this runtime\n   * @returns {boolean} true, when something changed\n   */\n  setUsedInUnknownWay(runtime) {\n    let changed = false;\n    if (this.setUsedConditionally(used => used < UsageState.Unknown, UsageState.Unknown, runtime)) {\n      changed = true;\n    }\n    if (this.canMangleUse !== false) {\n      this.canMangleUse = false;\n      changed = true;\n    }\n    return changed;\n  }\n\n  /**\n   * @param {RuntimeSpec} runtime only apply to this runtime\n   * @returns {boolean} true, when something changed\n   */\n  setUsedWithoutInfo(runtime) {\n    let changed = false;\n    if (this.setUsed(UsageState.NoInfo, runtime)) {\n      changed = true;\n    }\n    if (this.canMangleUse !== false) {\n      this.canMangleUse = false;\n      changed = true;\n    }\n    return changed;\n  }\n  setHasUseInfo() {\n    if (!this._hasUseInRuntimeInfo) {\n      this._hasUseInRuntimeInfo = true;\n    }\n    if (this.canMangleUse === undefined) {\n      this.canMangleUse = true;\n    }\n    if (this.exportsInfoOwned) {\n      /** @type {ExportsInfo} */\n      this.exportsInfo.setHasUseInfo();\n    }\n  }\n\n  /**\n   * @param {function(UsageStateType): boolean} condition compare with old value\n   * @param {UsageStateType} newValue set when condition is true\n   * @param {RuntimeSpec} runtime only apply to this runtime\n   * @returns {boolean} true when something has changed\n   */\n  setUsedConditionally(condition, newValue, runtime) {\n    if (runtime === undefined) {\n      if (this._globalUsed === undefined) {\n        this._globalUsed = newValue;\n        return true;\n      }\n      if (this._globalUsed !== newValue && condition(this._globalUsed)) {\n        this._globalUsed = newValue;\n        return true;\n      }\n    } else if (this._usedInRuntime === undefined) {\n      if (newValue !== UsageState.Unused && condition(UsageState.Unused)) {\n        this._usedInRuntime = new Map();\n        forEachRuntime(runtime, runtime => this._usedInRuntime.set(/** @type {string} */runtime, newValue));\n        return true;\n      }\n    } else {\n      let changed = false;\n      forEachRuntime(runtime, _runtime => {\n        const runtime = /** @type {string} */_runtime;\n        let oldValue = /** @type {UsageStateType} */\n        this._usedInRuntime.get(runtime);\n        if (oldValue === undefined) oldValue = UsageState.Unused;\n        if (newValue !== oldValue && condition(oldValue)) {\n          if (newValue === UsageState.Unused) {\n            this._usedInRuntime.delete(runtime);\n          } else {\n            this._usedInRuntime.set(runtime, newValue);\n          }\n          changed = true;\n        }\n      });\n      if (changed) {\n        if (this._usedInRuntime.size === 0) this._usedInRuntime = undefined;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {UsageStateType} newValue new value of the used state\n   * @param {RuntimeSpec} runtime only apply to this runtime\n   * @returns {boolean} true when something has changed\n   */\n  setUsed(newValue, runtime) {\n    if (runtime === undefined) {\n      if (this._globalUsed !== newValue) {\n        this._globalUsed = newValue;\n        return true;\n      }\n    } else if (this._usedInRuntime === undefined) {\n      if (newValue !== UsageState.Unused) {\n        this._usedInRuntime = new Map();\n        forEachRuntime(runtime, runtime => this._usedInRuntime.set(/** @type {string} */runtime, newValue));\n        return true;\n      }\n    } else {\n      let changed = false;\n      forEachRuntime(runtime, _runtime => {\n        const runtime = /** @type {string} */_runtime;\n        let oldValue = /** @type {UsageStateType} */\n        this._usedInRuntime.get(runtime);\n        if (oldValue === undefined) oldValue = UsageState.Unused;\n        if (newValue !== oldValue) {\n          if (newValue === UsageState.Unused) {\n            this._usedInRuntime.delete(runtime);\n          } else {\n            this._usedInRuntime.set(runtime, newValue);\n          }\n          changed = true;\n        }\n      });\n      if (changed) {\n        if (this._usedInRuntime.size === 0) this._usedInRuntime = undefined;\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {any} key the key\n   * @returns {boolean} true, if something has changed\n   */\n  unsetTarget(key) {\n    if (!this._target) return false;\n    if (this._target.delete(key)) {\n      this._maxTarget = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @param {any} key the key\n   * @param {ModuleGraphConnection} connection the target module if a single one\n   * @param {(string[] | null)=} exportName the exported name\n   * @param {number=} priority priority\n   * @returns {boolean} true, if something has changed\n   */\n  setTarget(key, connection, exportName, priority = 0) {\n    if (exportName) exportName = [...exportName];\n    if (!this._target) {\n      this._target = new Map();\n      this._target.set(key, {\n        connection,\n        export: (/** @type {string[]} */exportName),\n        priority\n      });\n      return true;\n    }\n    const oldTarget = this._target.get(key);\n    if (!oldTarget) {\n      if (oldTarget === null && !connection) return false;\n      this._target.set(key, {\n        connection,\n        export: (/** @type {string[]} */exportName),\n        priority\n      });\n      this._maxTarget = undefined;\n      return true;\n    }\n    if (oldTarget.connection !== connection || oldTarget.priority !== priority || (exportName ? !oldTarget.export || !equals(oldTarget.export, exportName) : oldTarget.export)) {\n      oldTarget.connection = connection;\n      oldTarget.export = /** @type {string[]} */exportName;\n      oldTarget.priority = priority;\n      this._maxTarget = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @param {RuntimeSpec} runtime for this runtime\n   * @returns {UsageStateType} usage state\n   */\n  getUsed(runtime) {\n    if (!this._hasUseInRuntimeInfo) return UsageState.NoInfo;\n    if (this._globalUsed !== undefined) return this._globalUsed;\n    if (this._usedInRuntime === undefined) {\n      return UsageState.Unused;\n    } else if (typeof runtime === \"string\") {\n      const value = this._usedInRuntime.get(runtime);\n      return value === undefined ? UsageState.Unused : value;\n    } else if (runtime === undefined) {\n      /** @type {UsageStateType} */\n      let max = UsageState.Unused;\n      for (const value of this._usedInRuntime.values()) {\n        if (value === UsageState.Used) {\n          return UsageState.Used;\n        }\n        if (max < value) max = value;\n      }\n      return max;\n    }\n\n    /** @type {UsageStateType} */\n    let max = UsageState.Unused;\n    for (const item of runtime) {\n      const value = this._usedInRuntime.get(item);\n      if (value !== undefined) {\n        if (value === UsageState.Used) {\n          return UsageState.Used;\n        }\n        if (max < value) max = value;\n      }\n    }\n    return max;\n  }\n\n  /**\n   * get used name\n   * @param {string | undefined} fallbackName fallback name for used exports with no name\n   * @param {RuntimeSpec} runtime check usage for this runtime only\n   * @returns {string | false} used name\n   */\n  getUsedName(fallbackName, runtime) {\n    if (this._hasUseInRuntimeInfo) {\n      if (this._globalUsed !== undefined) {\n        if (this._globalUsed === UsageState.Unused) return false;\n      } else {\n        if (this._usedInRuntime === undefined) return false;\n        if (typeof runtime === \"string\") {\n          if (!this._usedInRuntime.has(runtime)) {\n            return false;\n          }\n        } else if (runtime !== undefined && Array.from(runtime).every(runtime => !this._usedInRuntime.has(runtime))) {\n          return false;\n        }\n      }\n    }\n    if (this._usedName !== null) return this._usedName;\n    return /** @type {string | false} */this.name || fallbackName;\n  }\n\n  /**\n   * @returns {boolean} true, when a mangled name of this export is set\n   */\n  hasUsedName() {\n    return this._usedName !== null;\n  }\n\n  /**\n   * Sets the mangled name of this export\n   * @param {string} name the new name\n   * @returns {void}\n   */\n  setUsedName(name) {\n    this._usedName = name;\n  }\n\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @param {function(TargetItem): boolean} resolveTargetFilter filter function to further resolve target\n   * @returns {ExportInfo | ExportsInfo | undefined} the terminal binding export(s) info if known\n   */\n  getTerminalBinding(moduleGraph, resolveTargetFilter = RETURNS_TRUE) {\n    if (this.terminalBinding) return this;\n    const target = this.getTarget(moduleGraph, resolveTargetFilter);\n    if (!target) return;\n    const exportsInfo = moduleGraph.getExportsInfo(target.module);\n    if (!target.export) return exportsInfo;\n    return exportsInfo.getReadOnlyExportInfoRecursive(target.export);\n  }\n  isReexport() {\n    return !this.terminalBinding && this._target && this._target.size > 0;\n  }\n  _getMaxTarget() {\n    if (this._maxTarget !== undefined) return this._maxTarget;\n    if (/** @type {Target} */this._target.size <= 1) return this._maxTarget = this._target;\n    let maxPriority = -Infinity;\n    let minPriority = Infinity;\n    for (const {\n      priority\n    } of /** @type {Target} */this._target.values()) {\n      if (maxPriority < priority) maxPriority = priority;\n      if (minPriority > priority) minPriority = priority;\n    }\n    // This should be very common\n    if (maxPriority === minPriority) return this._maxTarget = this._target;\n\n    // This is an edge case\n    const map = new Map();\n    for (const [key, value] of (/** @type {Target} */this._target)) {\n      if (maxPriority === value.priority) {\n        map.set(key, value);\n      }\n    }\n    this._maxTarget = map;\n    return map;\n  }\n\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @param {function(Module): boolean} validTargetModuleFilter a valid target module\n   * @returns {TargetItemWithoutConnection | null | undefined | false} the target, undefined when there is no target, false when no target is valid\n   */\n  findTarget(moduleGraph, validTargetModuleFilter) {\n    return this._findTarget(moduleGraph, validTargetModuleFilter, new Set());\n  }\n\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @param {function(Module): boolean} validTargetModuleFilter a valid target module\n   * @param {Set<ExportInfo>} alreadyVisited set of already visited export info to avoid circular references\n   * @returns {TargetItemWithoutConnection | null | undefined | false} the target, undefined when there is no target, false when no target is valid\n   */\n  _findTarget(moduleGraph, validTargetModuleFilter, alreadyVisited) {\n    if (!this._target || this._target.size === 0) return;\n    const rawTarget = /** @type {Target} */\n    this._getMaxTarget().values().next().value;\n    if (!rawTarget) return;\n    /** @type {TargetItemWithoutConnection} */\n    let target = {\n      module: rawTarget.connection.module,\n      export: rawTarget.export\n    };\n    for (;;) {\n      if (validTargetModuleFilter(target.module)) return target;\n      const exportsInfo = moduleGraph.getExportsInfo(target.module);\n      const exportInfo = exportsInfo.getExportInfo(target.export[0]);\n      if (alreadyVisited.has(exportInfo)) return null;\n      const newTarget = exportInfo._findTarget(moduleGraph, validTargetModuleFilter, alreadyVisited);\n      if (!newTarget) return false;\n      if (target.export.length === 1) {\n        target = newTarget;\n      } else {\n        target = {\n          module: newTarget.module,\n          export: newTarget.export ? newTarget.export.concat(target.export.slice(1)) : target.export.slice(1)\n        };\n      }\n    }\n  }\n\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @param {function(TargetItem): boolean} resolveTargetFilter filter function to further resolve target\n   * @returns {TargetItem | undefined} the target\n   */\n  getTarget(moduleGraph, resolveTargetFilter = RETURNS_TRUE) {\n    const result = this._getTarget(moduleGraph, resolveTargetFilter, undefined);\n    if (result === CIRCULAR) return;\n    return result;\n  }\n\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @param {function(TargetItem): boolean} resolveTargetFilter filter function to further resolve target\n   * @param {Set<ExportInfo> | undefined} alreadyVisited set of already visited export info to avoid circular references\n   * @returns {TargetItem | CIRCULAR | undefined} the target\n   */\n  _getTarget(moduleGraph, resolveTargetFilter, alreadyVisited) {\n    /**\n     * @param {TargetItem | null} inputTarget unresolved target\n     * @param {Set<ExportInfo>} alreadyVisited set of already visited export info to avoid circular references\n     * @returns {TargetItem | CIRCULAR | null} resolved target\n     */\n    const resolveTarget = (inputTarget, alreadyVisited) => {\n      if (!inputTarget) return null;\n      if (!inputTarget.export) {\n        return {\n          module: inputTarget.connection.module,\n          connection: inputTarget.connection,\n          export: undefined\n        };\n      }\n      /** @type {TargetItem} */\n      let target = {\n        module: inputTarget.connection.module,\n        connection: inputTarget.connection,\n        export: inputTarget.export\n      };\n      if (!resolveTargetFilter(target)) return target;\n      let alreadyVisitedOwned = false;\n      for (;;) {\n        const exportsInfo = moduleGraph.getExportsInfo(target.module);\n        const exportInfo = exportsInfo.getExportInfo(/** @type {NonNullable<TargetItem[\"export\"]>} */\n        target.export[0]);\n        if (!exportInfo) return target;\n        if (alreadyVisited.has(exportInfo)) return CIRCULAR;\n        const newTarget = exportInfo._getTarget(moduleGraph, resolveTargetFilter, alreadyVisited);\n        if (newTarget === CIRCULAR) return CIRCULAR;\n        if (!newTarget) return target;\n        if (/** @type {NonNullable<TargetItem[\"export\"]>} */\n        target.export.length === 1) {\n          target = newTarget;\n          if (!target.export) return target;\n        } else {\n          target = {\n            module: newTarget.module,\n            connection: newTarget.connection,\n            export: newTarget.export ? newTarget.export.concat(/** @type {NonNullable<TargetItem[\"export\"]>} */\n            target.export.slice(1)) : /** @type {NonNullable<TargetItem[\"export\"]>} */\n            target.export.slice(1)\n          };\n        }\n        if (!resolveTargetFilter(target)) return target;\n        if (!alreadyVisitedOwned) {\n          alreadyVisited = new Set(alreadyVisited);\n          alreadyVisitedOwned = true;\n        }\n        alreadyVisited.add(exportInfo);\n      }\n    };\n    if (!this._target || this._target.size === 0) return;\n    if (alreadyVisited && alreadyVisited.has(this)) return CIRCULAR;\n    const newAlreadyVisited = new Set(alreadyVisited);\n    newAlreadyVisited.add(this);\n    const values = /** @type {Target} */this._getMaxTarget().values();\n    const target = resolveTarget(values.next().value, newAlreadyVisited);\n    if (target === CIRCULAR) return CIRCULAR;\n    if (target === null) return;\n    let result = values.next();\n    while (!result.done) {\n      const t = resolveTarget(result.value, newAlreadyVisited);\n      if (t === CIRCULAR) return CIRCULAR;\n      if (t === null) return;\n      if (t.module !== target.module) return;\n      if (!t.export !== !target.export) return;\n      if (target.export && !equals(/** @type {ArrayLike<string>} */t.export, target.export)) return;\n      result = values.next();\n    }\n    return target;\n  }\n\n  /**\n   * Move the target forward as long resolveTargetFilter is fulfilled\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @param {function(TargetItem): boolean} resolveTargetFilter filter function to further resolve target\n   * @param {function(TargetItem): ModuleGraphConnection=} updateOriginalConnection updates the original connection instead of using the target connection\n   * @returns {TargetItem | undefined} the resolved target when moved\n   */\n  moveTarget(moduleGraph, resolveTargetFilter, updateOriginalConnection) {\n    const target = this._getTarget(moduleGraph, resolveTargetFilter, undefined);\n    if (target === CIRCULAR) return;\n    if (!target) return;\n    const originalTarget = /** @type {Target} */\n    this._getMaxTarget().values().next().value;\n    if (originalTarget.connection === target.connection && originalTarget.export === target.export) {\n      return;\n    }\n    /** @type {Target} */\n    this._target.clear();\n    /** @type {Target} */\n    this._target.set(undefined, {\n      connection: updateOriginalConnection ? updateOriginalConnection(target) : target.connection,\n      export: (/** @type {NonNullable<TargetItem[\"export\"]>} */target.export),\n      priority: 0\n    });\n    return target;\n  }\n\n  /**\n   * @returns {ExportsInfo} an exports info\n   */\n  createNestedExportsInfo() {\n    if (this.exportsInfoOwned) return /** @type {ExportsInfo} */this.exportsInfo;\n    this.exportsInfoOwned = true;\n    const oldExportsInfo = this.exportsInfo;\n    this.exportsInfo = new ExportsInfo();\n    this.exportsInfo.setHasProvideInfo();\n    if (oldExportsInfo) {\n      this.exportsInfo.setRedirectNamedTo(oldExportsInfo);\n    }\n    return this.exportsInfo;\n  }\n  getNestedExportsInfo() {\n    return this.exportsInfo;\n  }\n\n  /**\n   * @param {ExportInfo} baseInfo base info\n   * @param {RuntimeSpec} runtime runtime\n   * @returns {boolean} true when has info, otherwise false\n   */\n  hasInfo(baseInfo, runtime) {\n    return this._usedName && this._usedName !== this.name || this.provided || this.terminalBinding || this.getUsed(runtime) !== baseInfo.getUsed(runtime);\n  }\n\n  /**\n   * @param {Hash} hash the hash\n   * @param {RuntimeSpec} runtime the runtime\n   * @returns {void}\n   */\n  updateHash(hash, runtime) {\n    this._updateHash(hash, runtime, new Set());\n  }\n\n  /**\n   * @param {Hash} hash the hash\n   * @param {RuntimeSpec} runtime the runtime\n   * @param {Set<ExportsInfo>} alreadyVisitedExportsInfo for circular references\n   */\n  _updateHash(hash, runtime, alreadyVisitedExportsInfo) {\n    hash.update(`${this._usedName || this.name}${this.getUsed(runtime)}${this.provided}${this.terminalBinding}`);\n    if (this.exportsInfo && !alreadyVisitedExportsInfo.has(this.exportsInfo)) {\n      this.exportsInfo._updateHash(hash, runtime, alreadyVisitedExportsInfo);\n    }\n  }\n  getUsedInfo() {\n    if (this._globalUsed !== undefined) {\n      switch (this._globalUsed) {\n        case UsageState.Unused:\n          return \"unused\";\n        case UsageState.NoInfo:\n          return \"no usage info\";\n        case UsageState.Unknown:\n          return \"maybe used (runtime-defined)\";\n        case UsageState.Used:\n          return \"used\";\n        case UsageState.OnlyPropertiesUsed:\n          return \"only properties used\";\n      }\n    } else if (this._usedInRuntime !== undefined) {\n      /** @type {Map<RuntimeUsageStateType, string[]>} */\n      const map = new Map();\n      for (const [runtime, used] of this._usedInRuntime) {\n        const list = map.get(used);\n        if (list !== undefined) list.push(runtime);else map.set(used, [runtime]);\n      }\n      // eslint-disable-next-line array-callback-return\n      const specificInfo = Array.from(map, ([used, runtimes]) => {\n        switch (used) {\n          case UsageState.NoInfo:\n            return `no usage info in ${runtimes.join(\", \")}`;\n          case UsageState.Unknown:\n            return `maybe used in ${runtimes.join(\", \")} (runtime-defined)`;\n          case UsageState.Used:\n            return `used in ${runtimes.join(\", \")}`;\n          case UsageState.OnlyPropertiesUsed:\n            return `only properties used in ${runtimes.join(\", \")}`;\n        }\n      });\n      if (specificInfo.length > 0) {\n        return specificInfo.join(\"; \");\n      }\n    }\n    return this._hasUseInRuntimeInfo ? \"unused\" : \"no usage info\";\n  }\n  getProvidedInfo() {\n    switch (this.provided) {\n      case undefined:\n        return \"no provided info\";\n      case null:\n        return \"maybe provided (runtime-defined)\";\n      case true:\n        return \"provided\";\n      case false:\n        return \"not provided\";\n    }\n  }\n  getRenameInfo() {\n    if (this._usedName !== null && this._usedName !== this.name) {\n      return `renamed to ${JSON.stringify(this._usedName).slice(1, -1)}`;\n    }\n    switch (this.canMangleProvide) {\n      case undefined:\n        switch (this.canMangleUse) {\n          case undefined:\n            return \"missing provision and use info prevents renaming\";\n          case false:\n            return \"usage prevents renaming (no provision info)\";\n          case true:\n            return \"missing provision info prevents renaming\";\n        }\n        break;\n      case true:\n        switch (this.canMangleUse) {\n          case undefined:\n            return \"missing usage info prevents renaming\";\n          case false:\n            return \"usage prevents renaming\";\n          case true:\n            return \"could be renamed\";\n        }\n        break;\n      case false:\n        switch (this.canMangleUse) {\n          case undefined:\n            return \"provision prevents renaming (no use info)\";\n          case false:\n            return \"usage and provision prevents renaming\";\n          case true:\n            return \"provision prevents renaming\";\n        }\n        break;\n    }\n    throw new Error(`Unexpected flags for getRenameInfo ${this.canMangleProvide} ${this.canMangleUse}`);\n  }\n}\nmodule.exports = ExportsInfo;\nmodule.exports.ExportInfo = ExportInfo;\nmodule.exports.UsageState = UsageState;","map":{"version":3,"names":["equals","require","SortableSet","makeSerializable","forEachRuntime","UsageState","Object","freeze","Unused","OnlyPropertiesUsed","NoInfo","Unknown","Used","RETURNS_TRUE","CIRCULAR","Symbol","RestoreProvidedData","constructor","exports","otherProvided","otherCanMangleProvide","otherTerminalBinding","serialize","write","deserialize","read","ExportsInfo","_exports","Map","_otherExportsInfo","ExportInfo","_sideEffectsOnlyInfo","_exportsAreOrdered","_redirectTo","undefined","ownedExports","values","orderedOwnedExports","_sortExports","map","key","value","set","orderedExports","Array","from","item","name","_sortExportsMap","otherExportsInfo","size","namesInOrder","entry","push","sort","i","length","correctEntry","get","delete","setRedirectNamedTo","exportsInfo","setHasProvideInfo","exportInfo","provided","canMangleProvide","setHasUseInfo","getOwnExportInfo","info","newInfo","getExportInfo","getReadOnlyExportInfo","getReadOnlyExportInfoRecursive","slice","getNestedExportsInfo","isArray","setUnknownExportsProvided","canMangle","excludeExports","targetKey","targetModule","priority","changed","has","setTarget","setUsedInUnknownWay","runtime","setUsedConditionally","used","canMangleUse","setUsedWithoutInfo","setUsed","setAllKnownExportsUsed","setUsedForSideEffectsOnly","isUsed","getUsed","isModuleUsed","getUsedExports","array","inner","getProvidedExports","includes","getRelevantExports","list","isExportProvided","getUsageKey","join","isEquallyUsed","runtimeA","runtimeB","getUsedName","x","arr","nested","concat","usedName","updateHash","hash","_updateHash","Set","alreadyVisitedExportsInfo","add","hasInfo","getRestoreProvidedData","terminalBinding","exportsInfoOwned","restoreProvided","wasEmpty","exp","createNestedExportsInfo","initFrom","_usedName","_globalUsed","_usedInRuntime","_hasUseInRuntimeInfo","_target","connection","export","_maxTarget","v","Error","condition","newValue","_runtime","oldValue","unsetTarget","exportName","oldTarget","max","fallbackName","every","hasUsedName","setUsedName","getTerminalBinding","moduleGraph","resolveTargetFilter","target","getTarget","getExportsInfo","module","isReexport","_getMaxTarget","maxPriority","Infinity","minPriority","findTarget","validTargetModuleFilter","_findTarget","alreadyVisited","rawTarget","next","newTarget","result","_getTarget","resolveTarget","inputTarget","alreadyVisitedOwned","newAlreadyVisited","done","t","moveTarget","updateOriginalConnection","originalTarget","clear","oldExportsInfo","baseInfo","update","getUsedInfo","specificInfo","runtimes","getProvidedInfo","getRenameInfo","JSON","stringify"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/node_modules/webpack/lib/ExportsInfo.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { equals } = require(\"./util/ArrayHelpers\");\nconst SortableSet = require(\"./util/SortableSet\");\nconst makeSerializable = require(\"./util/makeSerializable\");\nconst { forEachRuntime } = require(\"./util/runtime\");\n\n/** @typedef {import(\"./Dependency\").RuntimeSpec} RuntimeSpec */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"./ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"./serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"./serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"./util/Hash\")} Hash */\n\n/** @typedef {typeof UsageState.OnlyPropertiesUsed | typeof UsageState.NoInfo | typeof UsageState.Unknown | typeof UsageState.Used} RuntimeUsageStateType */\n/** @typedef {typeof UsageState.Unused | RuntimeUsageStateType} UsageStateType */\n\nconst UsageState = Object.freeze({\n\tUnused: /** @type {0} */ (0),\n\tOnlyPropertiesUsed: /** @type {1} */ (1),\n\tNoInfo: /** @type {2} */ (2),\n\tUnknown: /** @type {3} */ (3),\n\tUsed: /** @type {4} */ (4)\n});\n\nconst RETURNS_TRUE = () => true;\n\nconst CIRCULAR = Symbol(\"circular target\");\n\nclass RestoreProvidedData {\n\tconstructor(\n\t\texports,\n\t\totherProvided,\n\t\totherCanMangleProvide,\n\t\totherTerminalBinding\n\t) {\n\t\tthis.exports = exports;\n\t\tthis.otherProvided = otherProvided;\n\t\tthis.otherCanMangleProvide = otherCanMangleProvide;\n\t\tthis.otherTerminalBinding = otherTerminalBinding;\n\t}\n\n\t/**\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize({ write }) {\n\t\twrite(this.exports);\n\t\twrite(this.otherProvided);\n\t\twrite(this.otherCanMangleProvide);\n\t\twrite(this.otherTerminalBinding);\n\t}\n\n\t/**\n\t * @param {ObjectDeserializerContext} context context\n\t * @returns {RestoreProvidedData} RestoreProvidedData\n\t */\n\tstatic deserialize({ read }) {\n\t\treturn new RestoreProvidedData(read(), read(), read(), read());\n\t}\n}\n\nmakeSerializable(\n\tRestoreProvidedData,\n\t\"webpack/lib/ModuleGraph\",\n\t\"RestoreProvidedData\"\n);\n\n/** @typedef {Map<string, ExportInfo>} Exports */\n/** @typedef {string | string[] | false} UsedName */\n\nclass ExportsInfo {\n\tconstructor() {\n\t\t/** @type {Exports} */\n\t\tthis._exports = new Map();\n\t\tthis._otherExportsInfo = new ExportInfo(null);\n\t\tthis._sideEffectsOnlyInfo = new ExportInfo(\"*side effects only*\");\n\t\tthis._exportsAreOrdered = false;\n\t\t/** @type {ExportsInfo=} */\n\t\tthis._redirectTo = undefined;\n\t}\n\n\t/**\n\t * @returns {Iterable<ExportInfo>} all owned exports in any order\n\t */\n\tget ownedExports() {\n\t\treturn this._exports.values();\n\t}\n\n\t/**\n\t * @returns {Iterable<ExportInfo>} all owned exports in order\n\t */\n\tget orderedOwnedExports() {\n\t\tif (!this._exportsAreOrdered) {\n\t\t\tthis._sortExports();\n\t\t}\n\t\treturn this._exports.values();\n\t}\n\n\t/**\n\t * @returns {Iterable<ExportInfo>} all exports in any order\n\t */\n\tget exports() {\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tconst map = new Map(this._redirectTo._exports);\n\t\t\tfor (const [key, value] of this._exports) {\n\t\t\t\tmap.set(key, value);\n\t\t\t}\n\t\t\treturn map.values();\n\t\t}\n\t\treturn this._exports.values();\n\t}\n\n\t/**\n\t * @returns {Iterable<ExportInfo>} all exports in order\n\t */\n\tget orderedExports() {\n\t\tif (!this._exportsAreOrdered) {\n\t\t\tthis._sortExports();\n\t\t}\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tconst map = new Map(\n\t\t\t\tArray.from(this._redirectTo.orderedExports, item => [item.name, item])\n\t\t\t);\n\t\t\tfor (const [key, value] of this._exports) {\n\t\t\t\tmap.set(key, value);\n\t\t\t}\n\t\t\t// sorting should be pretty fast as map contains\n\t\t\t// a lot of presorted items\n\t\t\tthis._sortExportsMap(map);\n\t\t\treturn map.values();\n\t\t}\n\t\treturn this._exports.values();\n\t}\n\n\t/**\n\t * @returns {ExportInfo} the export info of unlisted exports\n\t */\n\tget otherExportsInfo() {\n\t\tif (this._redirectTo !== undefined)\n\t\t\treturn this._redirectTo.otherExportsInfo;\n\t\treturn this._otherExportsInfo;\n\t}\n\n\t/**\n\t * @param {Exports} exports exports\n\t * @private\n\t */\n\t_sortExportsMap(exports) {\n\t\tif (exports.size > 1) {\n\t\t\tconst namesInOrder = [];\n\t\t\tfor (const entry of exports.values()) {\n\t\t\t\tnamesInOrder.push(entry.name);\n\t\t\t}\n\t\t\tnamesInOrder.sort();\n\t\t\tlet i = 0;\n\t\t\tfor (const entry of exports.values()) {\n\t\t\t\tconst name = namesInOrder[i];\n\t\t\t\tif (entry.name !== name) break;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tfor (; i < namesInOrder.length; i++) {\n\t\t\t\tconst name = namesInOrder[i];\n\t\t\t\tconst correctEntry = /** @type {ExportInfo} */ (exports.get(name));\n\t\t\t\texports.delete(name);\n\t\t\t\texports.set(name, correctEntry);\n\t\t\t}\n\t\t}\n\t}\n\n\t_sortExports() {\n\t\tthis._sortExportsMap(this._exports);\n\t\tthis._exportsAreOrdered = true;\n\t}\n\n\t/**\n\t * @param {ExportsInfo | undefined} exportsInfo exports info\n\t * @returns {boolean} result\n\t */\n\tsetRedirectNamedTo(exportsInfo) {\n\t\tif (this._redirectTo === exportsInfo) return false;\n\t\tthis._redirectTo = exportsInfo;\n\t\treturn true;\n\t}\n\n\tsetHasProvideInfo() {\n\t\tfor (const exportInfo of this._exports.values()) {\n\t\t\tif (exportInfo.provided === undefined) {\n\t\t\t\texportInfo.provided = false;\n\t\t\t}\n\t\t\tif (exportInfo.canMangleProvide === undefined) {\n\t\t\t\texportInfo.canMangleProvide = true;\n\t\t\t}\n\t\t}\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tthis._redirectTo.setHasProvideInfo();\n\t\t} else {\n\t\t\tif (this._otherExportsInfo.provided === undefined) {\n\t\t\t\tthis._otherExportsInfo.provided = false;\n\t\t\t}\n\t\t\tif (this._otherExportsInfo.canMangleProvide === undefined) {\n\t\t\t\tthis._otherExportsInfo.canMangleProvide = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tsetHasUseInfo() {\n\t\tfor (const exportInfo of this._exports.values()) {\n\t\t\texportInfo.setHasUseInfo();\n\t\t}\n\t\tthis._sideEffectsOnlyInfo.setHasUseInfo();\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tthis._redirectTo.setHasUseInfo();\n\t\t} else {\n\t\t\tthis._otherExportsInfo.setHasUseInfo();\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} name export name\n\t * @returns {ExportInfo} export info for this name\n\t */\n\tgetOwnExportInfo(name) {\n\t\tconst info = this._exports.get(name);\n\t\tif (info !== undefined) return info;\n\t\tconst newInfo = new ExportInfo(name, this._otherExportsInfo);\n\t\tthis._exports.set(name, newInfo);\n\t\tthis._exportsAreOrdered = false;\n\t\treturn newInfo;\n\t}\n\n\t/**\n\t * @param {string} name export name\n\t * @returns {ExportInfo} export info for this name\n\t */\n\tgetExportInfo(name) {\n\t\tconst info = this._exports.get(name);\n\t\tif (info !== undefined) return info;\n\t\tif (this._redirectTo !== undefined)\n\t\t\treturn this._redirectTo.getExportInfo(name);\n\t\tconst newInfo = new ExportInfo(name, this._otherExportsInfo);\n\t\tthis._exports.set(name, newInfo);\n\t\tthis._exportsAreOrdered = false;\n\t\treturn newInfo;\n\t}\n\n\t/**\n\t * @param {string} name export name\n\t * @returns {ExportInfo} export info for this name\n\t */\n\tgetReadOnlyExportInfo(name) {\n\t\tconst info = this._exports.get(name);\n\t\tif (info !== undefined) return info;\n\t\tif (this._redirectTo !== undefined)\n\t\t\treturn this._redirectTo.getReadOnlyExportInfo(name);\n\t\treturn this._otherExportsInfo;\n\t}\n\n\t/**\n\t * @param {string[]} name export name\n\t * @returns {ExportInfo | undefined} export info for this name\n\t */\n\tgetReadOnlyExportInfoRecursive(name) {\n\t\tconst exportInfo = this.getReadOnlyExportInfo(name[0]);\n\t\tif (name.length === 1) return exportInfo;\n\t\tif (!exportInfo.exportsInfo) return;\n\t\treturn exportInfo.exportsInfo.getReadOnlyExportInfoRecursive(name.slice(1));\n\t}\n\n\t/**\n\t * @param {string[]=} name the export name\n\t * @returns {ExportsInfo | undefined} the nested exports info\n\t */\n\tgetNestedExportsInfo(name) {\n\t\tif (Array.isArray(name) && name.length > 0) {\n\t\t\tconst info = this.getReadOnlyExportInfo(name[0]);\n\t\t\tif (!info.exportsInfo) return;\n\t\t\treturn info.exportsInfo.getNestedExportsInfo(name.slice(1));\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @param {boolean=} canMangle true, if exports can still be mangled (defaults to false)\n\t * @param {Set<string>=} excludeExports list of unaffected exports\n\t * @param {any=} targetKey use this as key for the target\n\t * @param {ModuleGraphConnection=} targetModule set this module as target\n\t * @param {number=} priority priority\n\t * @returns {boolean} true, if this call changed something\n\t */\n\tsetUnknownExportsProvided(\n\t\tcanMangle,\n\t\texcludeExports,\n\t\ttargetKey,\n\t\ttargetModule,\n\t\tpriority\n\t) {\n\t\tlet changed = false;\n\t\tif (excludeExports) {\n\t\t\tfor (const name of excludeExports) {\n\t\t\t\t// Make sure these entries exist, so they can get different info\n\t\t\t\tthis.getExportInfo(name);\n\t\t\t}\n\t\t}\n\t\tfor (const exportInfo of this._exports.values()) {\n\t\t\tif (!canMangle && exportInfo.canMangleProvide !== false) {\n\t\t\t\texportInfo.canMangleProvide = false;\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tif (excludeExports && excludeExports.has(exportInfo.name)) continue;\n\t\t\tif (exportInfo.provided !== true && exportInfo.provided !== null) {\n\t\t\t\texportInfo.provided = null;\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tif (targetKey) {\n\t\t\t\texportInfo.setTarget(\n\t\t\t\t\ttargetKey,\n\t\t\t\t\t/** @type {ModuleGraphConnection} */ (targetModule),\n\t\t\t\t\t[exportInfo.name],\n\t\t\t\t\t-1\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tif (\n\t\t\t\tthis._redirectTo.setUnknownExportsProvided(\n\t\t\t\t\tcanMangle,\n\t\t\t\t\texcludeExports,\n\t\t\t\t\ttargetKey,\n\t\t\t\t\ttargetModule,\n\t\t\t\t\tpriority\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t} else {\n\t\t\tif (\n\t\t\t\tthis._otherExportsInfo.provided !== true &&\n\t\t\t\tthis._otherExportsInfo.provided !== null\n\t\t\t) {\n\t\t\t\tthis._otherExportsInfo.provided = null;\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tif (!canMangle && this._otherExportsInfo.canMangleProvide !== false) {\n\t\t\t\tthis._otherExportsInfo.canMangleProvide = false;\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tif (targetKey) {\n\t\t\t\tthis._otherExportsInfo.setTarget(\n\t\t\t\t\ttargetKey,\n\t\t\t\t\t/** @type {ModuleGraphConnection} */ (targetModule),\n\t\t\t\t\tundefined,\n\t\t\t\t\tpriority\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn changed;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {boolean} true, when something changed\n\t */\n\tsetUsedInUnknownWay(runtime) {\n\t\tlet changed = false;\n\t\tfor (const exportInfo of this._exports.values()) {\n\t\t\tif (exportInfo.setUsedInUnknownWay(runtime)) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tif (this._redirectTo.setUsedInUnknownWay(runtime)) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t} else {\n\t\t\tif (\n\t\t\t\tthis._otherExportsInfo.setUsedConditionally(\n\t\t\t\t\tused => used < UsageState.Unknown,\n\t\t\t\t\tUsageState.Unknown,\n\t\t\t\t\truntime\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tif (this._otherExportsInfo.canMangleUse !== false) {\n\t\t\t\tthis._otherExportsInfo.canMangleUse = false;\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\t\treturn changed;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {boolean} true, when something changed\n\t */\n\tsetUsedWithoutInfo(runtime) {\n\t\tlet changed = false;\n\t\tfor (const exportInfo of this._exports.values()) {\n\t\t\tif (exportInfo.setUsedWithoutInfo(runtime)) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tif (this._redirectTo.setUsedWithoutInfo(runtime)) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._otherExportsInfo.setUsed(UsageState.NoInfo, runtime)) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tif (this._otherExportsInfo.canMangleUse !== false) {\n\t\t\t\tthis._otherExportsInfo.canMangleUse = false;\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\t\treturn changed;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {boolean} true, when something changed\n\t */\n\tsetAllKnownExportsUsed(runtime) {\n\t\tlet changed = false;\n\t\tfor (const exportInfo of this._exports.values()) {\n\t\t\tif (!exportInfo.provided) continue;\n\t\t\tif (exportInfo.setUsed(UsageState.Used, runtime)) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\t\treturn changed;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {boolean} true, when something changed\n\t */\n\tsetUsedForSideEffectsOnly(runtime) {\n\t\treturn this._sideEffectsOnlyInfo.setUsedConditionally(\n\t\t\tused => used === UsageState.Unused,\n\t\t\tUsageState.Used,\n\t\t\truntime\n\t\t);\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {boolean} true, when the module exports are used in any way\n\t */\n\tisUsed(runtime) {\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tif (this._redirectTo.isUsed(runtime)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (this._otherExportsInfo.getUsed(runtime) !== UsageState.Unused) {\n\t\t\treturn true;\n\t\t}\n\t\tfor (const exportInfo of this._exports.values()) {\n\t\t\tif (exportInfo.getUsed(runtime) !== UsageState.Unused) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {boolean} true, when the module is used in any way\n\t */\n\tisModuleUsed(runtime) {\n\t\tif (this.isUsed(runtime)) return true;\n\t\tif (this._sideEffectsOnlyInfo.getUsed(runtime) !== UsageState.Unused)\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {SortableSet<string> | boolean | null} set of used exports, or true (when namespace object is used), or false (when unused), or null (when unknown)\n\t */\n\tgetUsedExports(runtime) {\n\t\t// eslint-disable-next-line no-constant-binary-expression\n\t\tif (!this._redirectTo !== undefined) {\n\t\t\tswitch (this._otherExportsInfo.getUsed(runtime)) {\n\t\t\t\tcase UsageState.NoInfo:\n\t\t\t\t\treturn null;\n\t\t\t\tcase UsageState.Unknown:\n\t\t\t\tcase UsageState.OnlyPropertiesUsed:\n\t\t\t\tcase UsageState.Used:\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tconst array = [];\n\t\tif (!this._exportsAreOrdered) this._sortExports();\n\t\tfor (const exportInfo of this._exports.values()) {\n\t\t\tswitch (exportInfo.getUsed(runtime)) {\n\t\t\t\tcase UsageState.NoInfo:\n\t\t\t\t\treturn null;\n\t\t\t\tcase UsageState.Unknown:\n\t\t\t\t\treturn true;\n\t\t\t\tcase UsageState.OnlyPropertiesUsed:\n\t\t\t\tcase UsageState.Used:\n\t\t\t\t\tarray.push(exportInfo.name);\n\t\t\t}\n\t\t}\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tconst inner = this._redirectTo.getUsedExports(runtime);\n\t\t\tif (inner === null) return null;\n\t\t\tif (inner === true) return true;\n\t\t\tif (inner !== false) {\n\t\t\t\tfor (const item of inner) {\n\t\t\t\t\tarray.push(item);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (array.length === 0) {\n\t\t\tswitch (this._sideEffectsOnlyInfo.getUsed(runtime)) {\n\t\t\t\tcase UsageState.NoInfo:\n\t\t\t\t\treturn null;\n\t\t\t\tcase UsageState.Unused:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn /** @type {SortableSet<string>} */ (new SortableSet(array));\n\t}\n\n\t/**\n\t * @returns {null | true | string[]} list of exports when known\n\t */\n\tgetProvidedExports() {\n\t\t// eslint-disable-next-line no-constant-binary-expression\n\t\tif (!this._redirectTo !== undefined) {\n\t\t\tswitch (this._otherExportsInfo.provided) {\n\t\t\t\tcase undefined:\n\t\t\t\t\treturn null;\n\t\t\t\tcase null:\n\t\t\t\t\treturn true;\n\t\t\t\tcase true:\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tconst array = [];\n\t\tif (!this._exportsAreOrdered) this._sortExports();\n\t\tfor (const exportInfo of this._exports.values()) {\n\t\t\tswitch (exportInfo.provided) {\n\t\t\t\tcase undefined:\n\t\t\t\t\treturn null;\n\t\t\t\tcase null:\n\t\t\t\t\treturn true;\n\t\t\t\tcase true:\n\t\t\t\t\tarray.push(exportInfo.name);\n\t\t\t}\n\t\t}\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tconst inner = this._redirectTo.getProvidedExports();\n\t\t\tif (inner === null) return null;\n\t\t\tif (inner === true) return true;\n\t\t\tfor (const item of inner) {\n\t\t\t\tif (!array.includes(item)) {\n\t\t\t\t\tarray.push(item);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn array;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {ExportInfo[]} exports that are relevant (not unused and potential provided)\n\t */\n\tgetRelevantExports(runtime) {\n\t\tconst list = [];\n\t\tfor (const exportInfo of this._exports.values()) {\n\t\t\tconst used = exportInfo.getUsed(runtime);\n\t\t\tif (used === UsageState.Unused) continue;\n\t\t\tif (exportInfo.provided === false) continue;\n\t\t\tlist.push(exportInfo);\n\t\t}\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tfor (const exportInfo of this._redirectTo.getRelevantExports(runtime)) {\n\t\t\t\tif (!this._exports.has(exportInfo.name)) list.push(exportInfo);\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tthis._otherExportsInfo.provided !== false &&\n\t\t\tthis._otherExportsInfo.getUsed(runtime) !== UsageState.Unused\n\t\t) {\n\t\t\tlist.push(this._otherExportsInfo);\n\t\t}\n\t\treturn list;\n\t}\n\n\t/**\n\t * @param {string | string[]} name the name of the export\n\t * @returns {boolean | undefined | null} if the export is provided\n\t */\n\tisExportProvided(name) {\n\t\tif (Array.isArray(name)) {\n\t\t\tconst info = this.getReadOnlyExportInfo(name[0]);\n\t\t\tif (info.exportsInfo && name.length > 1) {\n\t\t\t\treturn info.exportsInfo.isExportProvided(name.slice(1));\n\t\t\t}\n\t\t\treturn info.provided ? name.length === 1 || undefined : info.provided;\n\t\t}\n\t\tconst info = this.getReadOnlyExportInfo(name);\n\t\treturn info.provided;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime runtime\n\t * @returns {string} key representing the usage\n\t */\n\tgetUsageKey(runtime) {\n\t\tconst key = [];\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tkey.push(this._redirectTo.getUsageKey(runtime));\n\t\t} else {\n\t\t\tkey.push(this._otherExportsInfo.getUsed(runtime));\n\t\t}\n\t\tkey.push(this._sideEffectsOnlyInfo.getUsed(runtime));\n\t\tfor (const exportInfo of this.orderedOwnedExports) {\n\t\t\tkey.push(exportInfo.getUsed(runtime));\n\t\t}\n\t\treturn key.join(\"|\");\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtimeA first runtime\n\t * @param {RuntimeSpec} runtimeB second runtime\n\t * @returns {boolean} true, when equally used\n\t */\n\tisEquallyUsed(runtimeA, runtimeB) {\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tif (!this._redirectTo.isEquallyUsed(runtimeA, runtimeB)) return false;\n\t\t} else if (\n\t\t\tthis._otherExportsInfo.getUsed(runtimeA) !==\n\t\t\tthis._otherExportsInfo.getUsed(runtimeB)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\tif (\n\t\t\tthis._sideEffectsOnlyInfo.getUsed(runtimeA) !==\n\t\t\tthis._sideEffectsOnlyInfo.getUsed(runtimeB)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (const exportInfo of this.ownedExports) {\n\t\t\tif (exportInfo.getUsed(runtimeA) !== exportInfo.getUsed(runtimeB))\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * @param {string | string[]} name export name\n\t * @param {RuntimeSpec} runtime check usage for this runtime only\n\t * @returns {UsageStateType} usage status\n\t */\n\tgetUsed(name, runtime) {\n\t\tif (Array.isArray(name)) {\n\t\t\tif (name.length === 0) return this.otherExportsInfo.getUsed(runtime);\n\t\t\tconst info = this.getReadOnlyExportInfo(name[0]);\n\t\t\tif (info.exportsInfo && name.length > 1) {\n\t\t\t\treturn info.exportsInfo.getUsed(name.slice(1), runtime);\n\t\t\t}\n\t\t\treturn info.getUsed(runtime);\n\t\t}\n\t\tconst info = this.getReadOnlyExportInfo(name);\n\t\treturn info.getUsed(runtime);\n\t}\n\n\t/**\n\t * @param {string | string[]} name the export name\n\t * @param {RuntimeSpec} runtime check usage for this runtime only\n\t * @returns {UsedName} the used name\n\t */\n\tgetUsedName(name, runtime) {\n\t\tif (Array.isArray(name)) {\n\t\t\t// TODO improve this\n\t\t\tif (name.length === 0) {\n\t\t\t\tif (!this.isUsed(runtime)) return false;\n\t\t\t\treturn name;\n\t\t\t}\n\t\t\tconst info = this.getReadOnlyExportInfo(name[0]);\n\t\t\tconst x = info.getUsedName(name[0], runtime);\n\t\t\tif (x === false) return false;\n\t\t\tconst arr =\n\t\t\t\t/** @type {string[]} */\n\t\t\t\t(x === name[0] && name.length === 1 ? name : [x]);\n\t\t\tif (name.length === 1) {\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tinfo.exportsInfo &&\n\t\t\t\tinfo.getUsed(runtime) === UsageState.OnlyPropertiesUsed\n\t\t\t) {\n\t\t\t\tconst nested = info.exportsInfo.getUsedName(name.slice(1), runtime);\n\t\t\t\tif (!nested) return false;\n\t\t\t\treturn arr.concat(nested);\n\t\t\t}\n\t\t\treturn arr.concat(name.slice(1));\n\t\t}\n\t\tconst info = this.getReadOnlyExportInfo(name);\n\t\tconst usedName = info.getUsedName(name, runtime);\n\t\treturn usedName;\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {void}\n\t */\n\tupdateHash(hash, runtime) {\n\t\tthis._updateHash(hash, runtime, new Set());\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @param {Set<ExportsInfo>} alreadyVisitedExportsInfo for circular references\n\t * @returns {void}\n\t */\n\t_updateHash(hash, runtime, alreadyVisitedExportsInfo) {\n\t\tconst set = new Set(alreadyVisitedExportsInfo);\n\t\tset.add(this);\n\t\tfor (const exportInfo of this.orderedExports) {\n\t\t\tif (exportInfo.hasInfo(this._otherExportsInfo, runtime)) {\n\t\t\t\texportInfo._updateHash(hash, runtime, set);\n\t\t\t}\n\t\t}\n\t\tthis._sideEffectsOnlyInfo._updateHash(hash, runtime, set);\n\t\tthis._otherExportsInfo._updateHash(hash, runtime, set);\n\t\tif (this._redirectTo !== undefined) {\n\t\t\tthis._redirectTo._updateHash(hash, runtime, set);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {RestoreProvidedData} restore provided data\n\t */\n\tgetRestoreProvidedData() {\n\t\tconst otherProvided = this._otherExportsInfo.provided;\n\t\tconst otherCanMangleProvide = this._otherExportsInfo.canMangleProvide;\n\t\tconst otherTerminalBinding = this._otherExportsInfo.terminalBinding;\n\t\tconst exports = [];\n\t\tfor (const exportInfo of this.orderedExports) {\n\t\t\tif (\n\t\t\t\texportInfo.provided !== otherProvided ||\n\t\t\t\texportInfo.canMangleProvide !== otherCanMangleProvide ||\n\t\t\t\texportInfo.terminalBinding !== otherTerminalBinding ||\n\t\t\t\texportInfo.exportsInfoOwned\n\t\t\t) {\n\t\t\t\texports.push({\n\t\t\t\t\tname: exportInfo.name,\n\t\t\t\t\tprovided: exportInfo.provided,\n\t\t\t\t\tcanMangleProvide: exportInfo.canMangleProvide,\n\t\t\t\t\tterminalBinding: exportInfo.terminalBinding,\n\t\t\t\t\texportsInfo: exportInfo.exportsInfoOwned\n\t\t\t\t\t\t? /** @type {NonNullable<ExportInfo[\"exportsInfo\"]>} */\n\t\t\t\t\t\t\t(exportInfo.exportsInfo).getRestoreProvidedData()\n\t\t\t\t\t\t: undefined\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn new RestoreProvidedData(\n\t\t\texports,\n\t\t\totherProvided,\n\t\t\totherCanMangleProvide,\n\t\t\totherTerminalBinding\n\t\t);\n\t}\n\n\t/**\n\t * @param {{ otherProvided: any, otherCanMangleProvide: any, otherTerminalBinding: any, exports: any }} data data\n\t */\n\trestoreProvided({\n\t\totherProvided,\n\t\totherCanMangleProvide,\n\t\totherTerminalBinding,\n\t\texports\n\t}) {\n\t\tlet wasEmpty = true;\n\t\tfor (const exportInfo of this._exports.values()) {\n\t\t\twasEmpty = false;\n\t\t\texportInfo.provided = otherProvided;\n\t\t\texportInfo.canMangleProvide = otherCanMangleProvide;\n\t\t\texportInfo.terminalBinding = otherTerminalBinding;\n\t\t}\n\t\tthis._otherExportsInfo.provided = otherProvided;\n\t\tthis._otherExportsInfo.canMangleProvide = otherCanMangleProvide;\n\t\tthis._otherExportsInfo.terminalBinding = otherTerminalBinding;\n\t\tfor (const exp of exports) {\n\t\t\tconst exportInfo = this.getExportInfo(exp.name);\n\t\t\texportInfo.provided = exp.provided;\n\t\t\texportInfo.canMangleProvide = exp.canMangleProvide;\n\t\t\texportInfo.terminalBinding = exp.terminalBinding;\n\t\t\tif (exp.exportsInfo) {\n\t\t\t\tconst exportsInfo = exportInfo.createNestedExportsInfo();\n\t\t\t\texportsInfo.restoreProvided(exp.exportsInfo);\n\t\t\t}\n\t\t}\n\t\tif (wasEmpty) this._exportsAreOrdered = true;\n\t}\n}\n\n/** @typedef {{ module: Module, export: string[] }} TargetItemWithoutConnection */\n/** @typedef {{ module: Module, connection: ModuleGraphConnection, export: string[] | undefined }} TargetItem */\n/** @typedef {Map<any, { connection: ModuleGraphConnection | null, export: string[], priority: number }>} Target */\n\nclass ExportInfo {\n\t/**\n\t * @param {string} name the original name of the export\n\t * @param {ExportInfo=} initFrom init values from this ExportInfo\n\t */\n\tconstructor(name, initFrom) {\n\t\t/** @type {string} */\n\t\tthis.name = name;\n\t\t/**\n\t\t * @private\n\t\t * @type {string | null}\n\t\t */\n\t\tthis._usedName = initFrom ? initFrom._usedName : null;\n\t\t/**\n\t\t * @private\n\t\t * @type {UsageStateType | undefined}\n\t\t */\n\t\tthis._globalUsed = initFrom ? initFrom._globalUsed : undefined;\n\t\t/**\n\t\t * @private\n\t\t * @type {Map<string, RuntimeUsageStateType>}\n\t\t */\n\t\tthis._usedInRuntime =\n\t\t\tinitFrom && initFrom._usedInRuntime\n\t\t\t\t? new Map(initFrom._usedInRuntime)\n\t\t\t\t: undefined;\n\t\t/**\n\t\t * @private\n\t\t * @type {boolean}\n\t\t */\n\t\tthis._hasUseInRuntimeInfo = initFrom\n\t\t\t? initFrom._hasUseInRuntimeInfo\n\t\t\t: false;\n\t\t/**\n\t\t * true: it is provided\n\t\t * false: it is not provided\n\t\t * null: only the runtime knows if it is provided\n\t\t * undefined: it was not determined if it is provided\n\t\t * @type {boolean | null | undefined}\n\t\t */\n\t\tthis.provided = initFrom ? initFrom.provided : undefined;\n\t\t/**\n\t\t * is the export a terminal binding that should be checked for export star conflicts\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.terminalBinding = initFrom ? initFrom.terminalBinding : false;\n\t\t/**\n\t\t * true: it can be mangled\n\t\t * false: is can not be mangled\n\t\t * undefined: it was not determined if it can be mangled\n\t\t * @type {boolean | undefined}\n\t\t */\n\t\tthis.canMangleProvide = initFrom ? initFrom.canMangleProvide : undefined;\n\t\t/**\n\t\t * true: it can be mangled\n\t\t * false: is can not be mangled\n\t\t * undefined: it was not determined if it can be mangled\n\t\t * @type {boolean | undefined}\n\t\t */\n\t\tthis.canMangleUse = initFrom ? initFrom.canMangleUse : undefined;\n\t\t/** @type {boolean} */\n\t\tthis.exportsInfoOwned = false;\n\t\t/** @type {ExportsInfo | undefined} */\n\t\tthis.exportsInfo = undefined;\n\t\t/** @type {Target | undefined} */\n\t\tthis._target = undefined;\n\t\tif (initFrom && initFrom._target) {\n\t\t\tthis._target = new Map();\n\t\t\tfor (const [key, value] of initFrom._target) {\n\t\t\t\tthis._target.set(key, {\n\t\t\t\t\tconnection: value.connection,\n\t\t\t\t\texport: value.export || [name],\n\t\t\t\t\tpriority: value.priority\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t/** @type {Target | undefined} */\n\t\tthis._maxTarget = undefined;\n\t}\n\n\t// TODO webpack 5 remove\n\t/**\n\t * @private\n\t * @param {*} v v\n\t */\n\tset used(v) {\n\t\tthrow new Error(\"REMOVED\");\n\t}\n\n\t// TODO webpack 5 remove\n\t/** @private */\n\tget used() {\n\t\tthrow new Error(\"REMOVED\");\n\t}\n\n\t// TODO webpack 5 remove\n\t/**\n\t * @private\n\t * @param {*} v v\n\t */\n\tset usedName(v) {\n\t\tthrow new Error(\"REMOVED\");\n\t}\n\n\t// TODO webpack 5 remove\n\t/** @private */\n\tget usedName() {\n\t\tthrow new Error(\"REMOVED\");\n\t}\n\n\tget canMangle() {\n\t\tswitch (this.canMangleProvide) {\n\t\t\tcase undefined:\n\t\t\t\treturn this.canMangleUse === false ? false : undefined;\n\t\t\tcase false:\n\t\t\t\treturn false;\n\t\t\tcase true:\n\t\t\t\tswitch (this.canMangleUse) {\n\t\t\t\t\tcase undefined:\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\tcase false:\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tcase true:\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t}\n\t\tthrow new Error(\n\t\t\t`Unexpected flags for canMangle ${this.canMangleProvide} ${this.canMangleUse}`\n\t\t);\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime only apply to this runtime\n\t * @returns {boolean} true, when something changed\n\t */\n\tsetUsedInUnknownWay(runtime) {\n\t\tlet changed = false;\n\t\tif (\n\t\t\tthis.setUsedConditionally(\n\t\t\t\tused => used < UsageState.Unknown,\n\t\t\t\tUsageState.Unknown,\n\t\t\t\truntime\n\t\t\t)\n\t\t) {\n\t\t\tchanged = true;\n\t\t}\n\t\tif (this.canMangleUse !== false) {\n\t\t\tthis.canMangleUse = false;\n\t\t\tchanged = true;\n\t\t}\n\t\treturn changed;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime only apply to this runtime\n\t * @returns {boolean} true, when something changed\n\t */\n\tsetUsedWithoutInfo(runtime) {\n\t\tlet changed = false;\n\t\tif (this.setUsed(UsageState.NoInfo, runtime)) {\n\t\t\tchanged = true;\n\t\t}\n\t\tif (this.canMangleUse !== false) {\n\t\t\tthis.canMangleUse = false;\n\t\t\tchanged = true;\n\t\t}\n\t\treturn changed;\n\t}\n\n\tsetHasUseInfo() {\n\t\tif (!this._hasUseInRuntimeInfo) {\n\t\t\tthis._hasUseInRuntimeInfo = true;\n\t\t}\n\t\tif (this.canMangleUse === undefined) {\n\t\t\tthis.canMangleUse = true;\n\t\t}\n\t\tif (this.exportsInfoOwned) {\n\t\t\t/** @type {ExportsInfo} */\n\t\t\t(this.exportsInfo).setHasUseInfo();\n\t\t}\n\t}\n\n\t/**\n\t * @param {function(UsageStateType): boolean} condition compare with old value\n\t * @param {UsageStateType} newValue set when condition is true\n\t * @param {RuntimeSpec} runtime only apply to this runtime\n\t * @returns {boolean} true when something has changed\n\t */\n\tsetUsedConditionally(condition, newValue, runtime) {\n\t\tif (runtime === undefined) {\n\t\t\tif (this._globalUsed === undefined) {\n\t\t\t\tthis._globalUsed = newValue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (this._globalUsed !== newValue && condition(this._globalUsed)) {\n\t\t\t\tthis._globalUsed = newValue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (this._usedInRuntime === undefined) {\n\t\t\tif (newValue !== UsageState.Unused && condition(UsageState.Unused)) {\n\t\t\t\tthis._usedInRuntime = new Map();\n\t\t\t\tforEachRuntime(runtime, runtime =>\n\t\t\t\t\tthis._usedInRuntime.set(/** @type {string} */ (runtime), newValue)\n\t\t\t\t);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\tlet changed = false;\n\t\t\tforEachRuntime(runtime, _runtime => {\n\t\t\t\tconst runtime = /** @type {string} */ (_runtime);\n\t\t\t\tlet oldValue =\n\t\t\t\t\t/** @type {UsageStateType} */\n\t\t\t\t\t(this._usedInRuntime.get(runtime));\n\t\t\t\tif (oldValue === undefined) oldValue = UsageState.Unused;\n\t\t\t\tif (newValue !== oldValue && condition(oldValue)) {\n\t\t\t\t\tif (newValue === UsageState.Unused) {\n\t\t\t\t\t\tthis._usedInRuntime.delete(runtime);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._usedInRuntime.set(runtime, newValue);\n\t\t\t\t\t}\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (changed) {\n\t\t\t\tif (this._usedInRuntime.size === 0) this._usedInRuntime = undefined;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {UsageStateType} newValue new value of the used state\n\t * @param {RuntimeSpec} runtime only apply to this runtime\n\t * @returns {boolean} true when something has changed\n\t */\n\tsetUsed(newValue, runtime) {\n\t\tif (runtime === undefined) {\n\t\t\tif (this._globalUsed !== newValue) {\n\t\t\t\tthis._globalUsed = newValue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (this._usedInRuntime === undefined) {\n\t\t\tif (newValue !== UsageState.Unused) {\n\t\t\t\tthis._usedInRuntime = new Map();\n\t\t\t\tforEachRuntime(runtime, runtime =>\n\t\t\t\t\tthis._usedInRuntime.set(/** @type {string} */ (runtime), newValue)\n\t\t\t\t);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\tlet changed = false;\n\t\t\tforEachRuntime(runtime, _runtime => {\n\t\t\t\tconst runtime = /** @type {string} */ (_runtime);\n\t\t\t\tlet oldValue =\n\t\t\t\t\t/** @type {UsageStateType} */\n\t\t\t\t\t(this._usedInRuntime.get(runtime));\n\t\t\t\tif (oldValue === undefined) oldValue = UsageState.Unused;\n\t\t\t\tif (newValue !== oldValue) {\n\t\t\t\t\tif (newValue === UsageState.Unused) {\n\t\t\t\t\t\tthis._usedInRuntime.delete(runtime);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._usedInRuntime.set(runtime, newValue);\n\t\t\t\t\t}\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (changed) {\n\t\t\t\tif (this._usedInRuntime.size === 0) this._usedInRuntime = undefined;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {any} key the key\n\t * @returns {boolean} true, if something has changed\n\t */\n\tunsetTarget(key) {\n\t\tif (!this._target) return false;\n\t\tif (this._target.delete(key)) {\n\t\t\tthis._maxTarget = undefined;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {any} key the key\n\t * @param {ModuleGraphConnection} connection the target module if a single one\n\t * @param {(string[] | null)=} exportName the exported name\n\t * @param {number=} priority priority\n\t * @returns {boolean} true, if something has changed\n\t */\n\tsetTarget(key, connection, exportName, priority = 0) {\n\t\tif (exportName) exportName = [...exportName];\n\t\tif (!this._target) {\n\t\t\tthis._target = new Map();\n\t\t\tthis._target.set(key, {\n\t\t\t\tconnection,\n\t\t\t\texport: /** @type {string[]} */ (exportName),\n\t\t\t\tpriority\n\t\t\t});\n\t\t\treturn true;\n\t\t}\n\t\tconst oldTarget = this._target.get(key);\n\t\tif (!oldTarget) {\n\t\t\tif (oldTarget === null && !connection) return false;\n\t\t\tthis._target.set(key, {\n\t\t\t\tconnection,\n\t\t\t\texport: /** @type {string[]} */ (exportName),\n\t\t\t\tpriority\n\t\t\t});\n\t\t\tthis._maxTarget = undefined;\n\t\t\treturn true;\n\t\t}\n\t\tif (\n\t\t\toldTarget.connection !== connection ||\n\t\t\toldTarget.priority !== priority ||\n\t\t\t(exportName\n\t\t\t\t? !oldTarget.export || !equals(oldTarget.export, exportName)\n\t\t\t\t: oldTarget.export)\n\t\t) {\n\t\t\toldTarget.connection = connection;\n\t\t\toldTarget.export = /** @type {string[]} */ (exportName);\n\t\t\toldTarget.priority = priority;\n\t\t\tthis._maxTarget = undefined;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {RuntimeSpec} runtime for this runtime\n\t * @returns {UsageStateType} usage state\n\t */\n\tgetUsed(runtime) {\n\t\tif (!this._hasUseInRuntimeInfo) return UsageState.NoInfo;\n\t\tif (this._globalUsed !== undefined) return this._globalUsed;\n\t\tif (this._usedInRuntime === undefined) {\n\t\t\treturn UsageState.Unused;\n\t\t} else if (typeof runtime === \"string\") {\n\t\t\tconst value = this._usedInRuntime.get(runtime);\n\t\t\treturn value === undefined ? UsageState.Unused : value;\n\t\t} else if (runtime === undefined) {\n\t\t\t/** @type {UsageStateType} */\n\t\t\tlet max = UsageState.Unused;\n\t\t\tfor (const value of this._usedInRuntime.values()) {\n\t\t\t\tif (value === UsageState.Used) {\n\t\t\t\t\treturn UsageState.Used;\n\t\t\t\t}\n\t\t\t\tif (max < value) max = value;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\n\t\t/** @type {UsageStateType} */\n\t\tlet max = UsageState.Unused;\n\t\tfor (const item of runtime) {\n\t\t\tconst value = this._usedInRuntime.get(item);\n\t\t\tif (value !== undefined) {\n\t\t\t\tif (value === UsageState.Used) {\n\t\t\t\t\treturn UsageState.Used;\n\t\t\t\t}\n\t\t\t\tif (max < value) max = value;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t}\n\n\t/**\n\t * get used name\n\t * @param {string | undefined} fallbackName fallback name for used exports with no name\n\t * @param {RuntimeSpec} runtime check usage for this runtime only\n\t * @returns {string | false} used name\n\t */\n\tgetUsedName(fallbackName, runtime) {\n\t\tif (this._hasUseInRuntimeInfo) {\n\t\t\tif (this._globalUsed !== undefined) {\n\t\t\t\tif (this._globalUsed === UsageState.Unused) return false;\n\t\t\t} else {\n\t\t\t\tif (this._usedInRuntime === undefined) return false;\n\t\t\t\tif (typeof runtime === \"string\") {\n\t\t\t\t\tif (!this._usedInRuntime.has(runtime)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\truntime !== undefined &&\n\t\t\t\t\tArray.from(runtime).every(\n\t\t\t\t\t\truntime => !this._usedInRuntime.has(runtime)\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this._usedName !== null) return this._usedName;\n\t\treturn /** @type {string | false} */ (this.name || fallbackName);\n\t}\n\n\t/**\n\t * @returns {boolean} true, when a mangled name of this export is set\n\t */\n\thasUsedName() {\n\t\treturn this._usedName !== null;\n\t}\n\n\t/**\n\t * Sets the mangled name of this export\n\t * @param {string} name the new name\n\t * @returns {void}\n\t */\n\tsetUsedName(name) {\n\t\tthis._usedName = name;\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @param {function(TargetItem): boolean} resolveTargetFilter filter function to further resolve target\n\t * @returns {ExportInfo | ExportsInfo | undefined} the terminal binding export(s) info if known\n\t */\n\tgetTerminalBinding(moduleGraph, resolveTargetFilter = RETURNS_TRUE) {\n\t\tif (this.terminalBinding) return this;\n\t\tconst target = this.getTarget(moduleGraph, resolveTargetFilter);\n\t\tif (!target) return;\n\t\tconst exportsInfo = moduleGraph.getExportsInfo(target.module);\n\t\tif (!target.export) return exportsInfo;\n\t\treturn exportsInfo.getReadOnlyExportInfoRecursive(target.export);\n\t}\n\n\tisReexport() {\n\t\treturn !this.terminalBinding && this._target && this._target.size > 0;\n\t}\n\n\t_getMaxTarget() {\n\t\tif (this._maxTarget !== undefined) return this._maxTarget;\n\t\tif (/** @type {Target} */ (this._target).size <= 1)\n\t\t\treturn (this._maxTarget = this._target);\n\t\tlet maxPriority = -Infinity;\n\t\tlet minPriority = Infinity;\n\t\tfor (const { priority } of /** @type {Target} */ (this._target).values()) {\n\t\t\tif (maxPriority < priority) maxPriority = priority;\n\t\t\tif (minPriority > priority) minPriority = priority;\n\t\t}\n\t\t// This should be very common\n\t\tif (maxPriority === minPriority) return (this._maxTarget = this._target);\n\n\t\t// This is an edge case\n\t\tconst map = new Map();\n\t\tfor (const [key, value] of /** @type {Target} */ (this._target)) {\n\t\t\tif (maxPriority === value.priority) {\n\t\t\t\tmap.set(key, value);\n\t\t\t}\n\t\t}\n\t\tthis._maxTarget = map;\n\t\treturn map;\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @param {function(Module): boolean} validTargetModuleFilter a valid target module\n\t * @returns {TargetItemWithoutConnection | null | undefined | false} the target, undefined when there is no target, false when no target is valid\n\t */\n\tfindTarget(moduleGraph, validTargetModuleFilter) {\n\t\treturn this._findTarget(moduleGraph, validTargetModuleFilter, new Set());\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @param {function(Module): boolean} validTargetModuleFilter a valid target module\n\t * @param {Set<ExportInfo>} alreadyVisited set of already visited export info to avoid circular references\n\t * @returns {TargetItemWithoutConnection | null | undefined | false} the target, undefined when there is no target, false when no target is valid\n\t */\n\t_findTarget(moduleGraph, validTargetModuleFilter, alreadyVisited) {\n\t\tif (!this._target || this._target.size === 0) return;\n\t\tconst rawTarget =\n\t\t\t/** @type {Target} */\n\t\t\t(this._getMaxTarget()).values().next().value;\n\t\tif (!rawTarget) return;\n\t\t/** @type {TargetItemWithoutConnection} */\n\t\tlet target = {\n\t\t\tmodule: rawTarget.connection.module,\n\t\t\texport: rawTarget.export\n\t\t};\n\t\tfor (;;) {\n\t\t\tif (validTargetModuleFilter(target.module)) return target;\n\t\t\tconst exportsInfo = moduleGraph.getExportsInfo(target.module);\n\t\t\tconst exportInfo = exportsInfo.getExportInfo(target.export[0]);\n\t\t\tif (alreadyVisited.has(exportInfo)) return null;\n\t\t\tconst newTarget = exportInfo._findTarget(\n\t\t\t\tmoduleGraph,\n\t\t\t\tvalidTargetModuleFilter,\n\t\t\t\talreadyVisited\n\t\t\t);\n\t\t\tif (!newTarget) return false;\n\t\t\tif (target.export.length === 1) {\n\t\t\t\ttarget = newTarget;\n\t\t\t} else {\n\t\t\t\ttarget = {\n\t\t\t\t\tmodule: newTarget.module,\n\t\t\t\t\texport: newTarget.export\n\t\t\t\t\t\t? newTarget.export.concat(target.export.slice(1))\n\t\t\t\t\t\t: target.export.slice(1)\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @param {function(TargetItem): boolean} resolveTargetFilter filter function to further resolve target\n\t * @returns {TargetItem | undefined} the target\n\t */\n\tgetTarget(moduleGraph, resolveTargetFilter = RETURNS_TRUE) {\n\t\tconst result = this._getTarget(moduleGraph, resolveTargetFilter, undefined);\n\t\tif (result === CIRCULAR) return;\n\t\treturn result;\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @param {function(TargetItem): boolean} resolveTargetFilter filter function to further resolve target\n\t * @param {Set<ExportInfo> | undefined} alreadyVisited set of already visited export info to avoid circular references\n\t * @returns {TargetItem | CIRCULAR | undefined} the target\n\t */\n\t_getTarget(moduleGraph, resolveTargetFilter, alreadyVisited) {\n\t\t/**\n\t\t * @param {TargetItem | null} inputTarget unresolved target\n\t\t * @param {Set<ExportInfo>} alreadyVisited set of already visited export info to avoid circular references\n\t\t * @returns {TargetItem | CIRCULAR | null} resolved target\n\t\t */\n\t\tconst resolveTarget = (inputTarget, alreadyVisited) => {\n\t\t\tif (!inputTarget) return null;\n\t\t\tif (!inputTarget.export) {\n\t\t\t\treturn {\n\t\t\t\t\tmodule: inputTarget.connection.module,\n\t\t\t\t\tconnection: inputTarget.connection,\n\t\t\t\t\texport: undefined\n\t\t\t\t};\n\t\t\t}\n\t\t\t/** @type {TargetItem} */\n\t\t\tlet target = {\n\t\t\t\tmodule: inputTarget.connection.module,\n\t\t\t\tconnection: inputTarget.connection,\n\t\t\t\texport: inputTarget.export\n\t\t\t};\n\t\t\tif (!resolveTargetFilter(target)) return target;\n\t\t\tlet alreadyVisitedOwned = false;\n\t\t\tfor (;;) {\n\t\t\t\tconst exportsInfo = moduleGraph.getExportsInfo(target.module);\n\t\t\t\tconst exportInfo = exportsInfo.getExportInfo(\n\t\t\t\t\t/** @type {NonNullable<TargetItem[\"export\"]>} */\n\t\t\t\t\t(target.export)[0]\n\t\t\t\t);\n\t\t\t\tif (!exportInfo) return target;\n\t\t\t\tif (alreadyVisited.has(exportInfo)) return CIRCULAR;\n\t\t\t\tconst newTarget = exportInfo._getTarget(\n\t\t\t\t\tmoduleGraph,\n\t\t\t\t\tresolveTargetFilter,\n\t\t\t\t\talreadyVisited\n\t\t\t\t);\n\t\t\t\tif (newTarget === CIRCULAR) return CIRCULAR;\n\t\t\t\tif (!newTarget) return target;\n\t\t\t\tif (\n\t\t\t\t\t/** @type {NonNullable<TargetItem[\"export\"]>} */\n\t\t\t\t\t(target.export).length === 1\n\t\t\t\t) {\n\t\t\t\t\ttarget = newTarget;\n\t\t\t\t\tif (!target.export) return target;\n\t\t\t\t} else {\n\t\t\t\t\ttarget = {\n\t\t\t\t\t\tmodule: newTarget.module,\n\t\t\t\t\t\tconnection: newTarget.connection,\n\t\t\t\t\t\texport: newTarget.export\n\t\t\t\t\t\t\t? newTarget.export.concat(\n\t\t\t\t\t\t\t\t\t/** @type {NonNullable<TargetItem[\"export\"]>} */\n\t\t\t\t\t\t\t\t\t(target.export).slice(1)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: /** @type {NonNullable<TargetItem[\"export\"]>} */\n\t\t\t\t\t\t\t\t(target.export).slice(1)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (!resolveTargetFilter(target)) return target;\n\t\t\t\tif (!alreadyVisitedOwned) {\n\t\t\t\t\talreadyVisited = new Set(alreadyVisited);\n\t\t\t\t\talreadyVisitedOwned = true;\n\t\t\t\t}\n\t\t\t\talreadyVisited.add(exportInfo);\n\t\t\t}\n\t\t};\n\n\t\tif (!this._target || this._target.size === 0) return;\n\t\tif (alreadyVisited && alreadyVisited.has(this)) return CIRCULAR;\n\t\tconst newAlreadyVisited = new Set(alreadyVisited);\n\t\tnewAlreadyVisited.add(this);\n\t\tconst values = /** @type {Target} */ (this._getMaxTarget()).values();\n\t\tconst target = resolveTarget(values.next().value, newAlreadyVisited);\n\t\tif (target === CIRCULAR) return CIRCULAR;\n\t\tif (target === null) return;\n\t\tlet result = values.next();\n\t\twhile (!result.done) {\n\t\t\tconst t = resolveTarget(result.value, newAlreadyVisited);\n\t\t\tif (t === CIRCULAR) return CIRCULAR;\n\t\t\tif (t === null) return;\n\t\t\tif (t.module !== target.module) return;\n\t\t\tif (!t.export !== !target.export) return;\n\t\t\tif (\n\t\t\t\ttarget.export &&\n\t\t\t\t!equals(/** @type {ArrayLike<string>} */ (t.export), target.export)\n\t\t\t)\n\t\t\t\treturn;\n\t\t\tresult = values.next();\n\t\t}\n\t\treturn target;\n\t}\n\n\t/**\n\t * Move the target forward as long resolveTargetFilter is fulfilled\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @param {function(TargetItem): boolean} resolveTargetFilter filter function to further resolve target\n\t * @param {function(TargetItem): ModuleGraphConnection=} updateOriginalConnection updates the original connection instead of using the target connection\n\t * @returns {TargetItem | undefined} the resolved target when moved\n\t */\n\tmoveTarget(moduleGraph, resolveTargetFilter, updateOriginalConnection) {\n\t\tconst target = this._getTarget(moduleGraph, resolveTargetFilter, undefined);\n\t\tif (target === CIRCULAR) return;\n\t\tif (!target) return;\n\t\tconst originalTarget =\n\t\t\t/** @type {Target} */\n\t\t\t(this._getMaxTarget()).values().next().value;\n\t\tif (\n\t\t\toriginalTarget.connection === target.connection &&\n\t\t\toriginalTarget.export === target.export\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\t/** @type {Target} */\n\t\t(this._target).clear();\n\t\t/** @type {Target} */\n\t\t(this._target).set(undefined, {\n\t\t\tconnection: updateOriginalConnection\n\t\t\t\t? updateOriginalConnection(target)\n\t\t\t\t: target.connection,\n\t\t\texport: /** @type {NonNullable<TargetItem[\"export\"]>} */ (target.export),\n\t\t\tpriority: 0\n\t\t});\n\t\treturn target;\n\t}\n\n\t/**\n\t * @returns {ExportsInfo} an exports info\n\t */\n\tcreateNestedExportsInfo() {\n\t\tif (this.exportsInfoOwned)\n\t\t\treturn /** @type {ExportsInfo} */ (this.exportsInfo);\n\t\tthis.exportsInfoOwned = true;\n\t\tconst oldExportsInfo = this.exportsInfo;\n\t\tthis.exportsInfo = new ExportsInfo();\n\t\tthis.exportsInfo.setHasProvideInfo();\n\t\tif (oldExportsInfo) {\n\t\t\tthis.exportsInfo.setRedirectNamedTo(oldExportsInfo);\n\t\t}\n\t\treturn this.exportsInfo;\n\t}\n\n\tgetNestedExportsInfo() {\n\t\treturn this.exportsInfo;\n\t}\n\n\t/**\n\t * @param {ExportInfo} baseInfo base info\n\t * @param {RuntimeSpec} runtime runtime\n\t * @returns {boolean} true when has info, otherwise false\n\t */\n\thasInfo(baseInfo, runtime) {\n\t\treturn (\n\t\t\t(this._usedName && this._usedName !== this.name) ||\n\t\t\tthis.provided ||\n\t\t\tthis.terminalBinding ||\n\t\t\tthis.getUsed(runtime) !== baseInfo.getUsed(runtime)\n\t\t);\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @returns {void}\n\t */\n\tupdateHash(hash, runtime) {\n\t\tthis._updateHash(hash, runtime, new Set());\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash\n\t * @param {RuntimeSpec} runtime the runtime\n\t * @param {Set<ExportsInfo>} alreadyVisitedExportsInfo for circular references\n\t */\n\t_updateHash(hash, runtime, alreadyVisitedExportsInfo) {\n\t\thash.update(\n\t\t\t`${this._usedName || this.name}${this.getUsed(runtime)}${this.provided}${\n\t\t\t\tthis.terminalBinding\n\t\t\t}`\n\t\t);\n\t\tif (this.exportsInfo && !alreadyVisitedExportsInfo.has(this.exportsInfo)) {\n\t\t\tthis.exportsInfo._updateHash(hash, runtime, alreadyVisitedExportsInfo);\n\t\t}\n\t}\n\n\tgetUsedInfo() {\n\t\tif (this._globalUsed !== undefined) {\n\t\t\tswitch (this._globalUsed) {\n\t\t\t\tcase UsageState.Unused:\n\t\t\t\t\treturn \"unused\";\n\t\t\t\tcase UsageState.NoInfo:\n\t\t\t\t\treturn \"no usage info\";\n\t\t\t\tcase UsageState.Unknown:\n\t\t\t\t\treturn \"maybe used (runtime-defined)\";\n\t\t\t\tcase UsageState.Used:\n\t\t\t\t\treturn \"used\";\n\t\t\t\tcase UsageState.OnlyPropertiesUsed:\n\t\t\t\t\treturn \"only properties used\";\n\t\t\t}\n\t\t} else if (this._usedInRuntime !== undefined) {\n\t\t\t/** @type {Map<RuntimeUsageStateType, string[]>} */\n\t\t\tconst map = new Map();\n\t\t\tfor (const [runtime, used] of this._usedInRuntime) {\n\t\t\t\tconst list = map.get(used);\n\t\t\t\tif (list !== undefined) list.push(runtime);\n\t\t\t\telse map.set(used, [runtime]);\n\t\t\t}\n\t\t\t// eslint-disable-next-line array-callback-return\n\t\t\tconst specificInfo = Array.from(map, ([used, runtimes]) => {\n\t\t\t\tswitch (used) {\n\t\t\t\t\tcase UsageState.NoInfo:\n\t\t\t\t\t\treturn `no usage info in ${runtimes.join(\", \")}`;\n\t\t\t\t\tcase UsageState.Unknown:\n\t\t\t\t\t\treturn `maybe used in ${runtimes.join(\", \")} (runtime-defined)`;\n\t\t\t\t\tcase UsageState.Used:\n\t\t\t\t\t\treturn `used in ${runtimes.join(\", \")}`;\n\t\t\t\t\tcase UsageState.OnlyPropertiesUsed:\n\t\t\t\t\t\treturn `only properties used in ${runtimes.join(\", \")}`;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (specificInfo.length > 0) {\n\t\t\t\treturn specificInfo.join(\"; \");\n\t\t\t}\n\t\t}\n\t\treturn this._hasUseInRuntimeInfo ? \"unused\" : \"no usage info\";\n\t}\n\n\tgetProvidedInfo() {\n\t\tswitch (this.provided) {\n\t\t\tcase undefined:\n\t\t\t\treturn \"no provided info\";\n\t\t\tcase null:\n\t\t\t\treturn \"maybe provided (runtime-defined)\";\n\t\t\tcase true:\n\t\t\t\treturn \"provided\";\n\t\t\tcase false:\n\t\t\t\treturn \"not provided\";\n\t\t}\n\t}\n\n\tgetRenameInfo() {\n\t\tif (this._usedName !== null && this._usedName !== this.name) {\n\t\t\treturn `renamed to ${JSON.stringify(this._usedName).slice(1, -1)}`;\n\t\t}\n\t\tswitch (this.canMangleProvide) {\n\t\t\tcase undefined:\n\t\t\t\tswitch (this.canMangleUse) {\n\t\t\t\t\tcase undefined:\n\t\t\t\t\t\treturn \"missing provision and use info prevents renaming\";\n\t\t\t\t\tcase false:\n\t\t\t\t\t\treturn \"usage prevents renaming (no provision info)\";\n\t\t\t\t\tcase true:\n\t\t\t\t\t\treturn \"missing provision info prevents renaming\";\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase true:\n\t\t\t\tswitch (this.canMangleUse) {\n\t\t\t\t\tcase undefined:\n\t\t\t\t\t\treturn \"missing usage info prevents renaming\";\n\t\t\t\t\tcase false:\n\t\t\t\t\t\treturn \"usage prevents renaming\";\n\t\t\t\t\tcase true:\n\t\t\t\t\t\treturn \"could be renamed\";\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase false:\n\t\t\t\tswitch (this.canMangleUse) {\n\t\t\t\t\tcase undefined:\n\t\t\t\t\t\treturn \"provision prevents renaming (no use info)\";\n\t\t\t\t\tcase false:\n\t\t\t\t\t\treturn \"usage and provision prevents renaming\";\n\t\t\t\t\tcase true:\n\t\t\t\t\t\treturn \"provision prevents renaming\";\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\tthrow new Error(\n\t\t\t`Unexpected flags for getRenameInfo ${this.canMangleProvide} ${this.canMangleUse}`\n\t\t);\n\t}\n}\n\nmodule.exports = ExportsInfo;\nmodule.exports.ExportInfo = ExportInfo;\nmodule.exports.UsageState = UsageState;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}