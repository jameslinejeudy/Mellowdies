{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst identifierUtils = require(\"./util/identifier\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").StatsOptions} StatsOptions */\n/** @typedef {import(\"./Compilation\").CreateStatsOptionsContext} CreateStatsOptionsContext */\n/** @typedef {import(\"./Compilation\").NormalizedStatsOptions} NormalizedStatsOptions */\n/** @typedef {import(\"./Stats\")} Stats */\n/** @typedef {import(\"./stats/DefaultStatsFactoryPlugin\").KnownStatsCompilation} KnownStatsCompilation */\n/** @typedef {import(\"./stats/DefaultStatsFactoryPlugin\").StatsCompilation} StatsCompilation */\n/** @typedef {import(\"./stats/DefaultStatsFactoryPlugin\").StatsError} StatsError */\n\n/**\n * @param {string} str string\n * @param {string} prefix pref\n * @returns {string} indent\n */\nconst indent = (str, prefix) => {\n  const rem = str.replace(/\\n([^\\n])/g, `\\n${prefix}$1`);\n  return prefix + rem;\n};\n\n/** @typedef {{ version: boolean, hash: boolean, errorsCount: boolean, warningsCount: boolean, errors: boolean, warnings: boolean, children: NormalizedStatsOptions[] }} ChildOptions */\n\nclass MultiStats {\n  /**\n   * @param {Stats[]} stats the child stats\n   */\n  constructor(stats) {\n    this.stats = stats;\n  }\n  get hash() {\n    return this.stats.map(stat => stat.hash).join(\"\");\n  }\n\n  /**\n   * @returns {boolean} true if a child compilation encountered an error\n   */\n  hasErrors() {\n    return this.stats.some(stat => stat.hasErrors());\n  }\n\n  /**\n   * @returns {boolean} true if a child compilation had a warning\n   */\n  hasWarnings() {\n    return this.stats.some(stat => stat.hasWarnings());\n  }\n\n  /**\n   * @param {string | boolean | StatsOptions | undefined} options stats options\n   * @param {CreateStatsOptionsContext} context context\n   * @returns {ChildOptions} context context\n   */\n  _createChildOptions(options, context) {\n    const getCreateStatsOptions = () => {\n      if (!options) {\n        options = {};\n      }\n      const {\n        children: childrenOptions = undefined,\n        ...baseOptions\n      } = typeof options === \"string\" ? {\n        preset: options\n      } : (/** @type {StatsOptions} */options);\n      return {\n        childrenOptions,\n        baseOptions\n      };\n    };\n    const children = this.stats.map((stat, idx) => {\n      if (typeof options === \"boolean\") {\n        return stat.compilation.createStatsOptions(options, context);\n      }\n      const {\n        childrenOptions,\n        baseOptions\n      } = getCreateStatsOptions();\n      const childOptions = Array.isArray(childrenOptions) ? childrenOptions[idx] : childrenOptions;\n      return stat.compilation.createStatsOptions({\n        ...baseOptions,\n        ...(typeof childOptions === \"string\" ? {\n          preset: childOptions\n        } : childOptions && typeof childOptions === \"object\" ? childOptions : undefined)\n      }, context);\n    });\n    return {\n      version: children.every(o => o.version),\n      hash: children.every(o => o.hash),\n      errorsCount: children.every(o => o.errorsCount),\n      warningsCount: children.every(o => o.warningsCount),\n      errors: children.every(o => o.errors),\n      warnings: children.every(o => o.warnings),\n      children\n    };\n  }\n\n  /**\n   * @param {(string | boolean | StatsOptions)=} options stats options\n   * @returns {StatsCompilation} json output\n   */\n  toJson(options) {\n    const childOptions = this._createChildOptions(options, {\n      forToString: false\n    });\n    /** @type {KnownStatsCompilation} */\n    const obj = {};\n    obj.children = this.stats.map((stat, idx) => {\n      const obj = stat.toJson(childOptions.children[idx]);\n      const compilationName = stat.compilation.name;\n      const name = compilationName && identifierUtils.makePathsRelative(stat.compilation.compiler.context, compilationName, stat.compilation.compiler.root);\n      obj.name = name;\n      return obj;\n    });\n    if (childOptions.version) {\n      obj.version = obj.children[0].version;\n    }\n    if (childOptions.hash) {\n      obj.hash = obj.children.map(j => j.hash).join(\"\");\n    }\n    /**\n     * @param {StatsCompilation} j stats error\n     * @param {StatsError} obj Stats error\n     * @returns {TODO} result\n     */\n    const mapError = (j, obj) => ({\n      ...obj,\n      compilerPath: obj.compilerPath ? `${j.name}.${obj.compilerPath}` : j.name\n    });\n    if (childOptions.errors) {\n      obj.errors = [];\n      for (const j of obj.children) {\n        const errors = /** @type {NonNullable<KnownStatsCompilation[\"errors\"]>} */\n        j.errors;\n        for (const i of errors) {\n          obj.errors.push(mapError(j, i));\n        }\n      }\n    }\n    if (childOptions.warnings) {\n      obj.warnings = [];\n      for (const j of obj.children) {\n        const warnings = /** @type {NonNullable<KnownStatsCompilation[\"warnings\"]>} */\n        j.warnings;\n        for (const i of warnings) {\n          obj.warnings.push(mapError(j, i));\n        }\n      }\n    }\n    if (childOptions.errorsCount) {\n      obj.errorsCount = 0;\n      for (const j of obj.children) {\n        obj.errorsCount += /** @type {number} */j.errorsCount;\n      }\n    }\n    if (childOptions.warningsCount) {\n      obj.warningsCount = 0;\n      for (const j of obj.children) {\n        obj.warningsCount += /** @type {number} */j.warningsCount;\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @param {(string | boolean | StatsOptions)=} options stats options\n   * @returns {string} string output\n   */\n  toString(options) {\n    const childOptions = this._createChildOptions(options, {\n      forToString: true\n    });\n    const results = this.stats.map((stat, idx) => {\n      const str = stat.toString(childOptions.children[idx]);\n      const compilationName = stat.compilation.name;\n      const name = compilationName && identifierUtils.makePathsRelative(stat.compilation.compiler.context, compilationName, stat.compilation.compiler.root).replace(/\\|/g, \" \");\n      if (!str) return str;\n      return name ? `${name}:\\n${indent(str, \"  \")}` : str;\n    });\n    return results.filter(Boolean).join(\"\\n\\n\");\n  }\n}\nmodule.exports = MultiStats;","map":{"version":3,"names":["identifierUtils","require","indent","str","prefix","rem","replace","MultiStats","constructor","stats","hash","map","stat","join","hasErrors","some","hasWarnings","_createChildOptions","options","context","getCreateStatsOptions","children","childrenOptions","undefined","baseOptions","preset","idx","compilation","createStatsOptions","childOptions","Array","isArray","version","every","o","errorsCount","warningsCount","errors","warnings","toJson","forToString","obj","compilationName","name","makePathsRelative","compiler","root","j","mapError","compilerPath","i","push","toString","results","filter","Boolean","module","exports"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/node_modules/webpack/lib/MultiStats.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst identifierUtils = require(\"./util/identifier\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").StatsOptions} StatsOptions */\n/** @typedef {import(\"./Compilation\").CreateStatsOptionsContext} CreateStatsOptionsContext */\n/** @typedef {import(\"./Compilation\").NormalizedStatsOptions} NormalizedStatsOptions */\n/** @typedef {import(\"./Stats\")} Stats */\n/** @typedef {import(\"./stats/DefaultStatsFactoryPlugin\").KnownStatsCompilation} KnownStatsCompilation */\n/** @typedef {import(\"./stats/DefaultStatsFactoryPlugin\").StatsCompilation} StatsCompilation */\n/** @typedef {import(\"./stats/DefaultStatsFactoryPlugin\").StatsError} StatsError */\n\n/**\n * @param {string} str string\n * @param {string} prefix pref\n * @returns {string} indent\n */\nconst indent = (str, prefix) => {\n\tconst rem = str.replace(/\\n([^\\n])/g, `\\n${prefix}$1`);\n\treturn prefix + rem;\n};\n\n/** @typedef {{ version: boolean, hash: boolean, errorsCount: boolean, warningsCount: boolean, errors: boolean, warnings: boolean, children: NormalizedStatsOptions[] }} ChildOptions */\n\nclass MultiStats {\n\t/**\n\t * @param {Stats[]} stats the child stats\n\t */\n\tconstructor(stats) {\n\t\tthis.stats = stats;\n\t}\n\n\tget hash() {\n\t\treturn this.stats.map(stat => stat.hash).join(\"\");\n\t}\n\n\t/**\n\t * @returns {boolean} true if a child compilation encountered an error\n\t */\n\thasErrors() {\n\t\treturn this.stats.some(stat => stat.hasErrors());\n\t}\n\n\t/**\n\t * @returns {boolean} true if a child compilation had a warning\n\t */\n\thasWarnings() {\n\t\treturn this.stats.some(stat => stat.hasWarnings());\n\t}\n\n\t/**\n\t * @param {string | boolean | StatsOptions | undefined} options stats options\n\t * @param {CreateStatsOptionsContext} context context\n\t * @returns {ChildOptions} context context\n\t */\n\t_createChildOptions(options, context) {\n\t\tconst getCreateStatsOptions = () => {\n\t\t\tif (!options) {\n\t\t\t\toptions = {};\n\t\t\t}\n\n\t\t\tconst { children: childrenOptions = undefined, ...baseOptions } =\n\t\t\t\ttypeof options === \"string\"\n\t\t\t\t\t? { preset: options }\n\t\t\t\t\t: /** @type {StatsOptions} */ (options);\n\n\t\t\treturn { childrenOptions, baseOptions };\n\t\t};\n\n\t\tconst children = this.stats.map((stat, idx) => {\n\t\t\tif (typeof options === \"boolean\") {\n\t\t\t\treturn stat.compilation.createStatsOptions(options, context);\n\t\t\t}\n\t\t\tconst { childrenOptions, baseOptions } = getCreateStatsOptions();\n\t\t\tconst childOptions = Array.isArray(childrenOptions)\n\t\t\t\t? childrenOptions[idx]\n\t\t\t\t: childrenOptions;\n\t\t\treturn stat.compilation.createStatsOptions(\n\t\t\t\t{\n\t\t\t\t\t...baseOptions,\n\t\t\t\t\t...(typeof childOptions === \"string\"\n\t\t\t\t\t\t? { preset: childOptions }\n\t\t\t\t\t\t: childOptions && typeof childOptions === \"object\"\n\t\t\t\t\t\t\t? childOptions\n\t\t\t\t\t\t\t: undefined)\n\t\t\t\t},\n\t\t\t\tcontext\n\t\t\t);\n\t\t});\n\t\treturn {\n\t\t\tversion: children.every(o => o.version),\n\t\t\thash: children.every(o => o.hash),\n\t\t\terrorsCount: children.every(o => o.errorsCount),\n\t\t\twarningsCount: children.every(o => o.warningsCount),\n\t\t\terrors: children.every(o => o.errors),\n\t\t\twarnings: children.every(o => o.warnings),\n\t\t\tchildren\n\t\t};\n\t}\n\n\t/**\n\t * @param {(string | boolean | StatsOptions)=} options stats options\n\t * @returns {StatsCompilation} json output\n\t */\n\ttoJson(options) {\n\t\tconst childOptions = this._createChildOptions(options, {\n\t\t\tforToString: false\n\t\t});\n\t\t/** @type {KnownStatsCompilation} */\n\t\tconst obj = {};\n\t\tobj.children = this.stats.map((stat, idx) => {\n\t\t\tconst obj = stat.toJson(childOptions.children[idx]);\n\t\t\tconst compilationName = stat.compilation.name;\n\t\t\tconst name =\n\t\t\t\tcompilationName &&\n\t\t\t\tidentifierUtils.makePathsRelative(\n\t\t\t\t\tstat.compilation.compiler.context,\n\t\t\t\t\tcompilationName,\n\t\t\t\t\tstat.compilation.compiler.root\n\t\t\t\t);\n\t\t\tobj.name = name;\n\t\t\treturn obj;\n\t\t});\n\t\tif (childOptions.version) {\n\t\t\tobj.version = obj.children[0].version;\n\t\t}\n\t\tif (childOptions.hash) {\n\t\t\tobj.hash = obj.children.map(j => j.hash).join(\"\");\n\t\t}\n\t\t/**\n\t\t * @param {StatsCompilation} j stats error\n\t\t * @param {StatsError} obj Stats error\n\t\t * @returns {TODO} result\n\t\t */\n\t\tconst mapError = (j, obj) => ({\n\t\t\t...obj,\n\t\t\tcompilerPath: obj.compilerPath ? `${j.name}.${obj.compilerPath}` : j.name\n\t\t});\n\t\tif (childOptions.errors) {\n\t\t\tobj.errors = [];\n\t\t\tfor (const j of obj.children) {\n\t\t\t\tconst errors =\n\t\t\t\t\t/** @type {NonNullable<KnownStatsCompilation[\"errors\"]>} */\n\t\t\t\t\t(j.errors);\n\t\t\t\tfor (const i of errors) {\n\t\t\t\t\tobj.errors.push(mapError(j, i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (childOptions.warnings) {\n\t\t\tobj.warnings = [];\n\t\t\tfor (const j of obj.children) {\n\t\t\t\tconst warnings =\n\t\t\t\t\t/** @type {NonNullable<KnownStatsCompilation[\"warnings\"]>} */\n\t\t\t\t\t(j.warnings);\n\t\t\t\tfor (const i of warnings) {\n\t\t\t\t\tobj.warnings.push(mapError(j, i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (childOptions.errorsCount) {\n\t\t\tobj.errorsCount = 0;\n\t\t\tfor (const j of obj.children) {\n\t\t\t\tobj.errorsCount += /** @type {number} */ (j.errorsCount);\n\t\t\t}\n\t\t}\n\t\tif (childOptions.warningsCount) {\n\t\t\tobj.warningsCount = 0;\n\t\t\tfor (const j of obj.children) {\n\t\t\t\tobj.warningsCount += /** @type {number} */ (j.warningsCount);\n\t\t\t}\n\t\t}\n\t\treturn obj;\n\t}\n\n\t/**\n\t * @param {(string | boolean | StatsOptions)=} options stats options\n\t * @returns {string} string output\n\t */\n\ttoString(options) {\n\t\tconst childOptions = this._createChildOptions(options, {\n\t\t\tforToString: true\n\t\t});\n\t\tconst results = this.stats.map((stat, idx) => {\n\t\t\tconst str = stat.toString(childOptions.children[idx]);\n\t\t\tconst compilationName = stat.compilation.name;\n\t\t\tconst name =\n\t\t\t\tcompilationName &&\n\t\t\t\tidentifierUtils\n\t\t\t\t\t.makePathsRelative(\n\t\t\t\t\t\tstat.compilation.compiler.context,\n\t\t\t\t\t\tcompilationName,\n\t\t\t\t\t\tstat.compilation.compiler.root\n\t\t\t\t\t)\n\t\t\t\t\t.replace(/\\|/g, \" \");\n\t\t\tif (!str) return str;\n\t\t\treturn name ? `${name}:\\n${indent(str, \"  \")}` : str;\n\t\t});\n\t\treturn results.filter(Boolean).join(\"\\n\\n\");\n\t}\n}\n\nmodule.exports = MultiStats;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}