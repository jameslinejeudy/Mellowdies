{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst {\n  pathToFileURL\n} = require(\"url\");\nconst ModuleDependencyWarning = require(\"../ModuleDependencyWarning\");\nconst {\n  JAVASCRIPT_MODULE_TYPE_AUTO,\n  JAVASCRIPT_MODULE_TYPE_ESM\n} = require(\"../ModuleTypeConstants\");\nconst Template = require(\"../Template\");\nconst BasicEvaluatedExpression = require(\"../javascript/BasicEvaluatedExpression\");\nconst {\n  evaluateToIdentifier,\n  toConstantDependency,\n  evaluateToString,\n  evaluateToNumber\n} = require(\"../javascript/JavascriptParserHelpers\");\nconst memoize = require(\"../util/memoize\");\nconst propertyAccess = require(\"../util/propertyAccess\");\nconst ConstDependency = require(\"./ConstDependency\");\n\n/** @typedef {import(\"estree\").MemberExpression} MemberExpression */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n\nconst getCriticalDependencyWarning = memoize(() => require(\"./CriticalDependencyWarning\"));\nconst PLUGIN_NAME = \"ImportMetaPlugin\";\nclass ImportMetaPlugin {\n  /**\n   * @param {Compiler} compiler compiler\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation, {\n      normalModuleFactory\n    }) => {\n      /**\n       * @param {NormalModule} module module\n       * @returns {string} file url\n       */\n      const getUrl = module => pathToFileURL(module.resource).toString();\n      /**\n       * @param {Parser} parser parser parser\n       * @param {JavascriptParserOptions} parserOptions parserOptions\n       * @returns {void}\n       */\n      const parserHandler = (parser, {\n        importMeta\n      }) => {\n        if (importMeta === false) {\n          const {\n            importMetaName\n          } = compilation.outputOptions;\n          if (importMetaName === \"import.meta\") return;\n          parser.hooks.expression.for(\"import.meta\").tap(PLUGIN_NAME, metaProperty => {\n            const dep = new ConstDependency(/** @type {string} */importMetaName, /** @type {Range} */metaProperty.range);\n            dep.loc = /** @type {DependencyLocation} */metaProperty.loc;\n            parser.state.module.addPresentationalDependency(dep);\n            return true;\n          });\n          return;\n        }\n\n        // import.meta direct\n        const webpackVersion = Number.parseInt(require(\"../../package.json\").version, 10);\n        const importMetaUrl = () => JSON.stringify(getUrl(parser.state.module));\n        const importMetaWebpackVersion = () => JSON.stringify(webpackVersion);\n        /**\n         * @param {string[]} members members\n         * @returns {string} error message\n         */\n        const importMetaUnknownProperty = members => `${Template.toNormalComment(`unsupported import.meta.${members.join(\".\")}`)} undefined${propertyAccess(members, 1)}`;\n        parser.hooks.typeof.for(\"import.meta\").tap(PLUGIN_NAME, toConstantDependency(parser, JSON.stringify(\"object\")));\n        parser.hooks.expression.for(\"import.meta\").tap(PLUGIN_NAME, metaProperty => {\n          const referencedPropertiesInDestructuring = parser.destructuringAssignmentPropertiesFor(metaProperty);\n          if (!referencedPropertiesInDestructuring) {\n            const CriticalDependencyWarning = getCriticalDependencyWarning();\n            parser.state.module.addWarning(new ModuleDependencyWarning(parser.state.module, new CriticalDependencyWarning(\"Accessing import.meta directly is unsupported (only property access or destructuring is supported)\"), /** @type {DependencyLocation} */metaProperty.loc));\n            const dep = new ConstDependency(`${parser.isAsiPosition(/** @type {Range} */metaProperty.range[0]) ? \";\" : \"\"}({})`, /** @type {Range} */metaProperty.range);\n            dep.loc = /** @type {DependencyLocation} */metaProperty.loc;\n            parser.state.module.addPresentationalDependency(dep);\n            return true;\n          }\n          let str = \"\";\n          for (const {\n            id: prop\n          } of referencedPropertiesInDestructuring) {\n            switch (prop) {\n              case \"url\":\n                str += `url: ${importMetaUrl()},`;\n                break;\n              case \"webpack\":\n                str += `webpack: ${importMetaWebpackVersion()},`;\n                break;\n              default:\n                str += `[${JSON.stringify(prop)}]: ${importMetaUnknownProperty([prop])},`;\n                break;\n            }\n          }\n          const dep = new ConstDependency(`({${str}})`, /** @type {Range} */metaProperty.range);\n          dep.loc = /** @type {DependencyLocation} */metaProperty.loc;\n          parser.state.module.addPresentationalDependency(dep);\n          return true;\n        });\n        parser.hooks.evaluateTypeof.for(\"import.meta\").tap(PLUGIN_NAME, evaluateToString(\"object\"));\n        parser.hooks.evaluateIdentifier.for(\"import.meta\").tap(PLUGIN_NAME, evaluateToIdentifier(\"import.meta\", \"import.meta\", () => [], true));\n\n        // import.meta.url\n        parser.hooks.typeof.for(\"import.meta.url\").tap(PLUGIN_NAME, toConstantDependency(parser, JSON.stringify(\"string\")));\n        parser.hooks.expression.for(\"import.meta.url\").tap(PLUGIN_NAME, expr => {\n          const dep = new ConstDependency(importMetaUrl(), /** @type {Range} */expr.range);\n          dep.loc = /** @type {DependencyLocation} */expr.loc;\n          parser.state.module.addPresentationalDependency(dep);\n          return true;\n        });\n        parser.hooks.evaluateTypeof.for(\"import.meta.url\").tap(PLUGIN_NAME, evaluateToString(\"string\"));\n        parser.hooks.evaluateIdentifier.for(\"import.meta.url\").tap(PLUGIN_NAME, expr => new BasicEvaluatedExpression().setString(getUrl(parser.state.module)).setRange(/** @type {Range} */expr.range));\n\n        // import.meta.webpack\n        parser.hooks.typeof.for(\"import.meta.webpack\").tap(PLUGIN_NAME, toConstantDependency(parser, JSON.stringify(\"number\")));\n        parser.hooks.expression.for(\"import.meta.webpack\").tap(PLUGIN_NAME, toConstantDependency(parser, importMetaWebpackVersion()));\n        parser.hooks.evaluateTypeof.for(\"import.meta.webpack\").tap(PLUGIN_NAME, evaluateToString(\"number\"));\n        parser.hooks.evaluateIdentifier.for(\"import.meta.webpack\").tap(PLUGIN_NAME, evaluateToNumber(webpackVersion));\n\n        // Unknown properties\n        parser.hooks.unhandledExpressionMemberChain.for(\"import.meta\").tap(PLUGIN_NAME, (expr, members) => {\n          const dep = new ConstDependency(importMetaUnknownProperty(members), /** @type {Range} */expr.range);\n          dep.loc = /** @type {DependencyLocation} */expr.loc;\n          parser.state.module.addPresentationalDependency(dep);\n          return true;\n        });\n        parser.hooks.evaluate.for(\"MemberExpression\").tap(PLUGIN_NAME, expression => {\n          const expr = /** @type {MemberExpression} */expression;\n          if (expr.object.type === \"MetaProperty\" && expr.object.meta.name === \"import\" && expr.object.property.name === \"meta\" && expr.property.type === (expr.computed ? \"Literal\" : \"Identifier\")) {\n            return new BasicEvaluatedExpression().setUndefined().setRange(/** @type {Range} */expr.range);\n          }\n        });\n      };\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_AUTO).tap(PLUGIN_NAME, parserHandler);\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_ESM).tap(PLUGIN_NAME, parserHandler);\n    });\n  }\n}\nmodule.exports = ImportMetaPlugin;","map":{"version":3,"names":["pathToFileURL","require","ModuleDependencyWarning","JAVASCRIPT_MODULE_TYPE_AUTO","JAVASCRIPT_MODULE_TYPE_ESM","Template","BasicEvaluatedExpression","evaluateToIdentifier","toConstantDependency","evaluateToString","evaluateToNumber","memoize","propertyAccess","ConstDependency","getCriticalDependencyWarning","PLUGIN_NAME","ImportMetaPlugin","apply","compiler","hooks","compilation","tap","normalModuleFactory","getUrl","module","resource","toString","parserHandler","parser","importMeta","importMetaName","outputOptions","expression","for","metaProperty","dep","range","loc","state","addPresentationalDependency","webpackVersion","Number","parseInt","version","importMetaUrl","JSON","stringify","importMetaWebpackVersion","importMetaUnknownProperty","members","toNormalComment","join","typeof","referencedPropertiesInDestructuring","destructuringAssignmentPropertiesFor","CriticalDependencyWarning","addWarning","isAsiPosition","str","id","prop","evaluateTypeof","evaluateIdentifier","expr","setString","setRange","unhandledExpressionMemberChain","evaluate","object","type","meta","name","property","computed","setUndefined","exports"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/node_modules/webpack/lib/dependencies/ImportMetaPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst { pathToFileURL } = require(\"url\");\nconst ModuleDependencyWarning = require(\"../ModuleDependencyWarning\");\nconst {\n\tJAVASCRIPT_MODULE_TYPE_AUTO,\n\tJAVASCRIPT_MODULE_TYPE_ESM\n} = require(\"../ModuleTypeConstants\");\nconst Template = require(\"../Template\");\nconst BasicEvaluatedExpression = require(\"../javascript/BasicEvaluatedExpression\");\nconst {\n\tevaluateToIdentifier,\n\ttoConstantDependency,\n\tevaluateToString,\n\tevaluateToNumber\n} = require(\"../javascript/JavascriptParserHelpers\");\nconst memoize = require(\"../util/memoize\");\nconst propertyAccess = require(\"../util/propertyAccess\");\nconst ConstDependency = require(\"./ConstDependency\");\n\n/** @typedef {import(\"estree\").MemberExpression} MemberExpression */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n\nconst getCriticalDependencyWarning = memoize(() =>\n\trequire(\"./CriticalDependencyWarning\")\n);\n\nconst PLUGIN_NAME = \"ImportMetaPlugin\";\n\nclass ImportMetaPlugin {\n\t/**\n\t * @param {Compiler} compiler compiler\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\tPLUGIN_NAME,\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\t/**\n\t\t\t\t * @param {NormalModule} module module\n\t\t\t\t * @returns {string} file url\n\t\t\t\t */\n\t\t\t\tconst getUrl = module => pathToFileURL(module.resource).toString();\n\t\t\t\t/**\n\t\t\t\t * @param {Parser} parser parser parser\n\t\t\t\t * @param {JavascriptParserOptions} parserOptions parserOptions\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tconst parserHandler = (parser, { importMeta }) => {\n\t\t\t\t\tif (importMeta === false) {\n\t\t\t\t\t\tconst { importMetaName } = compilation.outputOptions;\n\t\t\t\t\t\tif (importMetaName === \"import.meta\") return;\n\n\t\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t\t.tap(PLUGIN_NAME, metaProperty => {\n\t\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\t\t/** @type {string} */ (importMetaName),\n\t\t\t\t\t\t\t\t\t/** @type {Range} */ (metaProperty.range)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (metaProperty.loc);\n\t\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// import.meta direct\n\t\t\t\t\tconst webpackVersion = Number.parseInt(\n\t\t\t\t\t\trequire(\"../../package.json\").version,\n\t\t\t\t\t\t10\n\t\t\t\t\t);\n\t\t\t\t\tconst importMetaUrl = () =>\n\t\t\t\t\t\tJSON.stringify(getUrl(parser.state.module));\n\t\t\t\t\tconst importMetaWebpackVersion = () => JSON.stringify(webpackVersion);\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {string[]} members members\n\t\t\t\t\t * @returns {string} error message\n\t\t\t\t\t */\n\t\t\t\t\tconst importMetaUnknownProperty = members =>\n\t\t\t\t\t\t`${Template.toNormalComment(\n\t\t\t\t\t\t\t`unsupported import.meta.${members.join(\".\")}`\n\t\t\t\t\t\t)} undefined${propertyAccess(members, 1)}`;\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"object\"))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, metaProperty => {\n\t\t\t\t\t\t\tconst referencedPropertiesInDestructuring =\n\t\t\t\t\t\t\t\tparser.destructuringAssignmentPropertiesFor(metaProperty);\n\t\t\t\t\t\t\tif (!referencedPropertiesInDestructuring) {\n\t\t\t\t\t\t\t\tconst CriticalDependencyWarning =\n\t\t\t\t\t\t\t\t\tgetCriticalDependencyWarning();\n\t\t\t\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\t\t\t\tnew ModuleDependencyWarning(\n\t\t\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t\t\tnew CriticalDependencyWarning(\n\t\t\t\t\t\t\t\t\t\t\t\"Accessing import.meta directly is unsupported (only property access or destructuring is supported)\"\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t/** @type {DependencyLocation} */ (metaProperty.loc)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\t\t`${\n\t\t\t\t\t\t\t\t\t\tparser.isAsiPosition(\n\t\t\t\t\t\t\t\t\t\t\t/** @type {Range} */ (metaProperty.range)[0]\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t? \";\"\n\t\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t\t}({})`,\n\t\t\t\t\t\t\t\t\t/** @type {Range} */ (metaProperty.range)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (metaProperty.loc);\n\t\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet str = \"\";\n\t\t\t\t\t\t\tfor (const { id: prop } of referencedPropertiesInDestructuring) {\n\t\t\t\t\t\t\t\tswitch (prop) {\n\t\t\t\t\t\t\t\t\tcase \"url\":\n\t\t\t\t\t\t\t\t\t\tstr += `url: ${importMetaUrl()},`;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase \"webpack\":\n\t\t\t\t\t\t\t\t\t\tstr += `webpack: ${importMetaWebpackVersion()},`;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tstr += `[${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\tprop\n\t\t\t\t\t\t\t\t\t\t)}]: ${importMetaUnknownProperty([prop])},`;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\t`({${str}})`,\n\t\t\t\t\t\t\t\t/** @type {Range} */ (metaProperty.range)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (metaProperty.loc);\n\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, evaluateToString(\"object\"));\n\t\t\t\t\tparser.hooks.evaluateIdentifier.for(\"import.meta\").tap(\n\t\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t\tevaluateToIdentifier(\"import.meta\", \"import.meta\", () => [], true)\n\t\t\t\t\t);\n\n\t\t\t\t\t// import.meta.url\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"import.meta.url\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"string\"))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"import.meta.url\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, expr => {\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\timportMetaUrl(),\n\t\t\t\t\t\t\t\t/** @type {Range} */ (expr.range)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (expr.loc);\n\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"import.meta.url\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, evaluateToString(\"string\"));\n\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t.for(\"import.meta.url\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, expr =>\n\t\t\t\t\t\t\tnew BasicEvaluatedExpression()\n\t\t\t\t\t\t\t\t.setString(getUrl(parser.state.module))\n\t\t\t\t\t\t\t\t.setRange(/** @type {Range} */ (expr.range))\n\t\t\t\t\t\t);\n\n\t\t\t\t\t// import.meta.webpack\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"import.meta.webpack\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"number\"))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"import.meta.webpack\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t\t\ttoConstantDependency(parser, importMetaWebpackVersion())\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"import.meta.webpack\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, evaluateToString(\"number\"));\n\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t.for(\"import.meta.webpack\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, evaluateToNumber(webpackVersion));\n\n\t\t\t\t\t// Unknown properties\n\t\t\t\t\tparser.hooks.unhandledExpressionMemberChain\n\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, (expr, members) => {\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\timportMetaUnknownProperty(members),\n\t\t\t\t\t\t\t\t/** @type {Range} */ (expr.range)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (expr.loc);\n\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.evaluate\n\t\t\t\t\t\t.for(\"MemberExpression\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, expression => {\n\t\t\t\t\t\t\tconst expr = /** @type {MemberExpression} */ (expression);\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\texpr.object.type === \"MetaProperty\" &&\n\t\t\t\t\t\t\t\texpr.object.meta.name === \"import\" &&\n\t\t\t\t\t\t\t\texpr.object.property.name === \"meta\" &&\n\t\t\t\t\t\t\t\texpr.property.type ===\n\t\t\t\t\t\t\t\t\t(expr.computed ? \"Literal\" : \"Identifier\")\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t\t\t\t.setUndefined()\n\t\t\t\t\t\t\t\t\t.setRange(/** @type {Range} */ (expr.range));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_AUTO)\n\t\t\t\t\t.tap(PLUGIN_NAME, parserHandler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_ESM)\n\t\t\t\t\t.tap(PLUGIN_NAME, parserHandler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ImportMetaPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAM;EAAEA;AAAc,CAAC,GAAGC,OAAO,CAAC,KAAK,CAAC;AACxC,MAAMC,uBAAuB,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AACrE,MAAM;EACLE,2BAA2B;EAC3BC;AACD,CAAC,GAAGH,OAAO,CAAC,wBAAwB,CAAC;AACrC,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,aAAa,CAAC;AACvC,MAAMK,wBAAwB,GAAGL,OAAO,CAAC,wCAAwC,CAAC;AAClF,MAAM;EACLM,oBAAoB;EACpBC,oBAAoB;EACpBC,gBAAgB;EAChBC;AACD,CAAC,GAAGT,OAAO,CAAC,uCAAuC,CAAC;AACpD,MAAMU,OAAO,GAAGV,OAAO,CAAC,iBAAiB,CAAC;AAC1C,MAAMW,cAAc,GAAGX,OAAO,CAAC,wBAAwB,CAAC;AACxD,MAAMY,eAAe,GAAGZ,OAAO,CAAC,mBAAmB,CAAC;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMa,4BAA4B,GAAGH,OAAO,CAAC,MAC5CV,OAAO,CAAC,6BAA6B,CACtC,CAAC;AAED,MAAMc,WAAW,GAAG,kBAAkB;AAEtC,MAAMC,gBAAgB,CAAC;EACtB;AACD;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7BN,WAAW,EACX,CAACK,WAAW,EAAE;MAAEE;IAAoB,CAAC,KAAK;MACzC;AACJ;AACA;AACA;MACI,MAAMC,MAAM,GAAGC,MAAM,IAAIxB,aAAa,CAACwB,MAAM,CAACC,QAAQ,CAAC,CAACC,QAAQ,CAAC,CAAC;MAClE;AACJ;AACA;AACA;AACA;MACI,MAAMC,aAAa,GAAGA,CAACC,MAAM,EAAE;QAAEC;MAAW,CAAC,KAAK;QACjD,IAAIA,UAAU,KAAK,KAAK,EAAE;UACzB,MAAM;YAAEC;UAAe,CAAC,GAAGV,WAAW,CAACW,aAAa;UACpD,IAAID,cAAc,KAAK,aAAa,EAAE;UAEtCF,MAAM,CAACT,KAAK,CAACa,UAAU,CACrBC,GAAG,CAAC,aAAa,CAAC,CAClBZ,GAAG,CAACN,WAAW,EAAEmB,YAAY,IAAI;YACjC,MAAMC,GAAG,GAAG,IAAItB,eAAe,CAC9B,qBAAuBiB,cAAc,EACrC,oBAAsBI,YAAY,CAACE,KACpC,CAAC;YACDD,GAAG,CAACE,GAAG,GAAG,iCAAmCH,YAAY,CAACG,GAAI;YAC9DT,MAAM,CAACU,KAAK,CAACd,MAAM,CAACe,2BAA2B,CAACJ,GAAG,CAAC;YACpD,OAAO,IAAI;UACZ,CAAC,CAAC;UACH;QACD;;QAEA;QACA,MAAMK,cAAc,GAAGC,MAAM,CAACC,QAAQ,CACrCzC,OAAO,CAAC,oBAAoB,CAAC,CAAC0C,OAAO,EACrC,EACD,CAAC;QACD,MAAMC,aAAa,GAAGA,CAAA,KACrBC,IAAI,CAACC,SAAS,CAACvB,MAAM,CAACK,MAAM,CAACU,KAAK,CAACd,MAAM,CAAC,CAAC;QAC5C,MAAMuB,wBAAwB,GAAGA,CAAA,KAAMF,IAAI,CAACC,SAAS,CAACN,cAAc,CAAC;QACrE;AACL;AACA;AACA;QACK,MAAMQ,yBAAyB,GAAGC,OAAO,IACxC,GAAG5C,QAAQ,CAAC6C,eAAe,CAC1B,2BAA2BD,OAAO,CAACE,IAAI,CAAC,GAAG,CAAC,EAC7C,CAAC,aAAavC,cAAc,CAACqC,OAAO,EAAE,CAAC,CAAC,EAAE;QAC3CrB,MAAM,CAACT,KAAK,CAACiC,MAAM,CACjBnB,GAAG,CAAC,aAAa,CAAC,CAClBZ,GAAG,CACHN,WAAW,EACXP,oBAAoB,CAACoB,MAAM,EAAEiB,IAAI,CAACC,SAAS,CAAC,QAAQ,CAAC,CACtD,CAAC;QACFlB,MAAM,CAACT,KAAK,CAACa,UAAU,CACrBC,GAAG,CAAC,aAAa,CAAC,CAClBZ,GAAG,CAACN,WAAW,EAAEmB,YAAY,IAAI;UACjC,MAAMmB,mCAAmC,GACxCzB,MAAM,CAAC0B,oCAAoC,CAACpB,YAAY,CAAC;UAC1D,IAAI,CAACmB,mCAAmC,EAAE;YACzC,MAAME,yBAAyB,GAC9BzC,4BAA4B,CAAC,CAAC;YAC/Bc,MAAM,CAACU,KAAK,CAACd,MAAM,CAACgC,UAAU,CAC7B,IAAItD,uBAAuB,CAC1B0B,MAAM,CAACU,KAAK,CAACd,MAAM,EACnB,IAAI+B,yBAAyB,CAC5B,oGACD,CAAC,EACD,iCAAmCrB,YAAY,CAACG,GACjD,CACD,CAAC;YACD,MAAMF,GAAG,GAAG,IAAItB,eAAe,CAC9B,GACCe,MAAM,CAAC6B,aAAa,CACnB,oBAAsBvB,YAAY,CAACE,KAAK,CAAE,CAAC,CAC5C,CAAC,GACE,GAAG,GACH,EAAE,MACA,EACN,oBAAsBF,YAAY,CAACE,KACpC,CAAC;YACDD,GAAG,CAACE,GAAG,GAAG,iCAAmCH,YAAY,CAACG,GAAI;YAC9DT,MAAM,CAACU,KAAK,CAACd,MAAM,CAACe,2BAA2B,CAACJ,GAAG,CAAC;YACpD,OAAO,IAAI;UACZ;UAEA,IAAIuB,GAAG,GAAG,EAAE;UACZ,KAAK,MAAM;YAAEC,EAAE,EAAEC;UAAK,CAAC,IAAIP,mCAAmC,EAAE;YAC/D,QAAQO,IAAI;cACX,KAAK,KAAK;gBACTF,GAAG,IAAI,QAAQd,aAAa,CAAC,CAAC,GAAG;gBACjC;cACD,KAAK,SAAS;gBACbc,GAAG,IAAI,YAAYX,wBAAwB,CAAC,CAAC,GAAG;gBAChD;cACD;gBACCW,GAAG,IAAI,IAAIb,IAAI,CAACC,SAAS,CACxBc,IACD,CAAC,MAAMZ,yBAAyB,CAAC,CAACY,IAAI,CAAC,CAAC,GAAG;gBAC3C;YACF;UACD;UACA,MAAMzB,GAAG,GAAG,IAAItB,eAAe,CAC9B,KAAK6C,GAAG,IAAI,EACZ,oBAAsBxB,YAAY,CAACE,KACpC,CAAC;UACDD,GAAG,CAACE,GAAG,GAAG,iCAAmCH,YAAY,CAACG,GAAI;UAC9DT,MAAM,CAACU,KAAK,CAACd,MAAM,CAACe,2BAA2B,CAACJ,GAAG,CAAC;UACpD,OAAO,IAAI;QACZ,CAAC,CAAC;QACHP,MAAM,CAACT,KAAK,CAAC0C,cAAc,CACzB5B,GAAG,CAAC,aAAa,CAAC,CAClBZ,GAAG,CAACN,WAAW,EAAEN,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAC9CmB,MAAM,CAACT,KAAK,CAAC2C,kBAAkB,CAAC7B,GAAG,CAAC,aAAa,CAAC,CAACZ,GAAG,CACrDN,WAAW,EACXR,oBAAoB,CAAC,aAAa,EAAE,aAAa,EAAE,MAAM,EAAE,EAAE,IAAI,CAClE,CAAC;;QAED;QACAqB,MAAM,CAACT,KAAK,CAACiC,MAAM,CACjBnB,GAAG,CAAC,iBAAiB,CAAC,CACtBZ,GAAG,CACHN,WAAW,EACXP,oBAAoB,CAACoB,MAAM,EAAEiB,IAAI,CAACC,SAAS,CAAC,QAAQ,CAAC,CACtD,CAAC;QACFlB,MAAM,CAACT,KAAK,CAACa,UAAU,CACrBC,GAAG,CAAC,iBAAiB,CAAC,CACtBZ,GAAG,CAACN,WAAW,EAAEgD,IAAI,IAAI;UACzB,MAAM5B,GAAG,GAAG,IAAItB,eAAe,CAC9B+B,aAAa,CAAC,CAAC,EACf,oBAAsBmB,IAAI,CAAC3B,KAC5B,CAAC;UACDD,GAAG,CAACE,GAAG,GAAG,iCAAmC0B,IAAI,CAAC1B,GAAI;UACtDT,MAAM,CAACU,KAAK,CAACd,MAAM,CAACe,2BAA2B,CAACJ,GAAG,CAAC;UACpD,OAAO,IAAI;QACZ,CAAC,CAAC;QACHP,MAAM,CAACT,KAAK,CAAC0C,cAAc,CACzB5B,GAAG,CAAC,iBAAiB,CAAC,CACtBZ,GAAG,CAACN,WAAW,EAAEN,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAC9CmB,MAAM,CAACT,KAAK,CAAC2C,kBAAkB,CAC7B7B,GAAG,CAAC,iBAAiB,CAAC,CACtBZ,GAAG,CAACN,WAAW,EAAEgD,IAAI,IACrB,IAAIzD,wBAAwB,CAAC,CAAC,CAC5B0D,SAAS,CAACzC,MAAM,CAACK,MAAM,CAACU,KAAK,CAACd,MAAM,CAAC,CAAC,CACtCyC,QAAQ,CAAC,oBAAsBF,IAAI,CAAC3B,KAAM,CAC7C,CAAC;;QAEF;QACAR,MAAM,CAACT,KAAK,CAACiC,MAAM,CACjBnB,GAAG,CAAC,qBAAqB,CAAC,CAC1BZ,GAAG,CACHN,WAAW,EACXP,oBAAoB,CAACoB,MAAM,EAAEiB,IAAI,CAACC,SAAS,CAAC,QAAQ,CAAC,CACtD,CAAC;QACFlB,MAAM,CAACT,KAAK,CAACa,UAAU,CACrBC,GAAG,CAAC,qBAAqB,CAAC,CAC1BZ,GAAG,CACHN,WAAW,EACXP,oBAAoB,CAACoB,MAAM,EAAEmB,wBAAwB,CAAC,CAAC,CACxD,CAAC;QACFnB,MAAM,CAACT,KAAK,CAAC0C,cAAc,CACzB5B,GAAG,CAAC,qBAAqB,CAAC,CAC1BZ,GAAG,CAACN,WAAW,EAAEN,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QAC9CmB,MAAM,CAACT,KAAK,CAAC2C,kBAAkB,CAC7B7B,GAAG,CAAC,qBAAqB,CAAC,CAC1BZ,GAAG,CAACN,WAAW,EAAEL,gBAAgB,CAAC8B,cAAc,CAAC,CAAC;;QAEpD;QACAZ,MAAM,CAACT,KAAK,CAAC+C,8BAA8B,CACzCjC,GAAG,CAAC,aAAa,CAAC,CAClBZ,GAAG,CAACN,WAAW,EAAE,CAACgD,IAAI,EAAEd,OAAO,KAAK;UACpC,MAAMd,GAAG,GAAG,IAAItB,eAAe,CAC9BmC,yBAAyB,CAACC,OAAO,CAAC,EAClC,oBAAsBc,IAAI,CAAC3B,KAC5B,CAAC;UACDD,GAAG,CAACE,GAAG,GAAG,iCAAmC0B,IAAI,CAAC1B,GAAI;UACtDT,MAAM,CAACU,KAAK,CAACd,MAAM,CAACe,2BAA2B,CAACJ,GAAG,CAAC;UACpD,OAAO,IAAI;QACZ,CAAC,CAAC;QACHP,MAAM,CAACT,KAAK,CAACgD,QAAQ,CACnBlC,GAAG,CAAC,kBAAkB,CAAC,CACvBZ,GAAG,CAACN,WAAW,EAAEiB,UAAU,IAAI;UAC/B,MAAM+B,IAAI,GAAG,+BAAiC/B,UAAW;UACzD,IACC+B,IAAI,CAACK,MAAM,CAACC,IAAI,KAAK,cAAc,IACnCN,IAAI,CAACK,MAAM,CAACE,IAAI,CAACC,IAAI,KAAK,QAAQ,IAClCR,IAAI,CAACK,MAAM,CAACI,QAAQ,CAACD,IAAI,KAAK,MAAM,IACpCR,IAAI,CAACS,QAAQ,CAACH,IAAI,MAChBN,IAAI,CAACU,QAAQ,GAAG,SAAS,GAAG,YAAY,CAAC,EAC1C;YACD,OAAO,IAAInE,wBAAwB,CAAC,CAAC,CACnCoE,YAAY,CAAC,CAAC,CACdT,QAAQ,CAAC,oBAAsBF,IAAI,CAAC3B,KAAM,CAAC;UAC9C;QACD,CAAC,CAAC;MACJ,CAAC;MAEDd,mBAAmB,CAACH,KAAK,CAACS,MAAM,CAC9BK,GAAG,CAAC9B,2BAA2B,CAAC,CAChCkB,GAAG,CAACN,WAAW,EAAEY,aAAa,CAAC;MACjCL,mBAAmB,CAACH,KAAK,CAACS,MAAM,CAC9BK,GAAG,CAAC7B,0BAA0B,CAAC,CAC/BiB,GAAG,CAACN,WAAW,EAAEY,aAAa,CAAC;IAClC,CACD,CAAC;EACF;AACD;AAEAH,MAAM,CAACmD,OAAO,GAAG3D,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}