{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst util = require(\"util\");\nconst webpackOptionsSchemaCheck = require(\"../schemas/WebpackOptions.check.js\");\nconst webpackOptionsSchema = require(\"../schemas/WebpackOptions.json\");\nconst Compiler = require(\"./Compiler\");\nconst MultiCompiler = require(\"./MultiCompiler\");\nconst WebpackOptionsApply = require(\"./WebpackOptionsApply\");\nconst {\n  applyWebpackOptionsDefaults,\n  applyWebpackOptionsBaseDefaults\n} = require(\"./config/defaults\");\nconst {\n  getNormalizedWebpackOptions\n} = require(\"./config/normalization\");\nconst NodeEnvironmentPlugin = require(\"./node/NodeEnvironmentPlugin\");\nconst memoize = require(\"./util/memoize\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptions} WebpackOptions */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackPluginFunction} WebpackPluginFunction */\n/** @typedef {import(\"./Compiler\").WatchOptions} WatchOptions */\n/** @typedef {import(\"./MultiCompiler\").MultiCompilerOptions} MultiCompilerOptions */\n/** @typedef {import(\"./MultiStats\")} MultiStats */\n/** @typedef {import(\"./Stats\")} Stats */\n\nconst getValidateSchema = memoize(() => require(\"./validateSchema\"));\n\n/**\n * @template T\n * @callback Callback\n * @param {Error | null} err\n * @param {T=} stats\n * @returns {void}\n */\n\n/**\n * @param {ReadonlyArray<WebpackOptions>} childOptions options array\n * @param {MultiCompilerOptions} options options\n * @returns {MultiCompiler} a multi-compiler\n */\nconst createMultiCompiler = (childOptions, options) => {\n  const compilers = childOptions.map((options, index) => createCompiler(options, index));\n  const compiler = new MultiCompiler(compilers, options);\n  for (const childCompiler of compilers) {\n    if (childCompiler.options.dependencies) {\n      compiler.setDependencies(childCompiler, childCompiler.options.dependencies);\n    }\n  }\n  return compiler;\n};\n\n/**\n * @param {WebpackOptions} rawOptions options object\n * @param {number} [compilerIndex] index of compiler\n * @returns {Compiler} a compiler\n */\nconst createCompiler = (rawOptions, compilerIndex) => {\n  const options = getNormalizedWebpackOptions(rawOptions);\n  applyWebpackOptionsBaseDefaults(options);\n  const compiler = new Compiler(/** @type {string} */options.context, options);\n  new NodeEnvironmentPlugin({\n    infrastructureLogging: options.infrastructureLogging\n  }).apply(compiler);\n  if (Array.isArray(options.plugins)) {\n    for (const plugin of options.plugins) {\n      if (typeof plugin === \"function\") {\n        /** @type {WebpackPluginFunction} */\n        plugin.call(compiler, compiler);\n      } else if (plugin) {\n        plugin.apply(compiler);\n      }\n    }\n  }\n  const resolvedDefaultOptions = applyWebpackOptionsDefaults(options, compilerIndex);\n  if (resolvedDefaultOptions.platform) {\n    compiler.platform = resolvedDefaultOptions.platform;\n  }\n  compiler.hooks.environment.call();\n  compiler.hooks.afterEnvironment.call();\n  new WebpackOptionsApply().process(options, compiler);\n  compiler.hooks.initialize.call();\n  return compiler;\n};\n\n/**\n * @callback WebpackFunctionSingle\n * @param {WebpackOptions} options options object\n * @param {Callback<Stats>=} callback callback\n * @returns {Compiler} the compiler object\n */\n\n/**\n * @callback WebpackFunctionMulti\n * @param {ReadonlyArray<WebpackOptions> & MultiCompilerOptions} options options objects\n * @param {Callback<MultiStats>=} callback callback\n * @returns {MultiCompiler} the multi compiler object\n */\n\n/**\n * @template T\n * @param {Array<T> | T} options options\n * @returns {Array<T>} array of options\n */\nconst asArray = options => Array.isArray(options) ? Array.from(options) : [options];\nconst webpack = /** @type {WebpackFunctionSingle & WebpackFunctionMulti} */\n/**\n * @param {WebpackOptions | (ReadonlyArray<WebpackOptions> & MultiCompilerOptions)} options options\n * @param {Callback<Stats> & Callback<MultiStats>=} callback callback\n * @returns {Compiler | MultiCompiler | null} Compiler or MultiCompiler\n */\n(options, callback) => {\n  const create = () => {\n    if (!asArray(options).every(webpackOptionsSchemaCheck)) {\n      getValidateSchema()(webpackOptionsSchema, options);\n      util.deprecate(() => {}, \"webpack bug: Pre-compiled schema reports error while real schema is happy. This has performance drawbacks.\", \"DEP_WEBPACK_PRE_COMPILED_SCHEMA_INVALID\")();\n    }\n    /** @type {MultiCompiler|Compiler} */\n    let compiler;\n    /** @type {boolean | undefined} */\n    let watch = false;\n    /** @type {WatchOptions|WatchOptions[]} */\n    let watchOptions;\n    if (Array.isArray(options)) {\n      /** @type {MultiCompiler} */\n      compiler = createMultiCompiler(options, /** @type {MultiCompilerOptions} */options);\n      watch = options.some(options => options.watch);\n      watchOptions = options.map(options => options.watchOptions || {});\n    } else {\n      const webpackOptions = /** @type {WebpackOptions} */options;\n      /** @type {Compiler} */\n      compiler = createCompiler(webpackOptions);\n      watch = webpackOptions.watch;\n      watchOptions = webpackOptions.watchOptions || {};\n    }\n    return {\n      compiler,\n      watch,\n      watchOptions\n    };\n  };\n  if (callback) {\n    try {\n      const {\n        compiler,\n        watch,\n        watchOptions\n      } = create();\n      if (watch) {\n        compiler.watch(watchOptions, callback);\n      } else {\n        compiler.run((err, stats) => {\n          compiler.close(err2 => {\n            callback(err || err2, /** @type {options extends WebpackOptions ? Stats : MultiStats} */\n            stats);\n          });\n        });\n      }\n      return compiler;\n    } catch (err) {\n      process.nextTick(() => callback(/** @type {Error} */err));\n      return null;\n    }\n  } else {\n    const {\n      compiler,\n      watch\n    } = create();\n    if (watch) {\n      util.deprecate(() => {}, \"A 'callback' argument needs to be provided to the 'webpack(options, callback)' function when the 'watch' option is set. There is no way to handle the 'watch' option without a callback.\", \"DEP_WEBPACK_WATCH_WITHOUT_CALLBACK\")();\n    }\n    return compiler;\n  }\n};\nmodule.exports = webpack;","map":{"version":3,"names":["util","require","webpackOptionsSchemaCheck","webpackOptionsSchema","Compiler","MultiCompiler","WebpackOptionsApply","applyWebpackOptionsDefaults","applyWebpackOptionsBaseDefaults","getNormalizedWebpackOptions","NodeEnvironmentPlugin","memoize","getValidateSchema","createMultiCompiler","childOptions","options","compilers","map","index","createCompiler","compiler","childCompiler","dependencies","setDependencies","rawOptions","compilerIndex","context","infrastructureLogging","apply","Array","isArray","plugins","plugin","call","resolvedDefaultOptions","platform","hooks","environment","afterEnvironment","process","initialize","asArray","from","webpack","callback","create","every","deprecate","watch","watchOptions","some","webpackOptions","run","err","stats","close","err2","nextTick","module","exports"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/node_modules/webpack/lib/webpack.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst util = require(\"util\");\nconst webpackOptionsSchemaCheck = require(\"../schemas/WebpackOptions.check.js\");\nconst webpackOptionsSchema = require(\"../schemas/WebpackOptions.json\");\nconst Compiler = require(\"./Compiler\");\nconst MultiCompiler = require(\"./MultiCompiler\");\nconst WebpackOptionsApply = require(\"./WebpackOptionsApply\");\nconst {\n\tapplyWebpackOptionsDefaults,\n\tapplyWebpackOptionsBaseDefaults\n} = require(\"./config/defaults\");\nconst { getNormalizedWebpackOptions } = require(\"./config/normalization\");\nconst NodeEnvironmentPlugin = require(\"./node/NodeEnvironmentPlugin\");\nconst memoize = require(\"./util/memoize\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptions} WebpackOptions */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackPluginFunction} WebpackPluginFunction */\n/** @typedef {import(\"./Compiler\").WatchOptions} WatchOptions */\n/** @typedef {import(\"./MultiCompiler\").MultiCompilerOptions} MultiCompilerOptions */\n/** @typedef {import(\"./MultiStats\")} MultiStats */\n/** @typedef {import(\"./Stats\")} Stats */\n\nconst getValidateSchema = memoize(() => require(\"./validateSchema\"));\n\n/**\n * @template T\n * @callback Callback\n * @param {Error | null} err\n * @param {T=} stats\n * @returns {void}\n */\n\n/**\n * @param {ReadonlyArray<WebpackOptions>} childOptions options array\n * @param {MultiCompilerOptions} options options\n * @returns {MultiCompiler} a multi-compiler\n */\nconst createMultiCompiler = (childOptions, options) => {\n\tconst compilers = childOptions.map((options, index) =>\n\t\tcreateCompiler(options, index)\n\t);\n\tconst compiler = new MultiCompiler(compilers, options);\n\tfor (const childCompiler of compilers) {\n\t\tif (childCompiler.options.dependencies) {\n\t\t\tcompiler.setDependencies(\n\t\t\t\tchildCompiler,\n\t\t\t\tchildCompiler.options.dependencies\n\t\t\t);\n\t\t}\n\t}\n\treturn compiler;\n};\n\n/**\n * @param {WebpackOptions} rawOptions options object\n * @param {number} [compilerIndex] index of compiler\n * @returns {Compiler} a compiler\n */\nconst createCompiler = (rawOptions, compilerIndex) => {\n\tconst options = getNormalizedWebpackOptions(rawOptions);\n\tapplyWebpackOptionsBaseDefaults(options);\n\tconst compiler = new Compiler(\n\t\t/** @type {string} */ (options.context),\n\t\toptions\n\t);\n\tnew NodeEnvironmentPlugin({\n\t\tinfrastructureLogging: options.infrastructureLogging\n\t}).apply(compiler);\n\tif (Array.isArray(options.plugins)) {\n\t\tfor (const plugin of options.plugins) {\n\t\t\tif (typeof plugin === \"function\") {\n\t\t\t\t/** @type {WebpackPluginFunction} */\n\t\t\t\t(plugin).call(compiler, compiler);\n\t\t\t} else if (plugin) {\n\t\t\t\tplugin.apply(compiler);\n\t\t\t}\n\t\t}\n\t}\n\tconst resolvedDefaultOptions = applyWebpackOptionsDefaults(\n\t\toptions,\n\t\tcompilerIndex\n\t);\n\tif (resolvedDefaultOptions.platform) {\n\t\tcompiler.platform = resolvedDefaultOptions.platform;\n\t}\n\tcompiler.hooks.environment.call();\n\tcompiler.hooks.afterEnvironment.call();\n\tnew WebpackOptionsApply().process(options, compiler);\n\tcompiler.hooks.initialize.call();\n\treturn compiler;\n};\n\n/**\n * @callback WebpackFunctionSingle\n * @param {WebpackOptions} options options object\n * @param {Callback<Stats>=} callback callback\n * @returns {Compiler} the compiler object\n */\n\n/**\n * @callback WebpackFunctionMulti\n * @param {ReadonlyArray<WebpackOptions> & MultiCompilerOptions} options options objects\n * @param {Callback<MultiStats>=} callback callback\n * @returns {MultiCompiler} the multi compiler object\n */\n\n/**\n * @template T\n * @param {Array<T> | T} options options\n * @returns {Array<T>} array of options\n */\nconst asArray = options =>\n\tArray.isArray(options) ? Array.from(options) : [options];\n\nconst webpack = /** @type {WebpackFunctionSingle & WebpackFunctionMulti} */ (\n\t/**\n\t * @param {WebpackOptions | (ReadonlyArray<WebpackOptions> & MultiCompilerOptions)} options options\n\t * @param {Callback<Stats> & Callback<MultiStats>=} callback callback\n\t * @returns {Compiler | MultiCompiler | null} Compiler or MultiCompiler\n\t */\n\t(options, callback) => {\n\t\tconst create = () => {\n\t\t\tif (!asArray(options).every(webpackOptionsSchemaCheck)) {\n\t\t\t\tgetValidateSchema()(webpackOptionsSchema, options);\n\t\t\t\tutil.deprecate(\n\t\t\t\t\t() => {},\n\t\t\t\t\t\"webpack bug: Pre-compiled schema reports error while real schema is happy. This has performance drawbacks.\",\n\t\t\t\t\t\"DEP_WEBPACK_PRE_COMPILED_SCHEMA_INVALID\"\n\t\t\t\t)();\n\t\t\t}\n\t\t\t/** @type {MultiCompiler|Compiler} */\n\t\t\tlet compiler;\n\t\t\t/** @type {boolean | undefined} */\n\t\t\tlet watch = false;\n\t\t\t/** @type {WatchOptions|WatchOptions[]} */\n\t\t\tlet watchOptions;\n\t\t\tif (Array.isArray(options)) {\n\t\t\t\t/** @type {MultiCompiler} */\n\t\t\t\tcompiler = createMultiCompiler(\n\t\t\t\t\toptions,\n\t\t\t\t\t/** @type {MultiCompilerOptions} */ (options)\n\t\t\t\t);\n\t\t\t\twatch = options.some(options => options.watch);\n\t\t\t\twatchOptions = options.map(options => options.watchOptions || {});\n\t\t\t} else {\n\t\t\t\tconst webpackOptions = /** @type {WebpackOptions} */ (options);\n\t\t\t\t/** @type {Compiler} */\n\t\t\t\tcompiler = createCompiler(webpackOptions);\n\t\t\t\twatch = webpackOptions.watch;\n\t\t\t\twatchOptions = webpackOptions.watchOptions || {};\n\t\t\t}\n\t\t\treturn { compiler, watch, watchOptions };\n\t\t};\n\t\tif (callback) {\n\t\t\ttry {\n\t\t\t\tconst { compiler, watch, watchOptions } = create();\n\t\t\t\tif (watch) {\n\t\t\t\t\tcompiler.watch(watchOptions, callback);\n\t\t\t\t} else {\n\t\t\t\t\tcompiler.run((err, stats) => {\n\t\t\t\t\t\tcompiler.close(err2 => {\n\t\t\t\t\t\t\tcallback(\n\t\t\t\t\t\t\t\terr || err2,\n\t\t\t\t\t\t\t\t/** @type {options extends WebpackOptions ? Stats : MultiStats} */\n\t\t\t\t\t\t\t\t(stats)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn compiler;\n\t\t\t} catch (err) {\n\t\t\t\tprocess.nextTick(() => callback(/** @type {Error} */ (err)));\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\tconst { compiler, watch } = create();\n\t\t\tif (watch) {\n\t\t\t\tutil.deprecate(\n\t\t\t\t\t() => {},\n\t\t\t\t\t\"A 'callback' argument needs to be provided to the 'webpack(options, callback)' function when the 'watch' option is set. There is no way to handle the 'watch' option without a callback.\",\n\t\t\t\t\t\"DEP_WEBPACK_WATCH_WITHOUT_CALLBACK\"\n\t\t\t\t)();\n\t\t\t}\n\t\t\treturn compiler;\n\t\t}\n\t}\n);\n\nmodule.exports = webpack;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}