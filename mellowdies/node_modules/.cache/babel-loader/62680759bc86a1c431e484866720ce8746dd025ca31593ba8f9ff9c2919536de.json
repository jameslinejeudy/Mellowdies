{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elect\\\\Documents\\\\CIS\\\\4914\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Menu.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst menubackground = {\n  width: '25%',\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'flex-start',\n  alignItems: 'left',\n  border: '2px solid #ffffff',\n  backgroundColor: '#ffffff',\n  fontFamily: \"'Concert One', cursive\",\n  fontSize: '1.2rem',\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\n  border: 'none',\n  position: 'fixed',\n  top: '0',\n  left: '0',\n  zIndex: '1000',\n  paddingTop: '20px',\n  overflowY: 'auto',\n  // Enable vertical scrolling\n  maxHeight: '100%' // Set a maximum height for the menu\n};\nconst backButtonStyle = {\n  marginTop: '10px',\n  background: '#007bff',\n  color: '#fff',\n  border: 'none',\n  padding: '10px 20px',\n  borderRadius: '5px',\n  cursor: 'pointer',\n  fontSize: '16px',\n  textAlign: 'center',\n  width: 'auto',\n  display: 'inline-block',\n  transition: 'background 0.3s ease'\n};\nconst reverseButtonStyle = {\n  ...backButtonStyle,\n  background: '#ff5722' // Different color for reverse button\n};\nconst sliderStyle = {\n  width: '80%',\n  margin: '10px auto'\n};\nconst adjustGainButtonStyle = {\n  ...backButtonStyle,\n  background: '#4caf50' // Different color for adjust gain button\n};\nconst modalStyle = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 'auto',\n  height: 'auto',\n  backgroundColor: '#fff',\n  padding: '20px',\n  borderRadius: '10px',\n  boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.3)',\n  zIndex: '1001',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center'\n};\nconst overlayStyle = {\n  position: 'fixed',\n  top: '0',\n  left: '0',\n  right: '0',\n  bottom: '0',\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  zIndex: '1000'\n};\nconst contentStyle = {\n  flexGrow: 1,\n  paddingTop: '20px'\n};\nconst verticalSliderStyle = {\n  orient: 'vertical',\n  // Ensures the slider is vertical\n  appearance: 'slider-vertical'\n};\nconst sliderContainerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center'\n};\nvar utils = require(\"audio-buffer-utils\");\nvar blobber = require('audiobuffer-to-blob');\nlet buffers = [];\nfunction storeBuffer(buffer) {\n  buffers.push(buffer);\n}\nfunction combFilter(samples, sampleLength, delay, decay, sampleRate) {\n  let delaySamples = Math.ceil(delay * (sampleRate / 1000));\n  let combFilterSamples = samples;\n  for (let i = 0; i < sampleLength - delaySamples; i++) {\n    combFilterSamples[i + delaySamples] += combFilterSamples[i] * decay;\n  }\n  return combFilterSamples;\n}\nfunction allPassFilter(samples, sampleLength, sampleRate) {\n  let delaySamples = Math.ceil(88.69 * (sampleRate / 1000));\n  let allPassFilterSamples = new Float32Array(sampleLength);\n  let decayFactor = 0.131;\n  for (let i = 0; i < sampleLength; i++) {\n    allPassFilterSamples[i] = samples[i];\n    if (i - delaySamples >= 0) {\n      allPassFilterSamples[i] += allPassFilterSamples[i - delaySamples] * -decayFactor;\n    }\n    if (i - delaySamples >= 1) {\n      allPassFilterSamples[i] += allPassFilterSamples[i + 20 - delaySamples] * decayFactor;\n    }\n  }\n  let val = allPassFilterSamples[0];\n  let max = 0.0;\n  for (let i = 0; i < sampleLength; i++) {\n    if (Math.abs(allPassFilterSamples[i]) > max) {\n      max = Math.abs(allPassFilterSamples[i]);\n    }\n  }\n  for (let i = 0; i < allPassFilterSamples.length; i++) {\n    let currVal = allPassFilterSamples[i];\n    val = (val + (currVal - val)) / max;\n    allPassFilterSamples[i] = val;\n  }\n  return allPassFilterSamples;\n}\nfunction Menu({\n  handleBack,\n  waveData\n}) {\n  _s();\n  const filters = waveData[0].filters;\n  const [isGainModalOpen, setGainModalOpen] = useState(false);\n  const [isDelayModalOpen, setDelayModalOpen] = useState(false);\n  const [isDistortionModalOpen, setDistortionModalOpen] = useState(false);\n  const [isReverbModalOpen, setReverbModalOpen] = useState(false);\n  const [isEquaModalOpen, setEquaModalOpen] = useState(false);\n  const [isEquaInit, setEquaInit] = useState(false);\n  const [gainValue, setGainValue] = useState(100);\n  const [delayTime, setDelayTime] = useState(0.00);\n  const [feedback, setFeedback] = useState(0.00);\n  const [wetness, setWetness] = useState(0.00);\n  const [dryness, setDryness] = useState(0.00);\n  const [gainDistortValue, setGainDistortValue] = useState(100);\n  const [reverbTime, setReverbTime] = useState(0.00);\n  const [decay, setDecay] = useState(0.00);\n  const [reverbWet, setReverbWet] = useState(0.00);\n  const [filter0Val, setFilter0] = useState(filters[0].gain.value);\n  const [filter1Val, setFilter1] = useState(filters[1].gain.value);\n  const [filter2Val, setFilter2] = useState(filters[2].gain.value);\n  const [filter3Val, setFilter3] = useState(filters[3].gain.value);\n  const [filter4Val, setFilter4] = useState(filters[4].gain.value);\n  const [filter5Val, setFilter5] = useState(filters[5].gain.value);\n  const [filter6Val, setFilter6] = useState(filters[6].gain.value);\n  const [filter7Val, setFilter7] = useState(filters[7].gain.value);\n  const [filter8Val, setFilter8] = useState(filters[8].gain.value);\n  const [filter9Val, setFilter9] = useState(filters[9].gain.value);\n  if (isEquaInit === false) {\n    waveData[0].webAudioPlayer.gainNode.connect(filters[0]);\n    filters[0].connect(filters[1]);\n    filters[1].connect(filters[2]);\n    filters[2].connect(filters[3]);\n    filters[3].connect(filters[4]);\n    filters[4].connect(filters[5]);\n    filters[5].connect(filters[6]);\n    filters[6].connect(filters[7]);\n    filters[7].connect(filters[8]);\n    filters[8].connect(filters[9]);\n    filters[9].connect(waveData[0].webAudioPlayer.audioContext.destination);\n  }\n  const setFilter = () => {\n    filters[0].gain.value = filter0Val;\n    filters[1].gain.value = filter1Val;\n    filters[2].gain.value = filter2Val;\n    filters[3].gain.value = filter3Val;\n    filters[4].gain.value = filter4Val;\n    filters[5].gain.value = filter5Val;\n    filters[6].gain.value = filter6Val;\n    filters[7].gain.value = filter7Val;\n    filters[8].gain.value = filter8Val;\n    filters[9].gain.value = filter9Val;\n    console.log(\"EQ applied\");\n  };\n  const undo = () => {\n    if (buffers.length >= 1) {\n      let blob = blobber(buffers.pop());\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const reset = () => {\n    if (buffers.length >= 1) {\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blobber(buffers[0])).catch(error => console.log(error));\n      buffers = [];\n    }\n  };\n  const reverse = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    if (buffer) {\n      utils.reverse(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n      console.log(\"Reversed region.\");\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    } else {\n      console.error('No audio buffer loaded');\n    }\n  };\n  const invert = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    if (buffer) {\n      utils.invert(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n      console.log(\"Inverted region.\");\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    } else {\n      console.error('No audio buffer loaded');\n    }\n  };\n  const normalize = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    if (buffer) {\n      utils.normalize(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n      console.log(\"Normalized region.\");\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    } else {\n      console.error('No audio buffer loaded');\n    }\n  };\n  const openGainModal = () => setGainModalOpen(true);\n  const closeGainModal = () => setGainModalOpen(false);\n  const adjustGain = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let gain = gainValue / 100;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] *= gain;\n        }\n      }\n      console.log('Gain adjusted:', gain);\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const fadeIn = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let stepInc = 1 / (end - start);\n    let currGain = 0;\n    let steps = 0;\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] *= currGain + steps * stepInc;\n          steps += 1;\n        }\n        steps = 0;\n      }\n      console.log('Region Faded In');\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const fadeOut = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let stepInc = 1 / (end - start);\n    let currGain = 1;\n    let steps = 0;\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] *= currGain - steps * stepInc;\n          steps += 1;\n        }\n        steps = 0;\n      }\n      console.log('Region Faded In');\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const openDistortionModal = () => setDistortionModalOpen(true);\n  const closeDistortionModal = () => setDistortionModalOpen(false);\n  const distort = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let gain = gainDistortValue / 100;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] = Math.atan(gain * channelData[sample]);\n        }\n      }\n      console.log('Distorted Region', gain);\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const openDelayModal = () => setDelayModalOpen(true);\n  const closeDelayModal = () => setDelayModalOpen(false);\n  const delay = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let wet = wetness;\n    let dry = dryness;\n    let feeder = feedback;\n    let index = 0;\n    if (buffer) {\n      let numChannels = buffer.numberOfChannels;\n      if (numChannels === 1) {\n        let channelData = buffer.getChannelData(0);\n        let delayBuffer = new Float32Array(channelData.subarray(start, end + 1));\n        for (let sample = start; sample < end; sample += 1) {\n          let delayed = delayBuffer[index];\n          channelData[sample] = channelData[sample] * dry + delayed * wet;\n          delayBuffer[index] = feeder * (delayed + channelData[sample]);\n          index += 1;\n        }\n      } else if (numChannels === 2) {\n        let channelLeft = buffer.getChannelData(0);\n        let channelRight = buffer.getChannelData(1);\n        let delayLeft = new Float32Array(channelLeft.subarray(start, end + 1));\n        let delayRight = new Float32Array(channelRight.subarray(start, end + 1));\n        delayLeft = channelLeft;\n        delayRight = channelRight;\n        for (let sample = start; sample < end; sample += 1) {\n          let delayed_left = delayLeft[index];\n          let delayed_right = delayRight[index];\n          channelLeft[sample] = channelLeft[sample] * dry + delayed_left * wet;\n          channelRight[sample] = channelRight[sample] * dry + delayed_right * wet;\n          delayLeft[index] = feeder * (delayed_left + channelLeft[sample]);\n          delayRight[index] = feeder * (delayed_right + channelRight[sample]);\n          index += 1;\n        }\n      }\n      console.log('Region Delayed');\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const openReverbModal = () => setReverbModalOpen(true);\n  const closeReverbModal = () => setReverbModalOpen(false);\n  const reverb = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let bufferSize = end - start;\n    let channelLeft = buffer.getChannelData(0);\n    let channelRight = buffer.getChannelData(1);\n    let samplesLeft = new Float32Array(channelLeft.subarray(start, end + 1));\n    let samplesRight = new Float32Array(channelRight.subarray(start, end + 1));\n    let delayinMilliSeconds = reverbTime * 1000;\n    let decayFactor = decay;\n    let combFilterSamplesLeft1 = combFilter(samplesLeft, bufferSize, delayinMilliSeconds, decayFactor, sampleRate);\n    let combFilterSamplesLeft2 = combFilter(samplesLeft, bufferSize, delayinMilliSeconds - 11.73, decayFactor - 0.1313, sampleRate);\n    let combFilterSamplesRight1 = combFilter(samplesRight, bufferSize, delayinMilliSeconds, decayFactor, sampleRate);\n    let combFilterSamplesRight2 = combFilter(samplesRight, bufferSize, delayinMilliSeconds - 11.73, decayFactor - 0.1313, sampleRate);\n    let outputCombLeft = new Float32Array(bufferSize);\n    let outputCombRight = new Float32Array(bufferSize);\n    for (let i = 0; i < bufferSize; i++) {\n      outputCombLeft[i] = combFilterSamplesLeft1[i] + combFilterSamplesLeft2[i];\n    }\n    for (let i = 0; i < bufferSize; i++) {\n      outputCombRight[i] = combFilterSamplesRight1[i] + combFilterSamplesRight2[i];\n    }\n    let audioMixLeft = new Float32Array(bufferSize);\n    let audioMixRight = new Float32Array(bufferSize);\n    for (let i = 0; i < bufferSize; i++) {\n      audioMixLeft[i] = (1 - reverbWet) * samplesLeft[i] + reverbWet * outputCombLeft[i];\n    }\n    for (let i = 0; i < bufferSize; i++) {\n      audioMixRight[i] = (1 - reverbWet) * samplesRight[i] + reverbWet * outputCombRight[i];\n    }\n    let allPassFilterSamplesLeft1 = allPassFilter(audioMixLeft, bufferSize, sampleRate);\n    let allPassFilterSamplesLeft2 = allPassFilter(allPassFilterSamplesLeft1, bufferSize, sampleRate);\n    let allPassFilterSamplesRight1 = allPassFilter(audioMixRight, bufferSize, sampleRate);\n    let allPassFilterSamplesRight2 = allPassFilter(allPassFilterSamplesRight1, bufferSize, sampleRate);\n    for (let i = 0; i < bufferSize; i++) {\n      channelLeft[start + i] = allPassFilterSamplesLeft2[i];\n      channelRight[start + i] = allPassFilterSamplesRight2[i];\n    }\n    console.log('Reverb Applied');\n    let blob = blobber(buffer);\n    waveData[0].waveSurfer.empty();\n    waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n  };\n  const closeEquaModal = () => setEquaModalOpen(false);\n  const openEquaModal = () => {\n    setEquaInit(true);\n    setEquaModalOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: menubackground,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: contentStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: backButtonStyle,\n        onClick: handleBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: reverse,\n        children: \"Reverse Selected Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: invert,\n        children: \"Invert Selected Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: normalize,\n        children: \"Normalize Selected Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: fadeIn,\n        children: \"Fade In Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: fadeOut,\n        children: \"Fade Out Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: openGainModal,\n        children: \"Adjust Gain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this), isGainModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: overlayStyle,\n          onClick: closeGainModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Gain Percentage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"gains\",\n            type: \"range\",\n            min: \"0\",\n            max: \"200\",\n            step: \"0.01\",\n            value: gainValue,\n            onInput: e => setGainValue(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"gainVal\",\n            children: [gainValue, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeGainModal,\n            style: backButtonStyle,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: adjustGain,\n            style: backButtonStyle,\n            children: \"Apply Gain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: openDelayModal,\n        children: \"Adjust Delay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }, this), isDelayModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: overlayStyle,\n          onClick: closeDelayModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Delay Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"delayT\",\n            type: \"range\",\n            min: \"0\",\n            max: \"6\",\n            step: \"0.01\",\n            value: delayTime,\n            onInput: e => setDelayTime(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"delayVal\",\n            children: delayTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"feedback\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: feedback,\n            onInput: e => setFeedback(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"feedVal\",\n            children: feedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Wet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"wets\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: wetness,\n            onInput: e => setWetness(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"wetVal\",\n            children: wetness\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Dry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"dryer\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: dryness,\n            onInput: e => setDryness(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"dryVal\",\n            children: dryness\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeDelayModal,\n            style: backButtonStyle,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: delay,\n            style: backButtonStyle,\n            children: \"Apply Delay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: openDistortionModal,\n        children: \"Apply Distortion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 607,\n        columnNumber: 9\n      }, this), isDistortionModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: overlayStyle,\n          onClick: closeDistortionModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Gain Percentage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"gains\",\n            type: \"range\",\n            min: \"0\",\n            max: \"200\",\n            step: \"0.01\",\n            value: gainDistortValue,\n            onInput: e => setGainDistortValue(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"gainDistortVal\",\n            children: [gainDistortValue, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeDistortionModal,\n            style: backButtonStyle,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: distort,\n            style: backButtonStyle,\n            children: \"Apply Distortion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: openReverbModal,\n        children: \"Apply Reverb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 9\n      }, this), isReverbModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: overlayStyle,\n          onClick: closeReverbModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"reverbT\",\n            type: \"range\",\n            min: \"0\",\n            max: \"3\",\n            step: \"0.01\",\n            value: reverbTime,\n            onInput: e => setReverbTime(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"reverbTime\",\n            children: reverbTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Decay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"decay\",\n            type: \"range\",\n            min: \"0\",\n            max: \"3\",\n            step: \"0.01\",\n            value: decay,\n            onInput: e => setDecay(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"decayVal\",\n            children: decay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Wet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"wetR\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: reverbWet,\n            onInput: e => setReverbWet(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"wetRVal\",\n            children: reverbWet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeReverbModal,\n            style: backButtonStyle,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: reverb,\n            style: backButtonStyle,\n            children: \"Apply Reverb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: openEquaModal,\n        children: \"10-Band Equalizer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 9\n      }, this), isEquaModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: overlayStyle,\n          onClick: closeEquaModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '5px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: sliderContainerStyle,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"32Hz\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 696,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"filter0\",\n                type: \"range\",\n                min: \"-40\",\n                max: \"40\",\n                step: \"0.1\",\n                value: filter0Val,\n                onInput: e => setFilter0(e.target.value),\n                style: verticalSliderStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 697,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                id: \"0\",\n                children: [filter0Val, \" dB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: sliderContainerStyle,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"64Hz\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 711,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"filter1\",\n                type: \"range\",\n                min: \"-40\",\n                max: \"40\",\n                step: \"0.1\",\n                value: filter1Val,\n                onInput: e => setFilter1(e.target.value),\n                style: verticalSliderStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 712,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                id: \"1\",\n                children: [filter1Val, \" dB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: sliderContainerStyle,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"125Hz\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 726,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"filter2\",\n                type: \"range\",\n                min: \"-40\",\n                max: \"40\",\n                step: \"0.1\",\n                value: filter2Val,\n                onInput: e => setFilter2(e.target.value),\n                style: verticalSliderStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 727,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                id: \"2\",\n                children: [filter2Val, \" dB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: sliderContainerStyle,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"250Hz\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"filter3\",\n                type: \"range\",\n                min: \"-40\",\n                max: \"40\",\n                step: \"0.1\",\n                value: filter3Val,\n                onInput: e => setFilter3(e.target.value),\n                style: verticalSliderStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 742,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                id: \"3\",\n                children: [filter3Val, \" dB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 752,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: sliderContainerStyle,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"500Hz\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"filter4\",\n                type: \"range\",\n                min: \"-40\",\n                max: \"40\",\n                step: \"0.1\",\n                value: filter4Val,\n                onInput: e => setFilter4(e.target.value),\n                style: verticalSliderStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 757,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                id: \"4\",\n                children: [filter4Val, \" dB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: sliderContainerStyle,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"1000Hz\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"filter5\",\n                type: \"range\",\n                min: \"-40\",\n                max: \"40\",\n                step: \"0.1\",\n                value: filter5Val,\n                onInput: e => setFilter5(e.target.value),\n                style: verticalSliderStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 773,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                id: \"5\",\n                children: [filter5Val, \" dB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: sliderContainerStyle,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"2000Hz\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 787,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"filter6\",\n                type: \"range\",\n                min: \"-40\",\n                max: \"40\",\n                step: \"0.1\",\n                value: filter6Val,\n                onInput: e => setFilter6(e.target.value),\n                style: verticalSliderStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 788,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                id: \"6\",\n                children: [filter6Val, \" dB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 798,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 786,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: sliderContainerStyle,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"4000Hz\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"filter7\",\n                type: \"range\",\n                min: \"-40\",\n                max: \"40\",\n                step: \"0.1\",\n                value: filter7Val,\n                onInput: e => setFilter7(e.target.value),\n                style: verticalSliderStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                id: \"7\",\n                children: [filter7Val, \" dB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 813,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: sliderContainerStyle,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"8000Hz\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"filter8\",\n                type: \"range\",\n                min: \"-40\",\n                max: \"40\",\n                step: \"0.1\",\n                value: filter8Val,\n                onInput: e => setFilter8(e.target.value),\n                style: verticalSliderStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 818,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                id: \"8\",\n                children: [filter8Val, \" dB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 828,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 816,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: sliderContainerStyle,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"16000Hz\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 832,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"filter9\",\n                type: \"range\",\n                min: \"-40\",\n                max: \"40\",\n                step: \"0.1\",\n                value: filter9Val,\n                onInput: e => setFilter9(e.target.value),\n                style: verticalSliderStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 833,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                id: \"9\",\n                children: [filter9Val, \" dB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 843,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 831,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeEquaModal,\n              style: backButtonStyle,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 846,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: setFilter,\n              style: backButtonStyle,\n              children: \"Apply EQ\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 847,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: undo,\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: reset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 492,\n    columnNumber: 5\n  }, this);\n}\n_s(Menu, \"g0xrRWwBKqlyj750I+LDsoMgSe0=\");\n_c = Menu;\nexport default Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","menubackground","width","height","display","flexDirection","justifyContent","alignItems","border","backgroundColor","fontFamily","fontSize","boxShadow","position","top","left","zIndex","paddingTop","overflowY","maxHeight","backButtonStyle","marginTop","background","color","padding","borderRadius","cursor","textAlign","transition","reverseButtonStyle","sliderStyle","margin","adjustGainButtonStyle","modalStyle","transform","overlayStyle","right","bottom","contentStyle","flexGrow","verticalSliderStyle","orient","appearance","sliderContainerStyle","utils","require","blobber","buffers","storeBuffer","buffer","push","combFilter","samples","sampleLength","delay","decay","sampleRate","delaySamples","Math","ceil","combFilterSamples","i","allPassFilter","allPassFilterSamples","Float32Array","decayFactor","val","max","abs","length","currVal","Menu","handleBack","waveData","_s","filters","isGainModalOpen","setGainModalOpen","isDelayModalOpen","setDelayModalOpen","isDistortionModalOpen","setDistortionModalOpen","isReverbModalOpen","setReverbModalOpen","isEquaModalOpen","setEquaModalOpen","isEquaInit","setEquaInit","gainValue","setGainValue","delayTime","setDelayTime","feedback","setFeedback","wetness","setWetness","dryness","setDryness","gainDistortValue","setGainDistortValue","reverbTime","setReverbTime","setDecay","reverbWet","setReverbWet","filter0Val","setFilter0","gain","value","filter1Val","setFilter1","filter2Val","setFilter2","filter3Val","setFilter3","filter4Val","setFilter4","filter5Val","setFilter5","filter6Val","setFilter6","filter7Val","setFilter7","filter8Val","setFilter8","filter9Val","setFilter9","webAudioPlayer","gainNode","connect","audioContext","destination","setFilter","console","log","undo","blob","pop","waveSurfer","empty","loadBlob","catch","error","reset","reverse","getDecodedData","clone","region","regions","getRegions","start","end","invert","normalize","openGainModal","closeGainModal","adjustGain","floor","channel","numberOfChannels","channelData","getChannelData","sample","fadeIn","stepInc","currGain","steps","fadeOut","openDistortionModal","closeDistortionModal","distort","atan","openDelayModal","closeDelayModal","wet","dry","feeder","index","numChannels","delayBuffer","subarray","delayed","channelLeft","channelRight","delayLeft","delayRight","delayed_left","delayed_right","openReverbModal","closeReverbModal","reverb","bufferSize","samplesLeft","samplesRight","delayinMilliSeconds","combFilterSamplesLeft1","combFilterSamplesLeft2","combFilterSamplesRight1","combFilterSamplesRight2","outputCombLeft","outputCombRight","audioMixLeft","audioMixRight","allPassFilterSamplesLeft1","allPassFilterSamplesLeft2","allPassFilterSamplesRight1","allPassFilterSamplesRight2","closeEquaModal","openEquaModal","style","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","type","min","step","onInput","e","target","gap","_c","$RefreshReg$"],"sources":["C:/Users/elect/Documents/CIS/4914/Mellowdies/mellowdies/src/Landingpage/Menu.js"],"sourcesContent":["import React, {useState}  from 'react';\r\n\r\nconst menubackground = {\r\n  width: '25%',\r\n  height: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'flex-start',\r\n  alignItems: 'left',\r\n  border: '2px solid #ffffff',\r\n  backgroundColor: '#ffffff',\r\n  fontFamily: \"'Concert One', cursive\",\r\n  fontSize: '1.2rem',\r\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\r\n  border: 'none',\r\n  position: 'fixed',\r\n  top: '0',\r\n  left: '0',\r\n  zIndex: '1000',\r\n  paddingTop: '20px',\r\n  overflowY: 'auto', // Enable vertical scrolling\r\n  maxHeight: '100%', // Set a maximum height for the menu\r\n};\r\n\r\nconst backButtonStyle = {\r\n  marginTop: '10px',\r\n  background: '#007bff',\r\n  color: '#fff',\r\n  border: 'none',\r\n  padding: '10px 20px',\r\n  borderRadius: '5px',\r\n  cursor: 'pointer',\r\n  fontSize: '16px',\r\n  textAlign: 'center',\r\n  width: 'auto',\r\n  display: 'inline-block',\r\n  transition: 'background 0.3s ease',\r\n};\r\n\r\nconst reverseButtonStyle = {\r\n  ...backButtonStyle,\r\n  background: '#ff5722', // Different color for reverse button\r\n};\r\n\r\nconst sliderStyle = {\r\n  width: '80%',\r\n  margin: '10px auto',\r\n};\r\n\r\nconst adjustGainButtonStyle = {\r\n  ...backButtonStyle,\r\n  background: '#4caf50', // Different color for adjust gain button\r\n};\r\n\r\n\r\nconst modalStyle = {\r\n  position: 'fixed',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 'auto',\r\n  height: 'auto',\r\n  backgroundColor: '#fff',\r\n  padding: '20px',\r\n  borderRadius: '10px',\r\n  boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.3)',\r\n  zIndex: '1001',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n};\r\n\r\nconst overlayStyle = {\r\n  position: 'fixed',\r\n  top: '0',\r\n  left: '0',\r\n  right: '0',\r\n  bottom: '0',\r\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  zIndex: '1000',\r\n};\r\n\r\nconst contentStyle = {\r\n  flexGrow: 1,\r\n  paddingTop: '20px',\r\n};\r\n\r\nconst verticalSliderStyle = {\r\n  orient: 'vertical', // Ensures the slider is vertical\r\n  appearance : 'slider-vertical',\r\n}\r\n\r\nconst sliderContainerStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n};\r\n\r\nvar utils = require(\"audio-buffer-utils\");\r\nvar blobber = require('audiobuffer-to-blob');\r\n\r\nlet buffers = [];\r\nfunction storeBuffer (buffer) {\r\n  buffers.push(buffer);\r\n}\r\n\r\nfunction combFilter (samples, sampleLength, delay, decay, sampleRate) {\r\n  let delaySamples = Math.ceil(delay * (sampleRate / 1000));\r\n  let combFilterSamples = samples;\r\n  for (let i = 0; i < sampleLength - delaySamples; i++) {\r\n    combFilterSamples[i+delaySamples] += combFilterSamples[i] * decay;\r\n  }\r\n  return combFilterSamples;\r\n}\r\n\r\nfunction allPassFilter (samples, sampleLength, sampleRate) {\r\n  let delaySamples = Math.ceil(88.69 * (sampleRate/1000));\r\n  let allPassFilterSamples = new Float32Array(sampleLength);\r\n  let decayFactor = 0.131;\r\n  for (let i = 0; i < sampleLength; i++) {\r\n    allPassFilterSamples[i] = samples[i];\r\n    if (i - delaySamples >= 0) {\r\n      allPassFilterSamples[i] += allPassFilterSamples[i-delaySamples] * (-decayFactor);\r\n    }\r\n    if (i - delaySamples >= 1) {\r\n      allPassFilterSamples[i] += allPassFilterSamples[i+20-delaySamples] * decayFactor;\r\n    }\r\n  }\r\n  let val = allPassFilterSamples[0];\r\n  let max = 0.0;\r\n  for (let i = 0; i < sampleLength; i++) {\r\n    if(Math.abs(allPassFilterSamples[i]) > max) {\r\n      max = Math.abs(allPassFilterSamples[i]);\r\n    }\r\n  }\r\n  for (let i = 0; i < allPassFilterSamples.length; i++) {\r\n    let currVal = allPassFilterSamples[i];\r\n    val = (val + (currVal - val)) / max;\r\n    allPassFilterSamples[i] = val;\r\n  }\r\n  return allPassFilterSamples;\r\n}\r\n\r\nfunction Menu({ handleBack, waveData}) {\r\n  const filters = waveData[0].filters;\r\n  const [isGainModalOpen, setGainModalOpen] = useState(false);\r\n  const [isDelayModalOpen, setDelayModalOpen] = useState(false);\r\n  const [isDistortionModalOpen, setDistortionModalOpen] = useState(false);\r\n  const [isReverbModalOpen, setReverbModalOpen] = useState(false);\r\n  const [isEquaModalOpen, setEquaModalOpen] = useState(false);\r\n  const [isEquaInit, setEquaInit] = useState(false);\r\n  const [gainValue, setGainValue] = useState(100);\r\n  const [delayTime, setDelayTime] = useState(0.00);\r\n  const [feedback, setFeedback] = useState(0.00);\r\n  const [wetness, setWetness] = useState(0.00);\r\n  const [dryness, setDryness] = useState(0.00);\r\n  const [gainDistortValue, setGainDistortValue] = useState(100);\r\n  const [reverbTime, setReverbTime] = useState(0.00);\r\n  const [decay, setDecay] = useState(0.00);\r\n  const [reverbWet, setReverbWet] = useState(0.00);\r\n  const [filter0Val, setFilter0] = useState(filters[0].gain.value);\r\n  const [filter1Val, setFilter1] = useState(filters[1].gain.value);\r\n  const [filter2Val, setFilter2] = useState(filters[2].gain.value);\r\n  const [filter3Val, setFilter3] = useState(filters[3].gain.value);\r\n  const [filter4Val, setFilter4] = useState(filters[4].gain.value);\r\n  const [filter5Val, setFilter5] = useState(filters[5].gain.value);\r\n  const [filter6Val, setFilter6] = useState(filters[6].gain.value);\r\n  const [filter7Val, setFilter7] = useState(filters[7].gain.value);\r\n  const [filter8Val, setFilter8] = useState(filters[8].gain.value);\r\n  const [filter9Val, setFilter9] = useState(filters[9].gain.value);\r\n\r\n  if (isEquaInit === false) {\r\n    waveData[0].webAudioPlayer.gainNode.connect(filters[0])\r\n    filters[0].connect(filters[1]);\r\n    filters[1].connect(filters[2]);\r\n    filters[2].connect(filters[3]);\r\n    filters[3].connect(filters[4]);\r\n    filters[4].connect(filters[5]);\r\n    filters[5].connect(filters[6]);\r\n    filters[6].connect(filters[7]);\r\n    filters[7].connect(filters[8]);\r\n    filters[8].connect(filters[9]);\r\n    filters[9].connect(waveData[0].webAudioPlayer.audioContext.destination);\r\n  }\r\n  \r\n  const setFilter = () => {\r\n      filters[0].gain.value = filter0Val;\r\n      filters[1].gain.value = filter1Val;\r\n      filters[2].gain.value = filter2Val;\r\n      filters[3].gain.value = filter3Val;\r\n      filters[4].gain.value = filter4Val;\r\n      filters[5].gain.value = filter5Val;\r\n      filters[6].gain.value = filter6Val;\r\n      filters[7].gain.value = filter7Val;\r\n      filters[8].gain.value = filter8Val;\r\n      filters[9].gain.value = filter9Val;\r\n      console.log(\"EQ applied\")\r\n  }\r\n  \r\n  const undo = () => {\r\n    if (buffers.length >= 1) {\r\n      let blob = blobber(buffers.pop());\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  }\r\n\r\n  const reset = () => {\r\n    if (buffers.length >= 1) {\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blobber(buffers[0])).catch(error => console.log(error));\r\n      buffers = [];\r\n    }\r\n  }\r\n\r\n  const reverse = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer)\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    if (buffer) {\r\n      utils.reverse(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n      console.log(\"Reversed region.\");\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    } else {\r\n      console.error('No audio buffer loaded');\r\n    }\r\n  };\r\n\r\n  const invert = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer)\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    if (buffer) {\r\n      utils.invert(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n      console.log(\"Inverted region.\");\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    } else {\r\n      console.error('No audio buffer loaded');\r\n    }\r\n  };\r\n\r\n  const normalize = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer)\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    if (buffer) {\r\n      utils.normalize(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n      console.log(\"Normalized region.\");\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    } else {\r\n      console.error('No audio buffer loaded');\r\n    }\r\n  };\r\n\r\n  const openGainModal = () => setGainModalOpen(true);\r\n  const closeGainModal = () => setGainModalOpen(false);\r\n\r\n  const adjustGain = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer)\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let gain = gainValue / 100;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] *= gain;\r\n        }\r\n      }\r\n      console.log('Gain adjusted:', gain);\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const fadeIn = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer)\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let stepInc = 1 / (end-start);\r\n    let currGain = 0;\r\n    let steps = 0;\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] *= (currGain + (steps * stepInc));\r\n            steps += 1;\r\n        }\r\n        steps = 0;\r\n      }\r\n      console.log('Region Faded In');\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const fadeOut = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer)\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let stepInc = 1 / (end-start);\r\n    let currGain = 1;\r\n    let steps = 0;\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] *= (currGain - (steps * stepInc));\r\n            steps += 1;\r\n        }\r\n        steps = 0;\r\n      }\r\n      console.log('Region Faded In');\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const openDistortionModal = () => setDistortionModalOpen(true);\r\n  const closeDistortionModal = () => setDistortionModalOpen(false);\r\n\r\n  const distort = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer)\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let gain = gainDistortValue / 100;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] = Math.atan(gain*channelData[sample]);\r\n        }\r\n      }\r\n      console.log('Distorted Region', gain);\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const openDelayModal = () => setDelayModalOpen(true);\r\n  const closeDelayModal = () => setDelayModalOpen(false);\r\n\r\n  const delay = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer)\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let wet = wetness;\r\n    let dry = dryness;\r\n    let feeder = feedback;\r\n    let index = 0;\r\n\r\n    if (buffer) {\r\n      let numChannels = buffer.numberOfChannels;\r\n      if (numChannels === 1) {\r\n        let channelData = buffer.getChannelData(0);\r\n        let delayBuffer = new Float32Array(channelData.subarray(start, end + 1));\r\n        for (let sample = start; sample < end; sample += 1) {\r\n          let delayed = delayBuffer[index];\r\n          channelData[sample] = (channelData[sample] * dry) + (delayed * wet) ;\r\n          delayBuffer[index] = feeder * (delayed + channelData[sample]);\r\n          index += 1;\r\n        }\r\n      } else if (numChannels === 2) {\r\n        let channelLeft = buffer.getChannelData(0);\r\n        let channelRight = buffer.getChannelData(1);\r\n        let delayLeft = new Float32Array(channelLeft.subarray(start, end + 1));\r\n        let delayRight = new Float32Array(channelRight.subarray(start, end + 1));\r\n        delayLeft = channelLeft;\r\n        delayRight = channelRight;\r\n        for (let sample = start; sample < end; sample += 1) {\r\n          let delayed_left = delayLeft[index];\r\n          let delayed_right = delayRight[index];\r\n          channelLeft[sample] = (channelLeft[sample] * dry) + (delayed_left * wet) ;\r\n          channelRight[sample] = (channelRight[sample] * dry) + (delayed_right * wet) ;\r\n          delayLeft[index] = feeder * (delayed_left + channelLeft[sample]);\r\n          delayRight[index] = feeder * (delayed_right + channelRight[sample]);\r\n          index += 1;\r\n        }\r\n      }\r\n      console.log('Region Delayed');\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const openReverbModal = () => setReverbModalOpen(true);\r\n  const closeReverbModal = () => setReverbModalOpen(false);\r\n\r\n  const reverb = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer)\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let bufferSize = end - start;\r\n    let channelLeft = buffer.getChannelData(0);\r\n    let channelRight = buffer.getChannelData(1);\r\n    let samplesLeft = new Float32Array(channelLeft.subarray(start, end + 1));\r\n    let samplesRight = new Float32Array(channelRight.subarray(start, end + 1));\r\n    let delayinMilliSeconds = reverbTime * 1000;\r\n    let decayFactor = decay;\r\n    let combFilterSamplesLeft1 = combFilter(samplesLeft, bufferSize, delayinMilliSeconds, decayFactor, sampleRate);\r\n    let combFilterSamplesLeft2 = combFilter(samplesLeft, bufferSize, (delayinMilliSeconds - 11.73), (decayFactor - 0.1313), sampleRate);\r\n    let combFilterSamplesRight1 = combFilter(samplesRight, bufferSize, delayinMilliSeconds, decayFactor, sampleRate);\r\n    let combFilterSamplesRight2 = combFilter(samplesRight, bufferSize, (delayinMilliSeconds - 11.73), (decayFactor - 0.1313), sampleRate);\r\n    let outputCombLeft = new Float32Array(bufferSize);\r\n    let outputCombRight = new Float32Array(bufferSize);\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      outputCombLeft[i] = ((combFilterSamplesLeft1[i] + combFilterSamplesLeft2[i])) ;\r\n    }\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      outputCombRight[i] = ((combFilterSamplesRight1[i] + combFilterSamplesRight2[i])) ;\r\n    }\r\n    let audioMixLeft = new Float32Array(bufferSize);\r\n    let audioMixRight = new Float32Array(bufferSize);\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      audioMixLeft[i] = ((1 - reverbWet) * samplesLeft[i]) + (reverbWet * outputCombLeft[i]);\r\n    }\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      audioMixRight[i] = ((1 - reverbWet) * samplesRight[i]) + (reverbWet * outputCombRight[i]);\r\n    }\r\n    let allPassFilterSamplesLeft1 = allPassFilter(audioMixLeft, bufferSize, sampleRate);\r\n    let allPassFilterSamplesLeft2 = allPassFilter(allPassFilterSamplesLeft1, bufferSize, sampleRate);\r\n    let allPassFilterSamplesRight1 = allPassFilter(audioMixRight, bufferSize, sampleRate);\r\n    let allPassFilterSamplesRight2 = allPassFilter(allPassFilterSamplesRight1, bufferSize, sampleRate);\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      channelLeft[start + i] = allPassFilterSamplesLeft2[i];\r\n      channelRight[start + i] = allPassFilterSamplesRight2[i];\r\n    }\r\n    console.log('Reverb Applied');\r\n    let blob = blobber(buffer);\r\n    waveData[0].waveSurfer.empty();\r\n    waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n  }\r\n\r\n  const closeEquaModal = () => setEquaModalOpen(false);\r\n  const openEquaModal = () => {\r\n    setEquaInit(true);\r\n    setEquaModalOpen(true);\r\n  }\r\n  \r\n\r\n  return (\r\n    <div style={menubackground}>\r\n      <div style={contentStyle}>\r\n        <button style={backButtonStyle} onClick={handleBack}>Back</button>\r\n\r\n        <button style={reverseButtonStyle} onClick={reverse}>\r\n          Reverse Selected Region\r\n        </button>\r\n\r\n        <button style={reverseButtonStyle} onClick={invert}>\r\n          Invert Selected Region\r\n        </button>\r\n\r\n        <button style={reverseButtonStyle} onClick={normalize}>\r\n          Normalize Selected Region\r\n        </button>\r\n\r\n        <button style={reverseButtonStyle} onClick={fadeIn}>\r\n          Fade In Region\r\n        </button>\r\n\r\n        <button style={reverseButtonStyle} onClick={fadeOut}>\r\n          Fade Out Region\r\n        </button>\r\n        \r\n        <button style={adjustGainButtonStyle} onClick={openGainModal}>\r\n          Adjust Gain\r\n        </button>\r\n\r\n        {isGainModalOpen && (\r\n          <>\r\n             <div style={overlayStyle} onClick={closeGainModal} />\r\n              <div style={modalStyle}>\r\n                <h2>Gain Percentage</h2>\r\n                <input\r\n                  id=\"gains\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"200\"\r\n                  step=\"0.01\"\r\n                  value={gainValue}\r\n                  onInput={(e) => setGainValue(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"gainVal\">{gainValue}%</output>\r\n              <button onClick={closeGainModal} style={backButtonStyle}>Close</button>\r\n              <button onClick={adjustGain} style={backButtonStyle}>Apply Gain</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <button style={adjustGainButtonStyle} onClick={openDelayModal}>\r\n          Adjust Delay\r\n        </button>\r\n\r\n        {isDelayModalOpen && (\r\n          <>\r\n             <div style={overlayStyle} onClick={closeDelayModal} />\r\n              <div style={modalStyle}>\r\n                <h2>Delay Time</h2>\r\n                <input\r\n                  id=\"delayT\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"6\"\r\n                  step=\"0.01\"\r\n                  value={delayTime}\r\n                  onInput={(e) => setDelayTime(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"delayVal\">{delayTime}</output>\r\n\r\n                <h2>Feedback</h2>\r\n                <input\r\n                  id=\"feedback\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={feedback}\r\n                  onInput={(e) => setFeedback(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"feedVal\">{feedback}</output>\r\n\r\n                <h2>Wet</h2>\r\n                <input\r\n                  id=\"wets\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={wetness}\r\n                  onInput={(e) => setWetness(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"wetVal\">{wetness}</output>\r\n\r\n                <h2>Dry</h2>\r\n                <input\r\n                  id=\"dryer\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={dryness}\r\n                  onInput={(e) => setDryness(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"dryVal\">{dryness}</output>\r\n              <button onClick={closeDelayModal} style={backButtonStyle}>Close</button>\r\n              <button onClick={delay} style={backButtonStyle}>Apply Delay</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <button style={adjustGainButtonStyle} onClick={openDistortionModal}>\r\n          Apply Distortion\r\n        </button>\r\n\r\n        {isDistortionModalOpen && (\r\n          <>\r\n             <div style={overlayStyle} onClick={closeDistortionModal} />\r\n              <div style={modalStyle}>\r\n                <h2>Gain Percentage</h2>\r\n                <input\r\n                  id=\"gains\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"200\"\r\n                  step=\"0.01\"\r\n                  value={gainDistortValue}\r\n                  onInput={(e) => setGainDistortValue(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"gainDistortVal\">{gainDistortValue}%</output>\r\n              <button onClick={closeDistortionModal} style={backButtonStyle}>Close</button>\r\n              <button onClick={distort} style={backButtonStyle}>Apply Distortion</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <button style={adjustGainButtonStyle} onClick={openReverbModal}>\r\n          Apply Reverb\r\n        </button>\r\n\r\n        {isReverbModalOpen && (\r\n          <>\r\n             <div style={overlayStyle} onClick={closeReverbModal} />\r\n              <div style={modalStyle}>\r\n                <h2>Time</h2>\r\n                <input\r\n                  id=\"reverbT\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"3\"\r\n                  step=\"0.01\"\r\n                  value={reverbTime}\r\n                  onInput={(e) => setReverbTime(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"reverbTime\">{reverbTime}</output>\r\n\r\n                <h2>Decay</h2>\r\n                <input\r\n                  id=\"decay\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"3\"\r\n                  step=\"0.01\"\r\n                  value={decay}\r\n                  onInput={(e) => setDecay(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"decayVal\">{decay}</output>\r\n\r\n                <h2>Wet</h2>\r\n                <input\r\n                  id=\"wetR\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={reverbWet}\r\n                  onInput={(e) => setReverbWet(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"wetRVal\">{reverbWet}</output>\r\n\r\n              <button onClick={closeReverbModal} style={backButtonStyle}>Close</button>\r\n              <button onClick={reverb} style={backButtonStyle}>Apply Reverb</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <button style={adjustGainButtonStyle} onClick={openEquaModal}>\r\n          10-Band Equalizer\r\n        </button>\r\n\r\n        {isEquaModalOpen && (\r\n          <>\r\n             <div style={overlayStyle} onClick={closeEquaModal} />\r\n              <div style={modalStyle}>\r\n              <div style={{ display: 'flex', gap: '5px' }}>\r\n                <div style={sliderContainerStyle}>\r\n                  <h2>32Hz</h2>\r\n                    <input\r\n                      id=\"filter0\"\r\n                      type=\"range\"\r\n                      min=\"-40\"\r\n                      max=\"40\"\r\n                      step=\"0.1\"\r\n                      value={filter0Val}\r\n                      onInput={(e) => setFilter0(e.target.value)}\r\n                      style={verticalSliderStyle}\r\n                    />\r\n                    <output id=\"0\">{filter0Val} dB</output>\r\n                </div>\r\n                \r\n                <div style={sliderContainerStyle}>\r\n                  <h2>64Hz</h2>\r\n                    <input\r\n                      id=\"filter1\"\r\n                      type=\"range\"\r\n                      min=\"-40\"\r\n                      max=\"40\"\r\n                      step=\"0.1\"\r\n                      value={filter1Val}\r\n                      onInput={(e) => setFilter1(e.target.value)}\r\n                      style={verticalSliderStyle}\r\n                    />\r\n                    <output id=\"1\">{filter1Val} dB</output>\r\n                </div>\r\n\r\n                <div style={sliderContainerStyle}>\r\n                  <h2>125Hz</h2>\r\n                  <input\r\n                    id=\"filter2\"\r\n                    type=\"range\"\r\n                    min=\"-40\"\r\n                    max=\"40\"\r\n                    step=\"0.1\"\r\n                    value={filter2Val}\r\n                    onInput={(e) => setFilter2(e.target.value)}\r\n                    style={verticalSliderStyle}\r\n                  />\r\n                  <output id=\"2\">{filter2Val} dB</output>\r\n                  </div>\r\n\r\n                <div style={sliderContainerStyle}> \r\n                <h2>250Hz</h2>\r\n                <input\r\n                  id=\"filter3\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter3Val}\r\n                  onInput={(e) => setFilter3(e.target.value)}\r\n                  style={verticalSliderStyle}\r\n                />\r\n                <output id=\"3\">{filter3Val} dB</output>\r\n                </div>\r\n                 \r\n                <div style={sliderContainerStyle}>\r\n                <h2>500Hz</h2>\r\n                <input\r\n                  id=\"filter4\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter4Val}\r\n                  onInput={(e) => setFilter4(e.target.value)}\r\n                  style={verticalSliderStyle}\r\n                />\r\n                <output id=\"4\">{filter4Val} dB</output>\r\n                </div>\r\n                 \r\n\r\n                <div style={sliderContainerStyle}>\r\n                <h2>1000Hz</h2>\r\n                <input\r\n                  id=\"filter5\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter5Val}\r\n                  onInput={(e) => setFilter5(e.target.value)}\r\n                  style={verticalSliderStyle}\r\n                />\r\n                <output id=\"5\">{filter5Val} dB</output>\r\n                </div>\r\n                 \r\n                <div style={sliderContainerStyle}>\r\n                <h2>2000Hz</h2>\r\n                <input\r\n                  id=\"filter6\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter6Val}\r\n                  onInput={(e) => setFilter6(e.target.value)}\r\n                  style={verticalSliderStyle}\r\n                />\r\n                <output id=\"6\">{filter6Val} dB</output>\r\n                </div>\r\n                 \r\n                <div style={sliderContainerStyle}>\r\n                <h2>4000Hz</h2>\r\n                <input\r\n                  id=\"filter7\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter7Val}\r\n                  onInput={(e) => setFilter7(e.target.value)}\r\n                  style={verticalSliderStyle}\r\n                />\r\n                <output id=\"7\">{filter7Val} dB</output>\r\n                </div>\r\n                 \r\n                <div style={sliderContainerStyle}>\r\n                <h2>8000Hz</h2>\r\n                <input\r\n                  id=\"filter8\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter8Val}\r\n                  onInput={(e) => setFilter8(e.target.value)}\r\n                  style={verticalSliderStyle}\r\n                />\r\n                <output id=\"8\">{filter8Val} dB</output>\r\n                </div>\r\n                 \r\n                <div style={sliderContainerStyle}>\r\n                <h2>16000Hz</h2>\r\n                <input\r\n                  id=\"filter9\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter9Val}\r\n                  onInput={(e) => setFilter9(e.target.value)}\r\n                  style={verticalSliderStyle}\r\n                />\r\n                <output id=\"9\">{filter9Val} dB</output>\r\n                </div>\r\n\r\n              <button onClick={closeEquaModal} style={backButtonStyle}>Close</button>\r\n              <button onClick={setFilter} style={backButtonStyle}>Apply EQ</button>\r\n\r\n            </div>\r\n            </div>\r\n          </>\r\n        )}\r\n        <button style={adjustGainButtonStyle} onClick={undo}>\r\n          Undo\r\n        </button>\r\n\r\n        <button style={adjustGainButtonStyle} onClick={reset}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,KAAK;EACZC,MAAM,EAAE,MAAM;EACdC,OAAO,EAAE,MAAM;EACfC,aAAa,EAAE,QAAQ;EACvBC,cAAc,EAAE,YAAY;EAC5BC,UAAU,EAAE,MAAM;EAClBC,MAAM,EAAE,mBAAmB;EAC3BC,eAAe,EAAE,SAAS;EAC1BC,UAAU,EAAE,wBAAwB;EACpCC,QAAQ,EAAE,QAAQ;EAClBC,SAAS,EAAE,2CAA2C;EACtDJ,MAAM,EAAE,MAAM;EACdK,QAAQ,EAAE,OAAO;EACjBC,GAAG,EAAE,GAAG;EACRC,IAAI,EAAE,GAAG;EACTC,MAAM,EAAE,MAAM;EACdC,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE,MAAM;EAAE;EACnBC,SAAS,EAAE,MAAM,CAAE;AACrB,CAAC;AAED,MAAMC,eAAe,GAAG;EACtBC,SAAS,EAAE,MAAM;EACjBC,UAAU,EAAE,SAAS;EACrBC,KAAK,EAAE,MAAM;EACbf,MAAM,EAAE,MAAM;EACdgB,OAAO,EAAE,WAAW;EACpBC,YAAY,EAAE,KAAK;EACnBC,MAAM,EAAE,SAAS;EACjBf,QAAQ,EAAE,MAAM;EAChBgB,SAAS,EAAE,QAAQ;EACnBzB,KAAK,EAAE,MAAM;EACbE,OAAO,EAAE,cAAc;EACvBwB,UAAU,EAAE;AACd,CAAC;AAED,MAAMC,kBAAkB,GAAG;EACzB,GAAGT,eAAe;EAClBE,UAAU,EAAE,SAAS,CAAE;AACzB,CAAC;AAED,MAAMQ,WAAW,GAAG;EAClB5B,KAAK,EAAE,KAAK;EACZ6B,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,qBAAqB,GAAG;EAC5B,GAAGZ,eAAe;EAClBE,UAAU,EAAE,SAAS,CAAE;AACzB,CAAC;AAGD,MAAMW,UAAU,GAAG;EACjBpB,QAAQ,EAAE,OAAO;EACjBC,GAAG,EAAE,KAAK;EACVC,IAAI,EAAE,KAAK;EACXmB,SAAS,EAAE,uBAAuB;EAClChC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,MAAM;EACdM,eAAe,EAAE,MAAM;EACvBe,OAAO,EAAE,MAAM;EACfC,YAAY,EAAE,MAAM;EACpBb,SAAS,EAAE,iCAAiC;EAC5CI,MAAM,EAAE,MAAM;EACdZ,OAAO,EAAE,MAAM;EACfC,aAAa,EAAE,QAAQ;EACvBE,UAAU,EAAE;AACd,CAAC;AAED,MAAM4B,YAAY,GAAG;EACnBtB,QAAQ,EAAE,OAAO;EACjBC,GAAG,EAAE,GAAG;EACRC,IAAI,EAAE,GAAG;EACTqB,KAAK,EAAE,GAAG;EACVC,MAAM,EAAE,GAAG;EACX5B,eAAe,EAAE,oBAAoB;EACrCO,MAAM,EAAE;AACV,CAAC;AAED,MAAMsB,YAAY,GAAG;EACnBC,QAAQ,EAAE,CAAC;EACXtB,UAAU,EAAE;AACd,CAAC;AAED,MAAMuB,mBAAmB,GAAG;EAC1BC,MAAM,EAAE,UAAU;EAAE;EACpBC,UAAU,EAAG;AACf,CAAC;AAED,MAAMC,oBAAoB,GAAG;EAC3BvC,OAAO,EAAE,MAAM;EACfC,aAAa,EAAE,QAAQ;EACvBE,UAAU,EAAE;AACd,CAAC;AAED,IAAIqC,KAAK,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACzC,IAAIC,OAAO,GAAGD,OAAO,CAAC,qBAAqB,CAAC;AAE5C,IAAIE,OAAO,GAAG,EAAE;AAChB,SAASC,WAAWA,CAAEC,MAAM,EAAE;EAC5BF,OAAO,CAACG,IAAI,CAACD,MAAM,CAAC;AACtB;AAEA,SAASE,UAAUA,CAAEC,OAAO,EAAEC,YAAY,EAAEC,KAAK,EAAEC,KAAK,EAAEC,UAAU,EAAE;EACpE,IAAIC,YAAY,GAAGC,IAAI,CAACC,IAAI,CAACL,KAAK,IAAIE,UAAU,GAAG,IAAI,CAAC,CAAC;EACzD,IAAII,iBAAiB,GAAGR,OAAO;EAC/B,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,YAAY,GAAGI,YAAY,EAAEI,CAAC,EAAE,EAAE;IACpDD,iBAAiB,CAACC,CAAC,GAACJ,YAAY,CAAC,IAAIG,iBAAiB,CAACC,CAAC,CAAC,GAAGN,KAAK;EACnE;EACA,OAAOK,iBAAiB;AAC1B;AAEA,SAASE,aAAaA,CAAEV,OAAO,EAAEC,YAAY,EAAEG,UAAU,EAAE;EACzD,IAAIC,YAAY,GAAGC,IAAI,CAACC,IAAI,CAAC,KAAK,IAAIH,UAAU,GAAC,IAAI,CAAC,CAAC;EACvD,IAAIO,oBAAoB,GAAG,IAAIC,YAAY,CAACX,YAAY,CAAC;EACzD,IAAIY,WAAW,GAAG,KAAK;EACvB,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,YAAY,EAAEQ,CAAC,EAAE,EAAE;IACrCE,oBAAoB,CAACF,CAAC,CAAC,GAAGT,OAAO,CAACS,CAAC,CAAC;IACpC,IAAIA,CAAC,GAAGJ,YAAY,IAAI,CAAC,EAAE;MACzBM,oBAAoB,CAACF,CAAC,CAAC,IAAIE,oBAAoB,CAACF,CAAC,GAACJ,YAAY,CAAC,GAAI,CAACQ,WAAY;IAClF;IACA,IAAIJ,CAAC,GAAGJ,YAAY,IAAI,CAAC,EAAE;MACzBM,oBAAoB,CAACF,CAAC,CAAC,IAAIE,oBAAoB,CAACF,CAAC,GAAC,EAAE,GAACJ,YAAY,CAAC,GAAGQ,WAAW;IAClF;EACF;EACA,IAAIC,GAAG,GAAGH,oBAAoB,CAAC,CAAC,CAAC;EACjC,IAAII,GAAG,GAAG,GAAG;EACb,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,YAAY,EAAEQ,CAAC,EAAE,EAAE;IACrC,IAAGH,IAAI,CAACU,GAAG,CAACL,oBAAoB,CAACF,CAAC,CAAC,CAAC,GAAGM,GAAG,EAAE;MAC1CA,GAAG,GAAGT,IAAI,CAACU,GAAG,CAACL,oBAAoB,CAACF,CAAC,CAAC,CAAC;IACzC;EACF;EACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGE,oBAAoB,CAACM,MAAM,EAAER,CAAC,EAAE,EAAE;IACpD,IAAIS,OAAO,GAAGP,oBAAoB,CAACF,CAAC,CAAC;IACrCK,GAAG,GAAG,CAACA,GAAG,IAAII,OAAO,GAAGJ,GAAG,CAAC,IAAIC,GAAG;IACnCJ,oBAAoB,CAACF,CAAC,CAAC,GAAGK,GAAG;EAC/B;EACA,OAAOH,oBAAoB;AAC7B;AAEA,SAASQ,IAAIA,CAAC;EAAEC,UAAU;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAMC,OAAO,GAAGF,QAAQ,CAAC,CAAC,CAAC,CAACE,OAAO;EACnC,MAAM,CAACC,eAAe,EAAEC,gBAAgB,CAAC,GAAGjF,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACkF,gBAAgB,EAAEC,iBAAiB,CAAC,GAAGnF,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACoF,qBAAqB,EAAEC,sBAAsB,CAAC,GAAGrF,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAM,CAACsF,iBAAiB,EAAEC,kBAAkB,CAAC,GAAGvF,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACwF,eAAe,EAAEC,gBAAgB,CAAC,GAAGzF,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAAC0F,UAAU,EAAEC,WAAW,CAAC,GAAG3F,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC4F,SAAS,EAAEC,YAAY,CAAC,GAAG7F,QAAQ,CAAC,GAAG,CAAC;EAC/C,MAAM,CAAC8F,SAAS,EAAEC,YAAY,CAAC,GAAG/F,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACgG,QAAQ,EAAEC,WAAW,CAAC,GAAGjG,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACkG,OAAO,EAAEC,UAAU,CAAC,GAAGnG,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACoG,OAAO,EAAEC,UAAU,CAAC,GAAGrG,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACsG,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGvG,QAAQ,CAAC,GAAG,CAAC;EAC7D,MAAM,CAACwG,UAAU,EAAEC,aAAa,CAAC,GAAGzG,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC2D,KAAK,EAAE+C,QAAQ,CAAC,GAAG1G,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC2G,SAAS,EAAEC,YAAY,CAAC,GAAG5G,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC6G,UAAU,EAAEC,UAAU,CAAC,GAAG9G,QAAQ,CAAC+E,OAAO,CAAC,CAAC,CAAC,CAACgC,IAAI,CAACC,KAAK,CAAC;EAChE,MAAM,CAACC,UAAU,EAAEC,UAAU,CAAC,GAAGlH,QAAQ,CAAC+E,OAAO,CAAC,CAAC,CAAC,CAACgC,IAAI,CAACC,KAAK,CAAC;EAChE,MAAM,CAACG,UAAU,EAAEC,UAAU,CAAC,GAAGpH,QAAQ,CAAC+E,OAAO,CAAC,CAAC,CAAC,CAACgC,IAAI,CAACC,KAAK,CAAC;EAChE,MAAM,CAACK,UAAU,EAAEC,UAAU,CAAC,GAAGtH,QAAQ,CAAC+E,OAAO,CAAC,CAAC,CAAC,CAACgC,IAAI,CAACC,KAAK,CAAC;EAChE,MAAM,CAACO,UAAU,EAAEC,UAAU,CAAC,GAAGxH,QAAQ,CAAC+E,OAAO,CAAC,CAAC,CAAC,CAACgC,IAAI,CAACC,KAAK,CAAC;EAChE,MAAM,CAACS,UAAU,EAAEC,UAAU,CAAC,GAAG1H,QAAQ,CAAC+E,OAAO,CAAC,CAAC,CAAC,CAACgC,IAAI,CAACC,KAAK,CAAC;EAChE,MAAM,CAACW,UAAU,EAAEC,UAAU,CAAC,GAAG5H,QAAQ,CAAC+E,OAAO,CAAC,CAAC,CAAC,CAACgC,IAAI,CAACC,KAAK,CAAC;EAChE,MAAM,CAACa,UAAU,EAAEC,UAAU,CAAC,GAAG9H,QAAQ,CAAC+E,OAAO,CAAC,CAAC,CAAC,CAACgC,IAAI,CAACC,KAAK,CAAC;EAChE,MAAM,CAACe,UAAU,EAAEC,UAAU,CAAC,GAAGhI,QAAQ,CAAC+E,OAAO,CAAC,CAAC,CAAC,CAACgC,IAAI,CAACC,KAAK,CAAC;EAChE,MAAM,CAACiB,UAAU,EAAEC,UAAU,CAAC,GAAGlI,QAAQ,CAAC+E,OAAO,CAAC,CAAC,CAAC,CAACgC,IAAI,CAACC,KAAK,CAAC;EAEhE,IAAItB,UAAU,KAAK,KAAK,EAAE;IACxBb,QAAQ,CAAC,CAAC,CAAC,CAACsD,cAAc,CAACC,QAAQ,CAACC,OAAO,CAACtD,OAAO,CAAC,CAAC,CAAC,CAAC;IACvDA,OAAO,CAAC,CAAC,CAAC,CAACsD,OAAO,CAACtD,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9BA,OAAO,CAAC,CAAC,CAAC,CAACsD,OAAO,CAACtD,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9BA,OAAO,CAAC,CAAC,CAAC,CAACsD,OAAO,CAACtD,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9BA,OAAO,CAAC,CAAC,CAAC,CAACsD,OAAO,CAACtD,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9BA,OAAO,CAAC,CAAC,CAAC,CAACsD,OAAO,CAACtD,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9BA,OAAO,CAAC,CAAC,CAAC,CAACsD,OAAO,CAACtD,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9BA,OAAO,CAAC,CAAC,CAAC,CAACsD,OAAO,CAACtD,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9BA,OAAO,CAAC,CAAC,CAAC,CAACsD,OAAO,CAACtD,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9BA,OAAO,CAAC,CAAC,CAAC,CAACsD,OAAO,CAACtD,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9BA,OAAO,CAAC,CAAC,CAAC,CAACsD,OAAO,CAACxD,QAAQ,CAAC,CAAC,CAAC,CAACsD,cAAc,CAACG,YAAY,CAACC,WAAW,CAAC;EACzE;EAEA,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACpBzD,OAAO,CAAC,CAAC,CAAC,CAACgC,IAAI,CAACC,KAAK,GAAGH,UAAU;IAClC9B,OAAO,CAAC,CAAC,CAAC,CAACgC,IAAI,CAACC,KAAK,GAAGC,UAAU;IAClClC,OAAO,CAAC,CAAC,CAAC,CAACgC,IAAI,CAACC,KAAK,GAAGG,UAAU;IAClCpC,OAAO,CAAC,CAAC,CAAC,CAACgC,IAAI,CAACC,KAAK,GAAGK,UAAU;IAClCtC,OAAO,CAAC,CAAC,CAAC,CAACgC,IAAI,CAACC,KAAK,GAAGO,UAAU;IAClCxC,OAAO,CAAC,CAAC,CAAC,CAACgC,IAAI,CAACC,KAAK,GAAGS,UAAU;IAClC1C,OAAO,CAAC,CAAC,CAAC,CAACgC,IAAI,CAACC,KAAK,GAAGW,UAAU;IAClC5C,OAAO,CAAC,CAAC,CAAC,CAACgC,IAAI,CAACC,KAAK,GAAGa,UAAU;IAClC9C,OAAO,CAAC,CAAC,CAAC,CAACgC,IAAI,CAACC,KAAK,GAAGe,UAAU;IAClChD,OAAO,CAAC,CAAC,CAAC,CAACgC,IAAI,CAACC,KAAK,GAAGiB,UAAU;IAClCQ,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAC7B,CAAC;EAED,MAAMC,IAAI,GAAGA,CAAA,KAAM;IACjB,IAAIxF,OAAO,CAACsB,MAAM,IAAI,CAAC,EAAE;MACvB,IAAImE,IAAI,GAAG1F,OAAO,CAACC,OAAO,CAAC0F,GAAG,CAAC,CAAC,CAAC;MACjChE,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACC,KAAK,CAAC,CAAC;MAC9BlE,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACE,QAAQ,CAACJ,IAAI,CAAC,CAACK,KAAK,CAACC,KAAK,IAAIT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC,CAAC;IAC1E;EACF,CAAC;EAED,MAAMC,KAAK,GAAGA,CAAA,KAAM;IAClB,IAAIhG,OAAO,CAACsB,MAAM,IAAI,CAAC,EAAE;MACvBI,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACC,KAAK,CAAC,CAAC;MAC9BlE,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACE,QAAQ,CAAC9F,OAAO,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC8F,KAAK,CAACC,KAAK,IAAIT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC,CAAC;MACvF/F,OAAO,GAAG,EAAE;IACd;EACF,CAAC;EAED,MAAMiG,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAI/F,MAAM,GAAGwB,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACO,cAAc,CAAC,CAAC;IACpD,IAAIC,KAAK,GAAGtG,KAAK,CAACsG,KAAK,CAACjG,MAAM,CAAC;IAC/BD,WAAW,CAACkG,KAAK,CAAC;IAClB,IAAIC,MAAM,GAAI1E,QAAQ,CAAC,CAAC,CAAC,CAAC2E,OAAO,CAACC,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC;IAClD,IAAI7F,UAAU,GAAGP,MAAM,CAACO,UAAU;IAClC,IAAIP,MAAM,EAAE;MACVL,KAAK,CAACoG,OAAO,CAAC/F,MAAM,EAAEA,MAAM,EAAEkG,MAAM,CAACG,KAAK,GAAG9F,UAAU,EAAE2F,MAAM,CAACI,GAAG,GAAG/F,UAAU,CAAC;MACjF6E,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/B,IAAIE,IAAI,GAAG1F,OAAO,CAACG,MAAM,CAAC;MAC1BwB,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACC,KAAK,CAAC,CAAC;MAC9BlE,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACE,QAAQ,CAACJ,IAAI,CAAC,CAACK,KAAK,CAACC,KAAK,IAAIT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC,CAAC;IAC1E,CAAC,MAAM;MACLT,OAAO,CAACS,KAAK,CAAC,wBAAwB,CAAC;IACzC;EACF,CAAC;EAED,MAAMU,MAAM,GAAGA,CAAA,KAAM;IACnB,IAAIvG,MAAM,GAAGwB,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACO,cAAc,CAAC,CAAC;IACpD,IAAIC,KAAK,GAAGtG,KAAK,CAACsG,KAAK,CAACjG,MAAM,CAAC;IAC/BD,WAAW,CAACkG,KAAK,CAAC;IAClB,IAAIC,MAAM,GAAI1E,QAAQ,CAAC,CAAC,CAAC,CAAC2E,OAAO,CAACC,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC;IAClD,IAAI7F,UAAU,GAAGP,MAAM,CAACO,UAAU;IAClC,IAAIP,MAAM,EAAE;MACVL,KAAK,CAAC4G,MAAM,CAACvG,MAAM,EAAEA,MAAM,EAAEkG,MAAM,CAACG,KAAK,GAAG9F,UAAU,EAAE2F,MAAM,CAACI,GAAG,GAAG/F,UAAU,CAAC;MAChF6E,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/B,IAAIE,IAAI,GAAG1F,OAAO,CAACG,MAAM,CAAC;MAC1BwB,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACC,KAAK,CAAC,CAAC;MAC9BlE,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACE,QAAQ,CAACJ,IAAI,CAAC,CAACK,KAAK,CAACC,KAAK,IAAIT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC,CAAC;IAC1E,CAAC,MAAM;MACLT,OAAO,CAACS,KAAK,CAAC,wBAAwB,CAAC;IACzC;EACF,CAAC;EAED,MAAMW,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAIxG,MAAM,GAAGwB,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACO,cAAc,CAAC,CAAC;IACpD,IAAIC,KAAK,GAAGtG,KAAK,CAACsG,KAAK,CAACjG,MAAM,CAAC;IAC/BD,WAAW,CAACkG,KAAK,CAAC;IAClB,IAAIC,MAAM,GAAI1E,QAAQ,CAAC,CAAC,CAAC,CAAC2E,OAAO,CAACC,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC;IAClD,IAAI7F,UAAU,GAAGP,MAAM,CAACO,UAAU;IAClC,IAAIP,MAAM,EAAE;MACVL,KAAK,CAAC6G,SAAS,CAACxG,MAAM,EAAEA,MAAM,EAAEkG,MAAM,CAACG,KAAK,GAAG9F,UAAU,EAAE2F,MAAM,CAACI,GAAG,GAAG/F,UAAU,CAAC;MACnF6E,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjC,IAAIE,IAAI,GAAG1F,OAAO,CAACG,MAAM,CAAC;MAC1BwB,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACC,KAAK,CAAC,CAAC;MAC9BlE,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACE,QAAQ,CAACJ,IAAI,CAAC,CAACK,KAAK,CAACC,KAAK,IAAIT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC,CAAC;IAC1E,CAAC,MAAM;MACLT,OAAO,CAACS,KAAK,CAAC,wBAAwB,CAAC;IACzC;EACF,CAAC;EAED,MAAMY,aAAa,GAAGA,CAAA,KAAM7E,gBAAgB,CAAC,IAAI,CAAC;EAClD,MAAM8E,cAAc,GAAGA,CAAA,KAAM9E,gBAAgB,CAAC,KAAK,CAAC;EAEpD,MAAM+E,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI3G,MAAM,GAAGwB,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACO,cAAc,CAAC,CAAC;IACpD,IAAIC,KAAK,GAAGtG,KAAK,CAACsG,KAAK,CAACjG,MAAM,CAAC;IAC/BD,WAAW,CAACkG,KAAK,CAAC;IAClB,IAAIC,MAAM,GAAI1E,QAAQ,CAAC,CAAC,CAAC,CAAC2E,OAAO,CAACC,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC;IAClD,IAAI7F,UAAU,GAAGP,MAAM,CAACO,UAAU;IAClC,IAAImD,IAAI,GAAGnB,SAAS,GAAG,GAAG;IAC1B,IAAI8D,KAAK,GAAG5F,IAAI,CAACmG,KAAK,CAACV,MAAM,CAACG,KAAK,GAAG9F,UAAU,CAAC;IACjD,IAAI+F,GAAG,GAAG7F,IAAI,CAACC,IAAI,CAACwF,MAAM,CAACI,GAAG,GAAG/F,UAAU,CAAC;IAE5C,IAAIP,MAAM,EAAE;MACV,KAAK,IAAI6G,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAG7G,MAAM,CAAC8G,gBAAgB,EAAED,OAAO,IAAI,CAAC,EAAE;QACrE,IAAIE,WAAW,GAAG/G,MAAM,CAACgH,cAAc,CAACH,OAAO,CAAC;QAEhD,KAAK,IAAII,MAAM,GAAGZ,KAAK,EAAEY,MAAM,GAAGX,GAAG,EAAEW,MAAM,IAAI,CAAC,EAAE;UAChDF,WAAW,CAACE,MAAM,CAAC,IAAIvD,IAAI;QAC/B;MACF;MACA0B,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE3B,IAAI,CAAC;MACnC,IAAI6B,IAAI,GAAG1F,OAAO,CAACG,MAAM,CAAC;MAC1BwB,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACC,KAAK,CAAC,CAAC;MAC9BlE,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACE,QAAQ,CAACJ,IAAI,CAAC,CAACK,KAAK,CAACC,KAAK,IAAIT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC,CAAC;IAC1E;EACF,CAAC;EAED,MAAMqB,MAAM,GAAGA,CAAA,KAAM;IACnB,IAAIlH,MAAM,GAAGwB,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACO,cAAc,CAAC,CAAC;IACpD,IAAIC,KAAK,GAAGtG,KAAK,CAACsG,KAAK,CAACjG,MAAM,CAAC;IAC/BD,WAAW,CAACkG,KAAK,CAAC;IAClB,IAAIC,MAAM,GAAI1E,QAAQ,CAAC,CAAC,CAAC,CAAC2E,OAAO,CAACC,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC;IAClD,IAAI7F,UAAU,GAAGP,MAAM,CAACO,UAAU;IAClC,IAAI8F,KAAK,GAAG5F,IAAI,CAACmG,KAAK,CAACV,MAAM,CAACG,KAAK,GAAG9F,UAAU,CAAC;IACjD,IAAI+F,GAAG,GAAG7F,IAAI,CAACC,IAAI,CAACwF,MAAM,CAACI,GAAG,GAAG/F,UAAU,CAAC;IAC5C,IAAI4G,OAAO,GAAG,CAAC,IAAIb,GAAG,GAACD,KAAK,CAAC;IAC7B,IAAIe,QAAQ,GAAG,CAAC;IAChB,IAAIC,KAAK,GAAG,CAAC;IAEb,IAAIrH,MAAM,EAAE;MACV,KAAK,IAAI6G,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAG7G,MAAM,CAAC8G,gBAAgB,EAAED,OAAO,IAAI,CAAC,EAAE;QACrE,IAAIE,WAAW,GAAG/G,MAAM,CAACgH,cAAc,CAACH,OAAO,CAAC;QAEhD,KAAK,IAAII,MAAM,GAAGZ,KAAK,EAAEY,MAAM,GAAGX,GAAG,EAAEW,MAAM,IAAI,CAAC,EAAE;UAChDF,WAAW,CAACE,MAAM,CAAC,IAAKG,QAAQ,GAAIC,KAAK,GAAGF,OAAS;UACrDE,KAAK,IAAI,CAAC;QACd;QACAA,KAAK,GAAG,CAAC;MACX;MACAjC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9B,IAAIE,IAAI,GAAG1F,OAAO,CAACG,MAAM,CAAC;MAC1BwB,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACC,KAAK,CAAC,CAAC;MAC9BlE,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACE,QAAQ,CAACJ,IAAI,CAAC,CAACK,KAAK,CAACC,KAAK,IAAIT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC,CAAC;IAC1E;EACF,CAAC;EAED,MAAMyB,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAItH,MAAM,GAAGwB,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACO,cAAc,CAAC,CAAC;IACpD,IAAIC,KAAK,GAAGtG,KAAK,CAACsG,KAAK,CAACjG,MAAM,CAAC;IAC/BD,WAAW,CAACkG,KAAK,CAAC;IAClB,IAAIC,MAAM,GAAI1E,QAAQ,CAAC,CAAC,CAAC,CAAC2E,OAAO,CAACC,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC;IAClD,IAAI7F,UAAU,GAAGP,MAAM,CAACO,UAAU;IAClC,IAAI8F,KAAK,GAAG5F,IAAI,CAACmG,KAAK,CAACV,MAAM,CAACG,KAAK,GAAG9F,UAAU,CAAC;IACjD,IAAI+F,GAAG,GAAG7F,IAAI,CAACC,IAAI,CAACwF,MAAM,CAACI,GAAG,GAAG/F,UAAU,CAAC;IAC5C,IAAI4G,OAAO,GAAG,CAAC,IAAIb,GAAG,GAACD,KAAK,CAAC;IAC7B,IAAIe,QAAQ,GAAG,CAAC;IAChB,IAAIC,KAAK,GAAG,CAAC;IAEb,IAAIrH,MAAM,EAAE;MACV,KAAK,IAAI6G,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAG7G,MAAM,CAAC8G,gBAAgB,EAAED,OAAO,IAAI,CAAC,EAAE;QACrE,IAAIE,WAAW,GAAG/G,MAAM,CAACgH,cAAc,CAACH,OAAO,CAAC;QAEhD,KAAK,IAAII,MAAM,GAAGZ,KAAK,EAAEY,MAAM,GAAGX,GAAG,EAAEW,MAAM,IAAI,CAAC,EAAE;UAChDF,WAAW,CAACE,MAAM,CAAC,IAAKG,QAAQ,GAAIC,KAAK,GAAGF,OAAS;UACrDE,KAAK,IAAI,CAAC;QACd;QACAA,KAAK,GAAG,CAAC;MACX;MACAjC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9B,IAAIE,IAAI,GAAG1F,OAAO,CAACG,MAAM,CAAC;MAC1BwB,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACC,KAAK,CAAC,CAAC;MAC9BlE,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACE,QAAQ,CAACJ,IAAI,CAAC,CAACK,KAAK,CAACC,KAAK,IAAIT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC,CAAC;IAC1E;EACF,CAAC;EAED,MAAM0B,mBAAmB,GAAGA,CAAA,KAAMvF,sBAAsB,CAAC,IAAI,CAAC;EAC9D,MAAMwF,oBAAoB,GAAGA,CAAA,KAAMxF,sBAAsB,CAAC,KAAK,CAAC;EAEhE,MAAMyF,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIzH,MAAM,GAAGwB,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACO,cAAc,CAAC,CAAC;IACpD,IAAIC,KAAK,GAAGtG,KAAK,CAACsG,KAAK,CAACjG,MAAM,CAAC;IAC/BD,WAAW,CAACkG,KAAK,CAAC;IAClB,IAAIC,MAAM,GAAI1E,QAAQ,CAAC,CAAC,CAAC,CAAC2E,OAAO,CAACC,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC;IAClD,IAAI7F,UAAU,GAAGP,MAAM,CAACO,UAAU;IAClC,IAAImD,IAAI,GAAGT,gBAAgB,GAAG,GAAG;IACjC,IAAIoD,KAAK,GAAG5F,IAAI,CAACmG,KAAK,CAACV,MAAM,CAACG,KAAK,GAAG9F,UAAU,CAAC;IACjD,IAAI+F,GAAG,GAAG7F,IAAI,CAACC,IAAI,CAACwF,MAAM,CAACI,GAAG,GAAG/F,UAAU,CAAC;IAE5C,IAAIP,MAAM,EAAE;MACV,KAAK,IAAI6G,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAG7G,MAAM,CAAC8G,gBAAgB,EAAED,OAAO,IAAI,CAAC,EAAE;QACrE,IAAIE,WAAW,GAAG/G,MAAM,CAACgH,cAAc,CAACH,OAAO,CAAC;QAEhD,KAAK,IAAII,MAAM,GAAGZ,KAAK,EAAEY,MAAM,GAAGX,GAAG,EAAEW,MAAM,IAAI,CAAC,EAAE;UAChDF,WAAW,CAACE,MAAM,CAAC,GAAGxG,IAAI,CAACiH,IAAI,CAAChE,IAAI,GAACqD,WAAW,CAACE,MAAM,CAAC,CAAC;QAC7D;MACF;MACA7B,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE3B,IAAI,CAAC;MACrC,IAAI6B,IAAI,GAAG1F,OAAO,CAACG,MAAM,CAAC;MAC1BwB,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACC,KAAK,CAAC,CAAC;MAC9BlE,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACE,QAAQ,CAACJ,IAAI,CAAC,CAACK,KAAK,CAACC,KAAK,IAAIT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC,CAAC;IAC1E;EACF,CAAC;EAED,MAAM8B,cAAc,GAAGA,CAAA,KAAM7F,iBAAiB,CAAC,IAAI,CAAC;EACpD,MAAM8F,eAAe,GAAGA,CAAA,KAAM9F,iBAAiB,CAAC,KAAK,CAAC;EAEtD,MAAMzB,KAAK,GAAGA,CAAA,KAAM;IAClB,IAAIL,MAAM,GAAGwB,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACO,cAAc,CAAC,CAAC;IACpD,IAAIC,KAAK,GAAGtG,KAAK,CAACsG,KAAK,CAACjG,MAAM,CAAC;IAC/BD,WAAW,CAACkG,KAAK,CAAC;IAClB,IAAIC,MAAM,GAAI1E,QAAQ,CAAC,CAAC,CAAC,CAAC2E,OAAO,CAACC,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC;IAClD,IAAI7F,UAAU,GAAGP,MAAM,CAACO,UAAU;IAClC,IAAI8F,KAAK,GAAG5F,IAAI,CAACmG,KAAK,CAACV,MAAM,CAACG,KAAK,GAAG9F,UAAU,CAAC;IACjD,IAAI+F,GAAG,GAAG7F,IAAI,CAACC,IAAI,CAACwF,MAAM,CAACI,GAAG,GAAG/F,UAAU,CAAC;IAC5C,IAAIsH,GAAG,GAAGhF,OAAO;IACjB,IAAIiF,GAAG,GAAG/E,OAAO;IACjB,IAAIgF,MAAM,GAAGpF,QAAQ;IACrB,IAAIqF,KAAK,GAAG,CAAC;IAEb,IAAIhI,MAAM,EAAE;MACV,IAAIiI,WAAW,GAAGjI,MAAM,CAAC8G,gBAAgB;MACzC,IAAImB,WAAW,KAAK,CAAC,EAAE;QACrB,IAAIlB,WAAW,GAAG/G,MAAM,CAACgH,cAAc,CAAC,CAAC,CAAC;QAC1C,IAAIkB,WAAW,GAAG,IAAInH,YAAY,CAACgG,WAAW,CAACoB,QAAQ,CAAC9B,KAAK,EAAEC,GAAG,GAAG,CAAC,CAAC,CAAC;QACxE,KAAK,IAAIW,MAAM,GAAGZ,KAAK,EAAEY,MAAM,GAAGX,GAAG,EAAEW,MAAM,IAAI,CAAC,EAAE;UAClD,IAAImB,OAAO,GAAGF,WAAW,CAACF,KAAK,CAAC;UAChCjB,WAAW,CAACE,MAAM,CAAC,GAAIF,WAAW,CAACE,MAAM,CAAC,GAAGa,GAAG,GAAKM,OAAO,GAAGP,GAAI;UACnEK,WAAW,CAACF,KAAK,CAAC,GAAGD,MAAM,IAAIK,OAAO,GAAGrB,WAAW,CAACE,MAAM,CAAC,CAAC;UAC7De,KAAK,IAAI,CAAC;QACZ;MACF,CAAC,MAAM,IAAIC,WAAW,KAAK,CAAC,EAAE;QAC5B,IAAII,WAAW,GAAGrI,MAAM,CAACgH,cAAc,CAAC,CAAC,CAAC;QAC1C,IAAIsB,YAAY,GAAGtI,MAAM,CAACgH,cAAc,CAAC,CAAC,CAAC;QAC3C,IAAIuB,SAAS,GAAG,IAAIxH,YAAY,CAACsH,WAAW,CAACF,QAAQ,CAAC9B,KAAK,EAAEC,GAAG,GAAG,CAAC,CAAC,CAAC;QACtE,IAAIkC,UAAU,GAAG,IAAIzH,YAAY,CAACuH,YAAY,CAACH,QAAQ,CAAC9B,KAAK,EAAEC,GAAG,GAAG,CAAC,CAAC,CAAC;QACxEiC,SAAS,GAAGF,WAAW;QACvBG,UAAU,GAAGF,YAAY;QACzB,KAAK,IAAIrB,MAAM,GAAGZ,KAAK,EAAEY,MAAM,GAAGX,GAAG,EAAEW,MAAM,IAAI,CAAC,EAAE;UAClD,IAAIwB,YAAY,GAAGF,SAAS,CAACP,KAAK,CAAC;UACnC,IAAIU,aAAa,GAAGF,UAAU,CAACR,KAAK,CAAC;UACrCK,WAAW,CAACpB,MAAM,CAAC,GAAIoB,WAAW,CAACpB,MAAM,CAAC,GAAGa,GAAG,GAAKW,YAAY,GAAGZ,GAAI;UACxES,YAAY,CAACrB,MAAM,CAAC,GAAIqB,YAAY,CAACrB,MAAM,CAAC,GAAGa,GAAG,GAAKY,aAAa,GAAGb,GAAI;UAC3EU,SAAS,CAACP,KAAK,CAAC,GAAGD,MAAM,IAAIU,YAAY,GAAGJ,WAAW,CAACpB,MAAM,CAAC,CAAC;UAChEuB,UAAU,CAACR,KAAK,CAAC,GAAGD,MAAM,IAAIW,aAAa,GAAGJ,YAAY,CAACrB,MAAM,CAAC,CAAC;UACnEe,KAAK,IAAI,CAAC;QACZ;MACF;MACA5C,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC7B,IAAIE,IAAI,GAAG1F,OAAO,CAACG,MAAM,CAAC;MAC1BwB,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACC,KAAK,CAAC,CAAC;MAC9BlE,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACE,QAAQ,CAACJ,IAAI,CAAC,CAACK,KAAK,CAACC,KAAK,IAAIT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC,CAAC;IAC1E;EACF,CAAC;EAED,MAAM8C,eAAe,GAAGA,CAAA,KAAMzG,kBAAkB,CAAC,IAAI,CAAC;EACtD,MAAM0G,gBAAgB,GAAGA,CAAA,KAAM1G,kBAAkB,CAAC,KAAK,CAAC;EAExD,MAAM2G,MAAM,GAAGA,CAAA,KAAM;IACnB,IAAI7I,MAAM,GAAGwB,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACO,cAAc,CAAC,CAAC;IACpD,IAAIC,KAAK,GAAGtG,KAAK,CAACsG,KAAK,CAACjG,MAAM,CAAC;IAC/BD,WAAW,CAACkG,KAAK,CAAC;IAClB,IAAIC,MAAM,GAAI1E,QAAQ,CAAC,CAAC,CAAC,CAAC2E,OAAO,CAACC,UAAU,CAAC,CAAC,CAAE,CAAC,CAAC;IAClD,IAAI7F,UAAU,GAAGP,MAAM,CAACO,UAAU;IAClC,IAAI8F,KAAK,GAAG5F,IAAI,CAACmG,KAAK,CAACV,MAAM,CAACG,KAAK,GAAG9F,UAAU,CAAC;IACjD,IAAI+F,GAAG,GAAG7F,IAAI,CAACC,IAAI,CAACwF,MAAM,CAACI,GAAG,GAAG/F,UAAU,CAAC;IAC5C,IAAIuI,UAAU,GAAGxC,GAAG,GAAGD,KAAK;IAC5B,IAAIgC,WAAW,GAAGrI,MAAM,CAACgH,cAAc,CAAC,CAAC,CAAC;IAC1C,IAAIsB,YAAY,GAAGtI,MAAM,CAACgH,cAAc,CAAC,CAAC,CAAC;IAC3C,IAAI+B,WAAW,GAAG,IAAIhI,YAAY,CAACsH,WAAW,CAACF,QAAQ,CAAC9B,KAAK,EAAEC,GAAG,GAAG,CAAC,CAAC,CAAC;IACxE,IAAI0C,YAAY,GAAG,IAAIjI,YAAY,CAACuH,YAAY,CAACH,QAAQ,CAAC9B,KAAK,EAAEC,GAAG,GAAG,CAAC,CAAC,CAAC;IAC1E,IAAI2C,mBAAmB,GAAG9F,UAAU,GAAG,IAAI;IAC3C,IAAInC,WAAW,GAAGV,KAAK;IACvB,IAAI4I,sBAAsB,GAAGhJ,UAAU,CAAC6I,WAAW,EAAED,UAAU,EAAEG,mBAAmB,EAAEjI,WAAW,EAAET,UAAU,CAAC;IAC9G,IAAI4I,sBAAsB,GAAGjJ,UAAU,CAAC6I,WAAW,EAAED,UAAU,EAAGG,mBAAmB,GAAG,KAAK,EAAIjI,WAAW,GAAG,MAAM,EAAGT,UAAU,CAAC;IACnI,IAAI6I,uBAAuB,GAAGlJ,UAAU,CAAC8I,YAAY,EAAEF,UAAU,EAAEG,mBAAmB,EAAEjI,WAAW,EAAET,UAAU,CAAC;IAChH,IAAI8I,uBAAuB,GAAGnJ,UAAU,CAAC8I,YAAY,EAAEF,UAAU,EAAGG,mBAAmB,GAAG,KAAK,EAAIjI,WAAW,GAAG,MAAM,EAAGT,UAAU,CAAC;IACrI,IAAI+I,cAAc,GAAG,IAAIvI,YAAY,CAAC+H,UAAU,CAAC;IACjD,IAAIS,eAAe,GAAG,IAAIxI,YAAY,CAAC+H,UAAU,CAAC;IAClD,KAAK,IAAIlI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkI,UAAU,EAAElI,CAAC,EAAE,EAAE;MACnC0I,cAAc,CAAC1I,CAAC,CAAC,GAAKsI,sBAAsB,CAACtI,CAAC,CAAC,GAAGuI,sBAAsB,CAACvI,CAAC,CAAG;IAC/E;IACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkI,UAAU,EAAElI,CAAC,EAAE,EAAE;MACnC2I,eAAe,CAAC3I,CAAC,CAAC,GAAKwI,uBAAuB,CAACxI,CAAC,CAAC,GAAGyI,uBAAuB,CAACzI,CAAC,CAAG;IAClF;IACA,IAAI4I,YAAY,GAAG,IAAIzI,YAAY,CAAC+H,UAAU,CAAC;IAC/C,IAAIW,aAAa,GAAG,IAAI1I,YAAY,CAAC+H,UAAU,CAAC;IAChD,KAAK,IAAIlI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkI,UAAU,EAAElI,CAAC,EAAE,EAAE;MACnC4I,YAAY,CAAC5I,CAAC,CAAC,GAAI,CAAC,CAAC,GAAG0C,SAAS,IAAIyF,WAAW,CAACnI,CAAC,CAAC,GAAK0C,SAAS,GAAGgG,cAAc,CAAC1I,CAAC,CAAE;IACxF;IACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkI,UAAU,EAAElI,CAAC,EAAE,EAAE;MACnC6I,aAAa,CAAC7I,CAAC,CAAC,GAAI,CAAC,CAAC,GAAG0C,SAAS,IAAI0F,YAAY,CAACpI,CAAC,CAAC,GAAK0C,SAAS,GAAGiG,eAAe,CAAC3I,CAAC,CAAE;IAC3F;IACA,IAAI8I,yBAAyB,GAAG7I,aAAa,CAAC2I,YAAY,EAAEV,UAAU,EAAEvI,UAAU,CAAC;IACnF,IAAIoJ,yBAAyB,GAAG9I,aAAa,CAAC6I,yBAAyB,EAAEZ,UAAU,EAAEvI,UAAU,CAAC;IAChG,IAAIqJ,0BAA0B,GAAG/I,aAAa,CAAC4I,aAAa,EAAEX,UAAU,EAAEvI,UAAU,CAAC;IACrF,IAAIsJ,0BAA0B,GAAGhJ,aAAa,CAAC+I,0BAA0B,EAAEd,UAAU,EAAEvI,UAAU,CAAC;IAClG,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkI,UAAU,EAAElI,CAAC,EAAE,EAAE;MACnCyH,WAAW,CAAChC,KAAK,GAAGzF,CAAC,CAAC,GAAG+I,yBAAyB,CAAC/I,CAAC,CAAC;MACrD0H,YAAY,CAACjC,KAAK,GAAGzF,CAAC,CAAC,GAAGiJ,0BAA0B,CAACjJ,CAAC,CAAC;IACzD;IACAwE,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7B,IAAIE,IAAI,GAAG1F,OAAO,CAACG,MAAM,CAAC;IAC1BwB,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACC,KAAK,CAAC,CAAC;IAC9BlE,QAAQ,CAAC,CAAC,CAAC,CAACiE,UAAU,CAACE,QAAQ,CAACJ,IAAI,CAAC,CAACK,KAAK,CAACC,KAAK,IAAIT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC,CAAC;EAC1E,CAAC;EAED,MAAMiE,cAAc,GAAGA,CAAA,KAAM1H,gBAAgB,CAAC,KAAK,CAAC;EACpD,MAAM2H,aAAa,GAAGA,CAAA,KAAM;IAC1BzH,WAAW,CAAC,IAAI,CAAC;IACjBF,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAGD,oBACEvF,OAAA;IAAKmN,KAAK,EAAEhN,cAAe;IAAAiN,QAAA,eACzBpN,OAAA;MAAKmN,KAAK,EAAE3K,YAAa;MAAA4K,QAAA,gBACvBpN,OAAA;QAAQmN,KAAK,EAAE7L,eAAgB;QAAC+L,OAAO,EAAE3I,UAAW;QAAA0I,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAElEzN,OAAA;QAAQmN,KAAK,EAAEpL,kBAAmB;QAACsL,OAAO,EAAEnE,OAAQ;QAAAkE,QAAA,EAAC;MAErD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETzN,OAAA;QAAQmN,KAAK,EAAEpL,kBAAmB;QAACsL,OAAO,EAAE3D,MAAO;QAAA0D,QAAA,EAAC;MAEpD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETzN,OAAA;QAAQmN,KAAK,EAAEpL,kBAAmB;QAACsL,OAAO,EAAE1D,SAAU;QAAAyD,QAAA,EAAC;MAEvD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETzN,OAAA;QAAQmN,KAAK,EAAEpL,kBAAmB;QAACsL,OAAO,EAAEhD,MAAO;QAAA+C,QAAA,EAAC;MAEpD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETzN,OAAA;QAAQmN,KAAK,EAAEpL,kBAAmB;QAACsL,OAAO,EAAE5C,OAAQ;QAAA2C,QAAA,EAAC;MAErD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETzN,OAAA;QAAQmN,KAAK,EAAEjL,qBAAsB;QAACmL,OAAO,EAAEzD,aAAc;QAAAwD,QAAA,EAAC;MAE9D;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAER3I,eAAe,iBACd9E,OAAA,CAAAE,SAAA;QAAAkN,QAAA,gBACGpN,OAAA;UAAKmN,KAAK,EAAE9K,YAAa;UAACgL,OAAO,EAAExD;QAAe;UAAAyD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpDzN,OAAA;UAAKmN,KAAK,EAAEhL,UAAW;UAAAiL,QAAA,gBACrBpN,OAAA;YAAAoN,QAAA,EAAI;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxBzN,OAAA;YACE0N,EAAE,EAAC,OAAO;YACVC,IAAI,EAAC,OAAO;YACZC,GAAG,EAAC,GAAG;YACPvJ,GAAG,EAAC,KAAK;YACTwJ,IAAI,EAAC,MAAM;YACX/G,KAAK,EAAEpB,SAAU;YACjBoI,OAAO,EAAGC,CAAC,IAAKpI,YAAY,CAACoI,CAAC,CAACC,MAAM,CAAClH,KAAK,CAAE;YAC7CqG,KAAK,EAAEnL;UAAY;YAAAsL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,eACFzN,OAAA;YAAQ0N,EAAE,EAAC,SAAS;YAAAN,QAAA,GAAE1H,SAAS,EAAC,GAAC;UAAA;YAAA4H,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC5CzN,OAAA;YAAQqN,OAAO,EAAExD,cAAe;YAACsD,KAAK,EAAE7L,eAAgB;YAAA8L,QAAA,EAAC;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACvEzN,OAAA;YAAQqN,OAAO,EAAEvD,UAAW;YAACqD,KAAK,EAAE7L,eAAgB;YAAA8L,QAAA,EAAC;UAAU;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrE,CAAC;MAAA,eACN,CACH,eAEDzN,OAAA;QAAQmN,KAAK,EAAEjL,qBAAsB;QAACmL,OAAO,EAAEvC,cAAe;QAAAsC,QAAA,EAAC;MAE/D;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAERzI,gBAAgB,iBACfhF,OAAA,CAAAE,SAAA;QAAAkN,QAAA,gBACGpN,OAAA;UAAKmN,KAAK,EAAE9K,YAAa;UAACgL,OAAO,EAAEtC;QAAgB;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrDzN,OAAA;UAAKmN,KAAK,EAAEhL,UAAW;UAAAiL,QAAA,gBACrBpN,OAAA;YAAAoN,QAAA,EAAI;UAAU;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnBzN,OAAA;YACE0N,EAAE,EAAC,QAAQ;YACXC,IAAI,EAAC,OAAO;YACZC,GAAG,EAAC,GAAG;YACPvJ,GAAG,EAAC,GAAG;YACPwJ,IAAI,EAAC,MAAM;YACX/G,KAAK,EAAElB,SAAU;YACjBkI,OAAO,EAAGC,CAAC,IAAKlI,YAAY,CAACkI,CAAC,CAACC,MAAM,CAAClH,KAAK,CAAE;YAC7CqG,KAAK,EAAEnL;UAAY;YAAAsL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,eACFzN,OAAA;YAAQ0N,EAAE,EAAC,UAAU;YAAAN,QAAA,EAAExH;UAAS;YAAA0H,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eAE1CzN,OAAA;YAAAoN,QAAA,EAAI;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBzN,OAAA;YACE0N,EAAE,EAAC,UAAU;YACbC,IAAI,EAAC,OAAO;YACZC,GAAG,EAAC,GAAG;YACPvJ,GAAG,EAAC,GAAG;YACPwJ,IAAI,EAAC,MAAM;YACX/G,KAAK,EAAEhB,QAAS;YAChBgI,OAAO,EAAGC,CAAC,IAAKhI,WAAW,CAACgI,CAAC,CAACC,MAAM,CAAClH,KAAK,CAAE;YAC5CqG,KAAK,EAAEnL;UAAY;YAAAsL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,eACFzN,OAAA;YAAQ0N,EAAE,EAAC,SAAS;YAAAN,QAAA,EAAEtH;UAAQ;YAAAwH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eAExCzN,OAAA;YAAAoN,QAAA,EAAI;UAAG;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACZzN,OAAA;YACE0N,EAAE,EAAC,MAAM;YACTC,IAAI,EAAC,OAAO;YACZC,GAAG,EAAC,GAAG;YACPvJ,GAAG,EAAC,GAAG;YACPwJ,IAAI,EAAC,MAAM;YACX/G,KAAK,EAAEd,OAAQ;YACf8H,OAAO,EAAGC,CAAC,IAAK9H,UAAU,CAAC8H,CAAC,CAACC,MAAM,CAAClH,KAAK,CAAE;YAC3CqG,KAAK,EAAEnL;UAAY;YAAAsL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,eACFzN,OAAA;YAAQ0N,EAAE,EAAC,QAAQ;YAAAN,QAAA,EAAEpH;UAAO;YAAAsH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eAEtCzN,OAAA;YAAAoN,QAAA,EAAI;UAAG;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACZzN,OAAA;YACE0N,EAAE,EAAC,OAAO;YACVC,IAAI,EAAC,OAAO;YACZC,GAAG,EAAC,GAAG;YACPvJ,GAAG,EAAC,GAAG;YACPwJ,IAAI,EAAC,MAAM;YACX/G,KAAK,EAAEZ,OAAQ;YACf4H,OAAO,EAAGC,CAAC,IAAK5H,UAAU,CAAC4H,CAAC,CAACC,MAAM,CAAClH,KAAK,CAAE;YAC3CqG,KAAK,EAAEnL;UAAY;YAAAsL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,eACFzN,OAAA;YAAQ0N,EAAE,EAAC,QAAQ;YAAAN,QAAA,EAAElH;UAAO;YAAAoH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eACxCzN,OAAA;YAAQqN,OAAO,EAAEtC,eAAgB;YAACoC,KAAK,EAAE7L,eAAgB;YAAA8L,QAAA,EAAC;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxEzN,OAAA;YAAQqN,OAAO,EAAE7J,KAAM;YAAC2J,KAAK,EAAE7L,eAAgB;YAAA8L,QAAA,EAAC;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjE,CAAC;MAAA,eACN,CACH,eAEDzN,OAAA;QAAQmN,KAAK,EAAEjL,qBAAsB;QAACmL,OAAO,EAAE3C,mBAAoB;QAAA0C,QAAA,EAAC;MAEpE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAERvI,qBAAqB,iBACpBlF,OAAA,CAAAE,SAAA;QAAAkN,QAAA,gBACGpN,OAAA;UAAKmN,KAAK,EAAE9K,YAAa;UAACgL,OAAO,EAAE1C;QAAqB;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1DzN,OAAA;UAAKmN,KAAK,EAAEhL,UAAW;UAAAiL,QAAA,gBACrBpN,OAAA;YAAAoN,QAAA,EAAI;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxBzN,OAAA;YACE0N,EAAE,EAAC,OAAO;YACVC,IAAI,EAAC,OAAO;YACZC,GAAG,EAAC,GAAG;YACPvJ,GAAG,EAAC,KAAK;YACTwJ,IAAI,EAAC,MAAM;YACX/G,KAAK,EAAEV,gBAAiB;YACxB0H,OAAO,EAAGC,CAAC,IAAK1H,mBAAmB,CAAC0H,CAAC,CAACC,MAAM,CAAClH,KAAK,CAAE;YACpDqG,KAAK,EAAEnL;UAAY;YAAAsL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,eACFzN,OAAA;YAAQ0N,EAAE,EAAC,gBAAgB;YAAAN,QAAA,GAAEhH,gBAAgB,EAAC,GAAC;UAAA;YAAAkH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC1DzN,OAAA;YAAQqN,OAAO,EAAE1C,oBAAqB;YAACwC,KAAK,EAAE7L,eAAgB;YAAA8L,QAAA,EAAC;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC7EzN,OAAA;YAAQqN,OAAO,EAAEzC,OAAQ;YAACuC,KAAK,EAAE7L,eAAgB;YAAA8L,QAAA,EAAC;UAAgB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxE,CAAC;MAAA,eACN,CACH,eAEDzN,OAAA;QAAQmN,KAAK,EAAEjL,qBAAsB;QAACmL,OAAO,EAAEvB,eAAgB;QAAAsB,QAAA,EAAC;MAEhE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAERrI,iBAAiB,iBAChBpF,OAAA,CAAAE,SAAA;QAAAkN,QAAA,gBACGpN,OAAA;UAAKmN,KAAK,EAAE9K,YAAa;UAACgL,OAAO,EAAEtB;QAAiB;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtDzN,OAAA;UAAKmN,KAAK,EAAEhL,UAAW;UAAAiL,QAAA,gBACrBpN,OAAA;YAAAoN,QAAA,EAAI;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbzN,OAAA;YACE0N,EAAE,EAAC,SAAS;YACZC,IAAI,EAAC,OAAO;YACZC,GAAG,EAAC,GAAG;YACPvJ,GAAG,EAAC,GAAG;YACPwJ,IAAI,EAAC,MAAM;YACX/G,KAAK,EAAER,UAAW;YAClBwH,OAAO,EAAGC,CAAC,IAAKxH,aAAa,CAACwH,CAAC,CAACC,MAAM,CAAClH,KAAK,CAAE;YAC9CqG,KAAK,EAAEnL;UAAY;YAAAsL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,eACFzN,OAAA;YAAQ0N,EAAE,EAAC,YAAY;YAAAN,QAAA,EAAE9G;UAAU;YAAAgH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eAE7CzN,OAAA;YAAAoN,QAAA,EAAI;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdzN,OAAA;YACE0N,EAAE,EAAC,OAAO;YACVC,IAAI,EAAC,OAAO;YACZC,GAAG,EAAC,GAAG;YACPvJ,GAAG,EAAC,GAAG;YACPwJ,IAAI,EAAC,MAAM;YACX/G,KAAK,EAAErD,KAAM;YACbqK,OAAO,EAAGC,CAAC,IAAKvH,QAAQ,CAACuH,CAAC,CAACC,MAAM,CAAClH,KAAK,CAAE;YACzCqG,KAAK,EAAEnL;UAAY;YAAAsL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,eACFzN,OAAA;YAAQ0N,EAAE,EAAC,UAAU;YAAAN,QAAA,EAAE3J;UAAK;YAAA6J,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eAEtCzN,OAAA;YAAAoN,QAAA,EAAI;UAAG;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACZzN,OAAA;YACE0N,EAAE,EAAC,MAAM;YACTC,IAAI,EAAC,OAAO;YACZC,GAAG,EAAC,GAAG;YACPvJ,GAAG,EAAC,GAAG;YACPwJ,IAAI,EAAC,MAAM;YACX/G,KAAK,EAAEL,SAAU;YACjBqH,OAAO,EAAGC,CAAC,IAAKrH,YAAY,CAACqH,CAAC,CAACC,MAAM,CAAClH,KAAK,CAAE;YAC7CqG,KAAK,EAAEnL;UAAY;YAAAsL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,eACFzN,OAAA;YAAQ0N,EAAE,EAAC,SAAS;YAAAN,QAAA,EAAE3G;UAAS;YAAA6G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eAE3CzN,OAAA;YAAQqN,OAAO,EAAEtB,gBAAiB;YAACoB,KAAK,EAAE7L,eAAgB;YAAA8L,QAAA,EAAC;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACzEzN,OAAA;YAAQqN,OAAO,EAAErB,MAAO;YAACmB,KAAK,EAAE7L,eAAgB;YAAA8L,QAAA,EAAC;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE,CAAC;MAAA,eACN,CACH,eAEDzN,OAAA;QAAQmN,KAAK,EAAEjL,qBAAsB;QAACmL,OAAO,EAAEH,aAAc;QAAAE,QAAA,EAAC;MAE9D;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAERnI,eAAe,iBACdtF,OAAA,CAAAE,SAAA;QAAAkN,QAAA,gBACGpN,OAAA;UAAKmN,KAAK,EAAE9K,YAAa;UAACgL,OAAO,EAAEJ;QAAe;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpDzN,OAAA;UAAKmN,KAAK,EAAEhL,UAAW;UAAAiL,QAAA,eACvBpN,OAAA;YAAKmN,KAAK,EAAE;cAAE7M,OAAO,EAAE,MAAM;cAAE2N,GAAG,EAAE;YAAM,CAAE;YAAAb,QAAA,gBAC1CpN,OAAA;cAAKmN,KAAK,EAAEtK,oBAAqB;cAAAuK,QAAA,gBAC/BpN,OAAA;gBAAAoN,QAAA,EAAI;cAAI;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACXzN,OAAA;gBACE0N,EAAE,EAAC,SAAS;gBACZC,IAAI,EAAC,OAAO;gBACZC,GAAG,EAAC,KAAK;gBACTvJ,GAAG,EAAC,IAAI;gBACRwJ,IAAI,EAAC,KAAK;gBACV/G,KAAK,EAAEH,UAAW;gBAClBmH,OAAO,EAAGC,CAAC,IAAKnH,UAAU,CAACmH,CAAC,CAACC,MAAM,CAAClH,KAAK,CAAE;gBAC3CqG,KAAK,EAAEzK;cAAoB;gBAAA4K,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B,CAAC,eACFzN,OAAA;gBAAQ0N,EAAE,EAAC,GAAG;gBAAAN,QAAA,GAAEzG,UAAU,EAAC,KAAG;cAAA;gBAAA2G,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtC,CAAC,eAENzN,OAAA;cAAKmN,KAAK,EAAEtK,oBAAqB;cAAAuK,QAAA,gBAC/BpN,OAAA;gBAAAoN,QAAA,EAAI;cAAI;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACXzN,OAAA;gBACE0N,EAAE,EAAC,SAAS;gBACZC,IAAI,EAAC,OAAO;gBACZC,GAAG,EAAC,KAAK;gBACTvJ,GAAG,EAAC,IAAI;gBACRwJ,IAAI,EAAC,KAAK;gBACV/G,KAAK,EAAEC,UAAW;gBAClB+G,OAAO,EAAGC,CAAC,IAAK/G,UAAU,CAAC+G,CAAC,CAACC,MAAM,CAAClH,KAAK,CAAE;gBAC3CqG,KAAK,EAAEzK;cAAoB;gBAAA4K,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B,CAAC,eACFzN,OAAA;gBAAQ0N,EAAE,EAAC,GAAG;gBAAAN,QAAA,GAAErG,UAAU,EAAC,KAAG;cAAA;gBAAAuG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtC,CAAC,eAENzN,OAAA;cAAKmN,KAAK,EAAEtK,oBAAqB;cAAAuK,QAAA,gBAC/BpN,OAAA;gBAAAoN,QAAA,EAAI;cAAK;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACdzN,OAAA;gBACE0N,EAAE,EAAC,SAAS;gBACZC,IAAI,EAAC,OAAO;gBACZC,GAAG,EAAC,KAAK;gBACTvJ,GAAG,EAAC,IAAI;gBACRwJ,IAAI,EAAC,KAAK;gBACV/G,KAAK,EAAEG,UAAW;gBAClB6G,OAAO,EAAGC,CAAC,IAAK7G,UAAU,CAAC6G,CAAC,CAACC,MAAM,CAAClH,KAAK,CAAE;gBAC3CqG,KAAK,EAAEzK;cAAoB;gBAAA4K,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B,CAAC,eACFzN,OAAA;gBAAQ0N,EAAE,EAAC,GAAG;gBAAAN,QAAA,GAAEnG,UAAU,EAAC,KAAG;cAAA;gBAAAqG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,eAERzN,OAAA;cAAKmN,KAAK,EAAEtK,oBAAqB;cAAAuK,QAAA,gBACjCpN,OAAA;gBAAAoN,QAAA,EAAI;cAAK;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACdzN,OAAA;gBACE0N,EAAE,EAAC,SAAS;gBACZC,IAAI,EAAC,OAAO;gBACZC,GAAG,EAAC,KAAK;gBACTvJ,GAAG,EAAC,IAAI;gBACRwJ,IAAI,EAAC,KAAK;gBACV/G,KAAK,EAAEK,UAAW;gBAClB2G,OAAO,EAAGC,CAAC,IAAK3G,UAAU,CAAC2G,CAAC,CAACC,MAAM,CAAClH,KAAK,CAAE;gBAC3CqG,KAAK,EAAEzK;cAAoB;gBAAA4K,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B,CAAC,eACFzN,OAAA;gBAAQ0N,EAAE,EAAC,GAAG;gBAAAN,QAAA,GAAEjG,UAAU,EAAC,KAAG;cAAA;gBAAAmG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,eAENzN,OAAA;cAAKmN,KAAK,EAAEtK,oBAAqB;cAAAuK,QAAA,gBACjCpN,OAAA;gBAAAoN,QAAA,EAAI;cAAK;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACdzN,OAAA;gBACE0N,EAAE,EAAC,SAAS;gBACZC,IAAI,EAAC,OAAO;gBACZC,GAAG,EAAC,KAAK;gBACTvJ,GAAG,EAAC,IAAI;gBACRwJ,IAAI,EAAC,KAAK;gBACV/G,KAAK,EAAEO,UAAW;gBAClByG,OAAO,EAAGC,CAAC,IAAKzG,UAAU,CAACyG,CAAC,CAACC,MAAM,CAAClH,KAAK,CAAE;gBAC3CqG,KAAK,EAAEzK;cAAoB;gBAAA4K,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B,CAAC,eACFzN,OAAA;gBAAQ0N,EAAE,EAAC,GAAG;gBAAAN,QAAA,GAAE/F,UAAU,EAAC,KAAG;cAAA;gBAAAiG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,eAGNzN,OAAA;cAAKmN,KAAK,EAAEtK,oBAAqB;cAAAuK,QAAA,gBACjCpN,OAAA;gBAAAoN,QAAA,EAAI;cAAM;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACfzN,OAAA;gBACE0N,EAAE,EAAC,SAAS;gBACZC,IAAI,EAAC,OAAO;gBACZC,GAAG,EAAC,KAAK;gBACTvJ,GAAG,EAAC,IAAI;gBACRwJ,IAAI,EAAC,KAAK;gBACV/G,KAAK,EAAES,UAAW;gBAClBuG,OAAO,EAAGC,CAAC,IAAKvG,UAAU,CAACuG,CAAC,CAACC,MAAM,CAAClH,KAAK,CAAE;gBAC3CqG,KAAK,EAAEzK;cAAoB;gBAAA4K,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B,CAAC,eACFzN,OAAA;gBAAQ0N,EAAE,EAAC,GAAG;gBAAAN,QAAA,GAAE7F,UAAU,EAAC,KAAG;cAAA;gBAAA+F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,eAENzN,OAAA;cAAKmN,KAAK,EAAEtK,oBAAqB;cAAAuK,QAAA,gBACjCpN,OAAA;gBAAAoN,QAAA,EAAI;cAAM;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACfzN,OAAA;gBACE0N,EAAE,EAAC,SAAS;gBACZC,IAAI,EAAC,OAAO;gBACZC,GAAG,EAAC,KAAK;gBACTvJ,GAAG,EAAC,IAAI;gBACRwJ,IAAI,EAAC,KAAK;gBACV/G,KAAK,EAAEW,UAAW;gBAClBqG,OAAO,EAAGC,CAAC,IAAKrG,UAAU,CAACqG,CAAC,CAACC,MAAM,CAAClH,KAAK,CAAE;gBAC3CqG,KAAK,EAAEzK;cAAoB;gBAAA4K,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B,CAAC,eACFzN,OAAA;gBAAQ0N,EAAE,EAAC,GAAG;gBAAAN,QAAA,GAAE3F,UAAU,EAAC,KAAG;cAAA;gBAAA6F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,eAENzN,OAAA;cAAKmN,KAAK,EAAEtK,oBAAqB;cAAAuK,QAAA,gBACjCpN,OAAA;gBAAAoN,QAAA,EAAI;cAAM;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACfzN,OAAA;gBACE0N,EAAE,EAAC,SAAS;gBACZC,IAAI,EAAC,OAAO;gBACZC,GAAG,EAAC,KAAK;gBACTvJ,GAAG,EAAC,IAAI;gBACRwJ,IAAI,EAAC,KAAK;gBACV/G,KAAK,EAAEa,UAAW;gBAClBmG,OAAO,EAAGC,CAAC,IAAKnG,UAAU,CAACmG,CAAC,CAACC,MAAM,CAAClH,KAAK,CAAE;gBAC3CqG,KAAK,EAAEzK;cAAoB;gBAAA4K,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B,CAAC,eACFzN,OAAA;gBAAQ0N,EAAE,EAAC,GAAG;gBAAAN,QAAA,GAAEzF,UAAU,EAAC,KAAG;cAAA;gBAAA2F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,eAENzN,OAAA;cAAKmN,KAAK,EAAEtK,oBAAqB;cAAAuK,QAAA,gBACjCpN,OAAA;gBAAAoN,QAAA,EAAI;cAAM;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACfzN,OAAA;gBACE0N,EAAE,EAAC,SAAS;gBACZC,IAAI,EAAC,OAAO;gBACZC,GAAG,EAAC,KAAK;gBACTvJ,GAAG,EAAC,IAAI;gBACRwJ,IAAI,EAAC,KAAK;gBACV/G,KAAK,EAAEe,UAAW;gBAClBiG,OAAO,EAAGC,CAAC,IAAKjG,UAAU,CAACiG,CAAC,CAACC,MAAM,CAAClH,KAAK,CAAE;gBAC3CqG,KAAK,EAAEzK;cAAoB;gBAAA4K,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B,CAAC,eACFzN,OAAA;gBAAQ0N,EAAE,EAAC,GAAG;gBAAAN,QAAA,GAAEvF,UAAU,EAAC,KAAG;cAAA;gBAAAyF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,eAENzN,OAAA;cAAKmN,KAAK,EAAEtK,oBAAqB;cAAAuK,QAAA,gBACjCpN,OAAA;gBAAAoN,QAAA,EAAI;cAAO;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAChBzN,OAAA;gBACE0N,EAAE,EAAC,SAAS;gBACZC,IAAI,EAAC,OAAO;gBACZC,GAAG,EAAC,KAAK;gBACTvJ,GAAG,EAAC,IAAI;gBACRwJ,IAAI,EAAC,KAAK;gBACV/G,KAAK,EAAEiB,UAAW;gBAClB+F,OAAO,EAAGC,CAAC,IAAK/F,UAAU,CAAC+F,CAAC,CAACC,MAAM,CAAClH,KAAK,CAAE;gBAC3CqG,KAAK,EAAEzK;cAAoB;gBAAA4K,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B,CAAC,eACFzN,OAAA;gBAAQ0N,EAAE,EAAC,GAAG;gBAAAN,QAAA,GAAErF,UAAU,EAAC,KAAG;cAAA;gBAAAuF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,eAERzN,OAAA;cAAQqN,OAAO,EAAEJ,cAAe;cAACE,KAAK,EAAE7L,eAAgB;cAAA8L,QAAA,EAAC;YAAK;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACvEzN,OAAA;cAAQqN,OAAO,EAAE/E,SAAU;cAAC6E,KAAK,EAAE7L,eAAgB;cAAA8L,QAAA,EAAC;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAElE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA,eACN,CACH,eACDzN,OAAA;QAAQmN,KAAK,EAAEjL,qBAAsB;QAACmL,OAAO,EAAE5E,IAAK;QAAA2E,QAAA,EAAC;MAErD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETzN,OAAA;QAAQmN,KAAK,EAAEjL,qBAAsB;QAACmL,OAAO,EAAEpE,KAAM;QAAAmE,QAAA,EAAC;MAEtD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC7I,EAAA,CA/sBQH,IAAI;AAAAyJ,EAAA,GAAJzJ,IAAI;AAitBb,eAAeA,IAAI;AAAC,IAAAyJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}