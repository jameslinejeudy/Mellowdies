{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Desktop\\\\School\\\\Senior Project\\\\Github Branch\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Ai.js\",\n  _s = $RefreshSig$();\nimport menubutton from '../images/menubutton.png';\nimport React, { useState, useEffect } from \"react\";\nimport { client as GradioClient } from \"@gradio/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fs = require('fs');\nconst axios = require('axios');\n\n// Helper function to pause execution for a specified amount of time\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n// CSS styling for the component (unchanged)\nconst menubackground = {/* styles remain unchanged */};\nconst backButtonStyle = {/* styles remain unchanged */};\nconst textstyle = {/* styles remain unchanged */};\nconst contentStyle = {/* styles remain unchanged */};\nconst generateButtonStyle = {/* styles remain unchanged */};\nconst descriptionBoxStyle = {/* styles remain unchanged */};\nfunction AIMenu({\n  handleBack\n}) {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [description, setDescription] = useState(\"\");\n  const [app, setApp] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  // Initialize the Gradio client and store it in state\n  useEffect(() => {\n    const connectToClient = async () => {\n      try {\n        console.log(\"Connecting to the MusicGen API...\");\n        const app = await GradioClient(\"https://facebook-musicgen.hf.space/\");\n        console.log(\"Connected to the API.\");\n        setApp(app);\n      } catch (error) {\n        console.error(\"Failed to connect to the API:\", error);\n        setErrorMessage(\"Failed to connect to the MusicGen API. Please try again later.\");\n      }\n    };\n    connectToClient();\n  }, []);\n  const handleGenerateMusic = async () => {\n    if (!app) {\n      alert('App is still connecting, please wait.');\n      return;\n    }\n    setLoading(true);\n    setAudioUrl(null); // Reset audio URL before generating\n    try {\n      var _result$data, _result$data$;\n      console.log(\"Sending request to generate music with description:\", description);\n      const result = await app.predict(0, [description]);\n      console.log(\"API Result:\", result);\n      const wavFilePath = result === null || result === void 0 ? void 0 : (_result$data = result.data) === null || _result$data === void 0 ? void 0 : (_result$data$ = _result$data[1]) === null || _result$data$ === void 0 ? void 0 : _result$data$.name;\n      if (wavFilePath) {\n        const wavFileUrl = `https://facebook-musicgen.hf.space/file=${wavFilePath}`;\n        setAudioUrl(wavFileUrl);\n      } else {\n        throw new Error(\"No audio data returned from the music generation API.\");\n      }\n    } catch (error) {\n      console.error(\"Error generating music:\", error);\n      alert(`Failed to generate music: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (errorMessage) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: menubackground,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: contentStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"This Is The AI Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        style: descriptionBoxStyle,\n        placeholder: \"Describe your music...\",\n        value: description,\n        onChange: e => setDescription(e.target.value) // Update state on change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: generateButtonStyle,\n        onClick: handleGenerateMusic,\n        disabled: loading,\n        children: loading ? 'Generating...' : 'Generate Music'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: audioUrl,\n          type: \"audio/wav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), \"Your browser does not support the audio tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: backButtonStyle,\n        onClick: handleBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(AIMenu, \"SLSrTr60wBMPFa6PxP4MF7yr3uU=\");\n_c = AIMenu;\nexport default AIMenu;\nvar _c;\n$RefreshReg$(_c, \"AIMenu\");","map":{"version":3,"names":["menubutton","React","useState","useEffect","client","GradioClient","jsxDEV","_jsxDEV","fs","require","axios","delay","ms","Promise","resolve","setTimeout","menubackground","backButtonStyle","textstyle","contentStyle","generateButtonStyle","descriptionBoxStyle","AIMenu","handleBack","_s","loading","setLoading","audioUrl","setAudioUrl","description","setDescription","app","setApp","errorMessage","setErrorMessage","connectToClient","console","log","error","handleGenerateMusic","alert","_result$data","_result$data$","result","predict","wavFilePath","data","name","wavFileUrl","Error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","placeholder","value","onChange","e","target","onClick","disabled","controls","src","type","_c","$RefreshReg$"],"sources":["C:/Users/kevin/Desktop/School/Senior Project/Github Branch/Mellowdies/mellowdies/src/Landingpage/Ai.js"],"sourcesContent":["import menubutton from '../images/menubutton.png';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { client as GradioClient } from \"@gradio/client\";\r\n\r\nconst fs = require('fs');\r\nconst axios = require('axios');\r\n\r\n// Helper function to pause execution for a specified amount of time\r\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\n// CSS styling for the component (unchanged)\r\nconst menubackground = { /* styles remain unchanged */ };\r\nconst backButtonStyle = { /* styles remain unchanged */ };\r\nconst textstyle = { /* styles remain unchanged */ };\r\nconst contentStyle = { /* styles remain unchanged */ };\r\nconst generateButtonStyle = { /* styles remain unchanged */ };\r\nconst descriptionBoxStyle = { /* styles remain unchanged */ };\r\n\r\nfunction AIMenu({ handleBack }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [audioUrl, setAudioUrl] = useState(null);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [app, setApp] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  // Initialize the Gradio client and store it in state\r\n  useEffect(() => {\r\n    const connectToClient = async () => {\r\n      try {\r\n        console.log(\"Connecting to the MusicGen API...\");\r\n        const app = await GradioClient(\"https://facebook-musicgen.hf.space/\");\r\n        console.log(\"Connected to the API.\");\r\n        setApp(app);\r\n      } catch (error) {\r\n        console.error(\"Failed to connect to the API:\", error);\r\n        setErrorMessage(\"Failed to connect to the MusicGen API. Please try again later.\");\r\n      }\r\n    };\r\n\r\n    connectToClient();\r\n  }, []);\r\n\r\n  const handleGenerateMusic = async () => {\r\n    if (!app) {\r\n      alert('App is still connecting, please wait.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setAudioUrl(null); // Reset audio URL before generating\r\n    try {\r\n      console.log(\"Sending request to generate music with description:\", description);\r\n      const result = await app.predict(0, [description]);\r\n      \r\n      console.log(\"API Result:\", result);\r\n\r\n      const wavFilePath = result?.data?.[1]?.name;\r\n      if (wavFilePath) {\r\n        const wavFileUrl = `https://facebook-musicgen.hf.space/file=${wavFilePath}`;\r\n        setAudioUrl(wavFileUrl);\r\n      } else {\r\n        throw new Error(\"No audio data returned from the music generation API.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error generating music:\", error);\r\n      alert(`Failed to generate music: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (errorMessage) {\r\n    return <div>{errorMessage}</div>;\r\n  }\r\n\r\n  return (\r\n    <div style={menubackground}>\r\n      <div style={contentStyle}>\r\n        <h1>This Is The AI Menu</h1>\r\n        {/* Textbox for user to input description */}\r\n        <textarea\r\n          style={descriptionBoxStyle}\r\n          placeholder=\"Describe your music...\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)} // Update state on change\r\n        />\r\n        {/* Button to generate music */}\r\n        <button style={generateButtonStyle} onClick={handleGenerateMusic} disabled={loading}>\r\n          {loading ? 'Generating...' : 'Generate Music'}\r\n        </button>\r\n        {/* If an audio URL is available, provide a way to play it */}\r\n        {audioUrl && (\r\n          <audio controls>\r\n            <source src={audioUrl} type=\"audio/wav\" />\r\n            Your browser does not support the audio tag.\r\n          </audio>\r\n        )}\r\n        {/* Back button to close the menu */}\r\n        <button style={backButtonStyle} onClick={handleBack}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AIMenu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}