{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n  ConcatSource\n} = require(\"webpack-sources\");\nconst ConcatenatedModule = require(\"../optimize/ConcatenatedModule\");\nconst AbstractLibraryPlugin = require(\"./AbstractLibraryPlugin\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryOptions} LibraryOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryType} LibraryType */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compilation\").ChunkHashContext} ChunkHashContext */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../Module\").BuildMeta} BuildMeta */\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").StartupRenderContext} StartupRenderContext */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @template T @typedef {import(\"./AbstractLibraryPlugin\").LibraryContext<T>} LibraryContext<T> */\n\n/**\n * @typedef {object} ModernModuleLibraryPluginOptions\n * @property {LibraryType} type\n */\n\n/**\n * @typedef {object} ModernModuleLibraryPluginParsed\n * @property {string} name\n */\n\n/**\n * @typedef {ModernModuleLibraryPluginParsed} T\n * @extends {AbstractLibraryPlugin<ModernModuleLibraryPluginParsed>}\n */\nclass ModernModuleLibraryPlugin extends AbstractLibraryPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    super.apply(compiler);\n    compiler.hooks.compilation.tap(\"ModernModuleLibraryPlugin\", compilation => {\n      const {\n        exportsDefinitions\n      } = ConcatenatedModule.getCompilationHooks(compilation);\n      exportsDefinitions.tap(\"ModernModuleLibraryPlugin\", () => true);\n    });\n  }\n\n  /**\n   * @param {ModernModuleLibraryPluginOptions} options the plugin options\n   */\n  constructor(options) {\n    super({\n      pluginName: \"ModernModuleLibraryPlugin\",\n      type: options.type\n    });\n  }\n\n  /**\n   * @param {LibraryOptions} library normalized library option\n   * @returns {T | false} preprocess as needed by overriding\n   */\n  parseOptions(library) {\n    const {\n      name\n    } = library;\n    if (name) {\n      throw new Error(`Library name must be unset. ${AbstractLibraryPlugin.COMMON_LIBRARY_NAME_MESSAGE}`);\n    }\n    const _name = /** @type {string} */name;\n    return {\n      name: _name\n    };\n  }\n\n  /**\n   * @param {Source} source source\n   * @param {Module} module module\n   * @param {StartupRenderContext} renderContext render context\n   * @param {LibraryContext<T>} libraryContext context\n   * @returns {Source} source with library export\n   */\n  renderStartup(source, module, {\n    moduleGraph,\n    chunk\n  }, {\n    options,\n    compilation\n  }) {\n    const result = new ConcatSource(source);\n    const exportsInfo = moduleGraph.getExportsInfo(module);\n    const definitions = /** @type {BuildMeta} */\n    module.buildMeta.exportsFinalName;\n    const exports = [];\n    for (const exportInfo of exportsInfo.orderedExports) {\n      let shouldContinue = false;\n      const reexport = exportInfo.findTarget(moduleGraph, _m => true);\n      if (reexport) {\n        const exp = moduleGraph.getExportsInfo(reexport.module);\n        for (const reexportInfo of exp.orderedExports) {\n          if (!reexportInfo.provided && reexportInfo.name === /** @type {string[]} */reexport.export[0]) {\n            shouldContinue = true;\n          }\n        }\n      }\n      if (shouldContinue) continue;\n      const webpackExportsProperty = exportInfo.getUsedName(exportInfo.name, chunk.runtime);\n      const finalName = definitions[(/** @type {string} */\n      webpackExportsProperty)];\n      exports.push(finalName === exportInfo.name ? finalName : `${finalName} as ${exportInfo.name}`);\n    }\n    if (exports.length > 0) {\n      result.add(`export { ${exports.join(\", \")} };\\n`);\n    }\n    return result;\n  }\n}\nmodule.exports = ModernModuleLibraryPlugin;","map":{"version":3,"names":["ConcatSource","require","ConcatenatedModule","AbstractLibraryPlugin","ModernModuleLibraryPlugin","apply","compiler","hooks","compilation","tap","exportsDefinitions","getCompilationHooks","constructor","options","pluginName","type","parseOptions","library","name","Error","COMMON_LIBRARY_NAME_MESSAGE","_name","renderStartup","source","module","moduleGraph","chunk","result","exportsInfo","getExportsInfo","definitions","buildMeta","exportsFinalName","exports","exportInfo","orderedExports","shouldContinue","reexport","findTarget","_m","exp","reexportInfo","provided","export","webpackExportsProperty","getUsedName","runtime","finalName","push","length","add","join"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/node_modules/webpack/lib/library/ModernModuleLibraryPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\nconst ConcatenatedModule = require(\"../optimize/ConcatenatedModule\");\nconst AbstractLibraryPlugin = require(\"./AbstractLibraryPlugin\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryOptions} LibraryOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").LibraryType} LibraryType */\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Compilation\").ChunkHashContext} ChunkHashContext */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../Module\").BuildMeta} BuildMeta */\n/** @typedef {import(\"../javascript/JavascriptModulesPlugin\").StartupRenderContext} StartupRenderContext */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @template T @typedef {import(\"./AbstractLibraryPlugin\").LibraryContext<T>} LibraryContext<T> */\n\n/**\n * @typedef {object} ModernModuleLibraryPluginOptions\n * @property {LibraryType} type\n */\n\n/**\n * @typedef {object} ModernModuleLibraryPluginParsed\n * @property {string} name\n */\n\n/**\n * @typedef {ModernModuleLibraryPluginParsed} T\n * @extends {AbstractLibraryPlugin<ModernModuleLibraryPluginParsed>}\n */\nclass ModernModuleLibraryPlugin extends AbstractLibraryPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tsuper.apply(compiler);\n\n\t\tcompiler.hooks.compilation.tap(\"ModernModuleLibraryPlugin\", compilation => {\n\t\t\tconst { exportsDefinitions } =\n\t\t\t\tConcatenatedModule.getCompilationHooks(compilation);\n\t\t\texportsDefinitions.tap(\"ModernModuleLibraryPlugin\", () => true);\n\t\t});\n\t}\n\n\t/**\n\t * @param {ModernModuleLibraryPluginOptions} options the plugin options\n\t */\n\tconstructor(options) {\n\t\tsuper({\n\t\t\tpluginName: \"ModernModuleLibraryPlugin\",\n\t\t\ttype: options.type\n\t\t});\n\t}\n\n\t/**\n\t * @param {LibraryOptions} library normalized library option\n\t * @returns {T | false} preprocess as needed by overriding\n\t */\n\tparseOptions(library) {\n\t\tconst { name } = library;\n\t\tif (name) {\n\t\t\tthrow new Error(\n\t\t\t\t`Library name must be unset. ${AbstractLibraryPlugin.COMMON_LIBRARY_NAME_MESSAGE}`\n\t\t\t);\n\t\t}\n\t\tconst _name = /** @type {string} */ (name);\n\t\treturn {\n\t\t\tname: _name\n\t\t};\n\t}\n\n\t/**\n\t * @param {Source} source source\n\t * @param {Module} module module\n\t * @param {StartupRenderContext} renderContext render context\n\t * @param {LibraryContext<T>} libraryContext context\n\t * @returns {Source} source with library export\n\t */\n\trenderStartup(\n\t\tsource,\n\t\tmodule,\n\t\t{ moduleGraph, chunk },\n\t\t{ options, compilation }\n\t) {\n\t\tconst result = new ConcatSource(source);\n\t\tconst exportsInfo = moduleGraph.getExportsInfo(module);\n\t\tconst definitions =\n\t\t\t/** @type {BuildMeta} */\n\t\t\t(module.buildMeta).exportsFinalName;\n\t\tconst exports = [];\n\n\t\tfor (const exportInfo of exportsInfo.orderedExports) {\n\t\t\tlet shouldContinue = false;\n\t\t\tconst reexport = exportInfo.findTarget(moduleGraph, _m => true);\n\n\t\t\tif (reexport) {\n\t\t\t\tconst exp = moduleGraph.getExportsInfo(reexport.module);\n\n\t\t\t\tfor (const reexportInfo of exp.orderedExports) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!reexportInfo.provided &&\n\t\t\t\t\t\treexportInfo.name === /** @type {string[]} */ (reexport.export)[0]\n\t\t\t\t\t) {\n\t\t\t\t\t\tshouldContinue = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (shouldContinue) continue;\n\n\t\t\tconst webpackExportsProperty = exportInfo.getUsedName(\n\t\t\t\texportInfo.name,\n\t\t\t\tchunk.runtime\n\t\t\t);\n\t\t\tconst finalName =\n\t\t\t\tdefinitions[\n\t\t\t\t\t/** @type {string} */\n\t\t\t\t\t(webpackExportsProperty)\n\t\t\t\t];\n\t\t\texports.push(\n\t\t\t\tfinalName === exportInfo.name\n\t\t\t\t\t? finalName\n\t\t\t\t\t: `${finalName} as ${exportInfo.name}`\n\t\t\t);\n\t\t}\n\n\t\tif (exports.length > 0) {\n\t\t\tresult.add(`export { ${exports.join(\", \")} };\\n`);\n\t\t}\n\n\t\treturn result;\n\t}\n}\n\nmodule.exports = ModernModuleLibraryPlugin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}