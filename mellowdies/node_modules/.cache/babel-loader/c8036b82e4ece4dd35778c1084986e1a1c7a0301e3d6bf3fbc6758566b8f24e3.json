{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elect\\\\Documents\\\\CIS\\\\4914\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Landingpage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport TimelinePlugin from 'wavesurfer.js/dist/plugins/timeline'; // Import the timeline plugin\nimport { useLocation } from 'react-router-dom';\nimport Sidebar from './Sidebar.js';\nimport './Landingpage.css';\nimport PlayButton from './PlayButton.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Landingpage() {\n  _s();\n  const wavesurferRefs = useRef([]); // Array to hold refs for each WaveSurfer instance\n  const musicbackgroundRef = useRef(null); // Ref for the music background container\n  const location = useLocation();\n  const {\n    audioFiles\n  } = location.state || {\n    audioFiles: []\n  };\n  const [isReady, setIsReady] = useState(false);\n  const [speed, setSpeed] = useState(1); // Define speed and setSpeed state\n  let longestDuration = 0; // Variable to track the longest track duration\n\n  useEffect(() => {\n    // Initialize the wavesurferRefs array\n    wavesurferRefs.current = [];\n    if (audioFiles && audioFiles.length > 0) {\n      audioFiles.forEach((file, index) => {\n        const containerId = `waveform-${index}`;\n\n        // Create the WaveSurfer instance\n        const waveSurfer = WaveSurfer.create({\n          container: `#${containerId}`,\n          waveColor: 'blue',\n          progressColor: '#00FFFF',\n          height: 75,\n          autoCenter: true,\n          interact: true,\n          backend: 'MediaElement',\n          cursorWidth: 2,\n          cursorColor: '#FF0000',\n          backgroundColor: 'rgba(255, 255, 255, 0)',\n          minPxPerSec: 100 // Adjust this for width control\n        });\n        waveSurfer.load(file.url);\n        waveSurfer.on('ready', () => {\n          setIsReady(true);\n          const duration = waveSurfer.getDuration();\n          if (duration > longestDuration) {\n            longestDuration = duration; // Track the longest duration\n          }\n\n          // Add the timeline plugin only for the first track\n          if (index === 0) {\n            const timeline = TimelinePlugin.create({\n              container: '#timeline',\n              // Use the single timeline container at the top\n              height: 30,\n              primaryColor: '#000',\n              secondaryColor: '#c0c0c0',\n              primaryFontColor: '#000',\n              secondaryFontColor: '#000',\n              duration: longestDuration,\n              timeInterval: Math.ceil(longestDuration / 10),\n              // Interval between markers\n              primaryLabelInterval: Math.ceil(longestDuration / 5),\n              secondaryLabelInterval: Math.ceil(longestDuration / 10),\n              fontSize: 12 // Ensure the font size is big enough to be visible\n            });\n            waveSurfer.registerPlugin(timeline);\n          }\n        });\n        wavesurferRefs.current[index] = waveSurfer;\n      });\n\n      // Cleanup function to properly handle the destruction of WaveSurfer instances\n      return () => {\n        wavesurferRefs.current.forEach(waveSurfer => {\n          if (waveSurfer) {\n            waveSurfer.destroy();\n          }\n        });\n      };\n    } else {\n      console.log('No audio files available to display.');\n    }\n  }, [audioFiles]);\n\n  // Synchronize scroll behavior for the music background\n  const handleScroll = () => {\n    const scrollLeft = musicbackgroundRef.current.scrollLeft;\n    wavesurferRefs.current.forEach(waveSurfer => {\n      waveSurfer.drawer.wrapper.scrollLeft = scrollLeft; // Sync WaveSurfer scroll\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagebackground\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"timeline\",\n      className: \"timelineStyle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"musicbackground\",\n      ref: musicbackgroundRef,\n      onScroll: handleScroll // Listen to the scroll event\n      ,\n      children: audioFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"waveformStyle\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `waveform-${index}`,\n          style: {\n            height: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), audioFiles && audioFiles.length > 0 ? /*#__PURE__*/_jsxDEV(PlayButton, {\n      wavesurferRefs: wavesurferRefs,\n      setSpeed: setSpeed // Pass the setSpeed function\n      ,\n      isReady: isReady,\n      speed: speed // Pass the speed value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No audio tracks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n_s(Landingpage, \"aMH6V5yxdkW0Nhl5+DYISXHRsZg=\", false, function () {\n  return [useLocation];\n});\n_c = Landingpage;\nexport default Landingpage;\nvar _c;\n$RefreshReg$(_c, \"Landingpage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","WaveSurfer","TimelinePlugin","useLocation","Sidebar","PlayButton","jsxDEV","_jsxDEV","Landingpage","_s","wavesurferRefs","musicbackgroundRef","location","audioFiles","state","isReady","setIsReady","speed","setSpeed","longestDuration","current","length","forEach","file","index","containerId","waveSurfer","create","container","waveColor","progressColor","height","autoCenter","interact","backend","cursorWidth","cursorColor","backgroundColor","minPxPerSec","load","url","on","duration","getDuration","timeline","primaryColor","secondaryColor","primaryFontColor","secondaryFontColor","timeInterval","Math","ceil","primaryLabelInterval","secondaryLabelInterval","fontSize","registerPlugin","destroy","console","log","handleScroll","scrollLeft","drawer","wrapper","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","ref","onScroll","map","style","_c","$RefreshReg$"],"sources":["C:/Users/elect/Documents/CIS/4914/Mellowdies/mellowdies/src/Landingpage/Landingpage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport TimelinePlugin from 'wavesurfer.js/dist/plugins/timeline';  // Import the timeline plugin\r\nimport { useLocation } from 'react-router-dom';\r\nimport Sidebar from './Sidebar.js';\r\nimport './Landingpage.css';  \r\nimport PlayButton from './PlayButton.js';\r\n\r\nfunction Landingpage() {\r\n    const wavesurferRefs = useRef([]);  // Array to hold refs for each WaveSurfer instance\r\n    const musicbackgroundRef = useRef(null);  // Ref for the music background container\r\n    const location = useLocation();\r\n    const { audioFiles } = location.state || { audioFiles: [] };\r\n    const [isReady, setIsReady] = useState(false);\r\n    const [speed, setSpeed] = useState(1);  // Define speed and setSpeed state\r\n    let longestDuration = 0;  // Variable to track the longest track duration\r\n\r\n    useEffect(() => {\r\n        // Initialize the wavesurferRefs array\r\n        wavesurferRefs.current = [];\r\n        if (audioFiles && audioFiles.length > 0) {\r\n            audioFiles.forEach((file, index) => {\r\n                const containerId = `waveform-${index}`;\r\n\r\n                // Create the WaveSurfer instance\r\n                const waveSurfer = WaveSurfer.create({\r\n                    container: `#${containerId}`,\r\n                    waveColor: 'blue',\r\n                    progressColor: '#00FFFF',\r\n                    height: 75,\r\n                    autoCenter: true,\r\n                    interact: true,\r\n                    backend: 'MediaElement',\r\n                    cursorWidth: 2,\r\n                    cursorColor: '#FF0000',\r\n                    backgroundColor: 'rgba(255, 255, 255, 0)',\r\n                    minPxPerSec: 100,  // Adjust this for width control\r\n                });\r\n\r\n                waveSurfer.load(file.url);\r\n\r\n                waveSurfer.on('ready', () => {\r\n                    setIsReady(true);\r\n\r\n                    const duration = waveSurfer.getDuration();\r\n                    if (duration > longestDuration) {\r\n                        longestDuration = duration;  // Track the longest duration\r\n                    }\r\n\r\n                    // Add the timeline plugin only for the first track\r\n                    if (index === 0) {\r\n                        const timeline = TimelinePlugin.create({\r\n                            container: '#timeline',  // Use the single timeline container at the top\r\n                            height: 30,\r\n                            primaryColor: '#000',\r\n                            secondaryColor: '#c0c0c0',\r\n                            primaryFontColor: '#000',\r\n                            secondaryFontColor: '#000',\r\n                            duration: longestDuration,\r\n                            timeInterval: Math.ceil(longestDuration / 10),  // Interval between markers\r\n                            primaryLabelInterval: Math.ceil(longestDuration / 5),\r\n                            secondaryLabelInterval: Math.ceil(longestDuration / 10),\r\n                            fontSize: 12,  // Ensure the font size is big enough to be visible\r\n                        });\r\n\r\n                        waveSurfer.registerPlugin(timeline);\r\n                    }\r\n                });\r\n\r\n                wavesurferRefs.current[index] = waveSurfer;\r\n            });\r\n\r\n            // Cleanup function to properly handle the destruction of WaveSurfer instances\r\n            return () => {\r\n                wavesurferRefs.current.forEach((waveSurfer) => {\r\n                    if (waveSurfer) {\r\n                        waveSurfer.destroy();\r\n                    }\r\n                });\r\n            };\r\n        } else {\r\n            console.log('No audio files available to display.');\r\n        }\r\n    }, [audioFiles]);\r\n\r\n    // Synchronize scroll behavior for the music background\r\n    const handleScroll = () => {\r\n        const scrollLeft = musicbackgroundRef.current.scrollLeft;\r\n        wavesurferRefs.current.forEach((waveSurfer) => {\r\n            waveSurfer.drawer.wrapper.scrollLeft = scrollLeft;  // Sync WaveSurfer scroll\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"pagebackground\">\r\n            <div id=\"timeline\" className=\"timelineStyle\"></div>  {/* Single timeline container */}\r\n\r\n            <div\r\n                className=\"musicbackground\"\r\n                ref={musicbackgroundRef}\r\n                onScroll={handleScroll}  // Listen to the scroll event\r\n            >\r\n                {audioFiles.map((file, index) => (\r\n                    <div key={index} className=\"waveformStyle\">\r\n                        <div id={`waveform-${index}`} style={{ height: '100%' }}></div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <Sidebar />\r\n\r\n            {audioFiles && audioFiles.length > 0 ? (\r\n                <PlayButton\r\n                    wavesurferRefs={wavesurferRefs}\r\n                    setSpeed={setSpeed}  // Pass the setSpeed function\r\n                    isReady={isReady}\r\n                    speed={speed}  // Pass the speed value\r\n                />\r\n            ) : (\r\n                <p>No audio tracks available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Landingpage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}