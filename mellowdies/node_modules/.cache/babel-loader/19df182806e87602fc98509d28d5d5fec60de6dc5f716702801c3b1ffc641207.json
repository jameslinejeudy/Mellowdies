{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Landingpage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport TimelinePlugin from \"wavesurfer.js/dist/plugins/timeline\";\nimport { useLocation } from 'react-router-dom';\nimport Sidebar from './Sidebar.js';\nimport cloud from '../images/backgrounds/cloud.png';\nimport PlayButton from './PlayButton.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pagebackground = {\n  backgroundSize: 'cover',\n  backgroundImage: `url(${cloud})`,\n  backgroundPosition: 'center',\n  padding: '10px',\n  height: '100vh',\n  margin: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  fontFamily: 'Concert One'\n};\nconst musicbackground = {\n  width: '75%',\n  height: '80%',\n  position: 'fixed',\n  top: '0',\n  right: '0',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'flex-start',\n  alignItems: 'left',\n  backgroundColor: 'rgba(255, 255, 255, 0.3)',\n  marginTop: '5px',\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\n  overflowY: 'auto',\n  padding: '10px'\n};\nconst trackNameStyle = {\n  position: 'relative',\n  color: '#000000',\n  fontSize: '0.8rem',\n  zIndex: '1002',\n  padding: '5px',\n  borderRadius: '5px',\n  backgroundColor: 'rgba(255, 255, 255, 0.7)'\n};\nconst waveformStyle = {\n  width: '100%',\n  height: '75px',\n  position: 'relative',\n  marginBottom: '20px'\n};\nfunction Landingpage() {\n  _s();\n  const wavesurferRefs = useRef([]); // Array to hold refs for each WaveSurfer instance\n  const location = useLocation();\n  const {\n    audioFiles\n  } = location.state || {\n    audioFiles: []\n  };\n  const [isReady, setIsReady] = useState(false);\n  const [speed, setSpeed] = useState(1);\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n    // Initialize the wavesurferRefs array\n    wavesurferRefs.current = [];\n    if (audioFiles && audioFiles.length > 0) {\n      audioFiles.forEach((file, index) => {\n        const containerId = `waveform-${index}`;\n        const waveSurfer = WaveSurfer.create({\n          container: `#${containerId}`,\n          waveColor: 'blue',\n          progressColor: '#00FFFF',\n          height: 75,\n          autoCenter: true,\n          interact: true,\n          backend: 'MediaElement',\n          cursorWidth: 2,\n          cursorColor: '#FF0000',\n          backgroundColor: 'rgba(255, 255, 255, 0)',\n          minPxPerSec: 100,\n          plugins: [TimelinePlugin.create({\n            container: `#${timelineId}`,\n            primaryColor: '#000',\n            secondaryColor: '#c0c0c0',\n            primaryFontColor: '#000',\n            secondaryFontColor: '#000'\n          })]\n        });\n        waveSurfer.load(file.url);\n        waveSurfer.on('ready', () => {\n          setIsReady(true);\n        });\n        waveSurfer.on('audioprocess', () => {\n          setProgress(waveSurfer.getCurrentTime() / waveSurfer.getDuration() * 100);\n        });\n        waveSurfer.on('seek', progress => {\n          setProgress(progress * 100);\n        });\n\n        // Store the waveSurfer instance in the refs array\n        wavesurferRefs.current[index] = waveSurfer;\n      });\n\n      // Cleanup function to properly handle the destruction of WaveSurfer instances\n      return () => {\n        wavesurferRefs.current.forEach(waveSurfer => {\n          if (waveSurfer) {\n            waveSurfer.destroy();\n          }\n        });\n      };\n    } else {\n      console.log('No audio files available to display.');\n    }\n  }, [audioFiles]);\n  const playAllTracks = () => {\n    wavesurferRefs.current.forEach(waveSurfer => {\n      waveSurfer.playPause();\n    });\n  };\n  const seekAllTracks = seekTo => {\n    wavesurferRefs.current.forEach(waveSurfer => {\n      waveSurfer.seekTo(seekTo);\n    });\n  };\n  const changeSpeedAllTracks = newSpeed => {\n    setSpeed(newSpeed);\n    wavesurferRefs.current.forEach(waveSurfer => {\n      waveSurfer.setPlaybackRate(newSpeed);\n    });\n  };\n  const forwardAllTracks = () => {\n    wavesurferRefs.current.forEach(waveSurfer => {\n      const currentTime = waveSurfer.getCurrentTime();\n      const duration = waveSurfer.getDuration();\n      const newTime = Math.min(currentTime + 5, duration); // Skip forward 5 seconds, but not beyond the duration\n      waveSurfer.seekTo(newTime / duration); // `seekTo` expects a value between 0 and 1\n    });\n  };\n  const backwardAllTracks = () => {\n    wavesurferRefs.current.forEach(waveSurfer => {\n      const currentTime = waveSurfer.getCurrentTime();\n      const newTime = Math.max(currentTime - 5, 0); // Skip back 5 seconds, but not before the start\n      const duration = waveSurfer.getDuration();\n      waveSurfer.seekTo(newTime / duration); // `seekTo` expects a value between 0 and 1\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: pagebackground,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: musicbackground,\n      children: audioFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: waveformStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: trackNameStyle,\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `waveform-${index}`,\n          style: {\n            width: '100%',\n            height: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), audioFiles && audioFiles.length > 0 ? /*#__PURE__*/_jsxDEV(PlayButton, {\n      playAllTracks: playAllTracks,\n      forwardAllTracks: forwardAllTracks,\n      backwardAllTracks: backwardAllTracks,\n      seekAllTracks: seekAllTracks,\n      changeSpeedAllTracks: changeSpeedAllTracks,\n      isReady: isReady,\n      speed: speed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No audio tracks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 9\n  }, this);\n}\n_s(Landingpage, \"dK/LU+t3NJJfJRth0ItGrPDsyZM=\", false, function () {\n  return [useLocation];\n});\n_c = Landingpage;\nexport default Landingpage;\nvar _c;\n$RefreshReg$(_c, \"Landingpage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","WaveSurfer","TimelinePlugin","useLocation","Sidebar","cloud","PlayButton","jsxDEV","_jsxDEV","pagebackground","backgroundSize","backgroundImage","backgroundPosition","padding","height","margin","display","flexDirection","fontFamily","musicbackground","width","position","top","right","justifyContent","alignItems","backgroundColor","marginTop","boxShadow","overflowY","trackNameStyle","color","fontSize","zIndex","borderRadius","waveformStyle","marginBottom","Landingpage","_s","wavesurferRefs","location","audioFiles","state","isReady","setIsReady","speed","setSpeed","progress","setProgress","current","length","forEach","file","index","containerId","waveSurfer","create","container","waveColor","progressColor","autoCenter","interact","backend","cursorWidth","cursorColor","minPxPerSec","plugins","timelineId","primaryColor","secondaryColor","primaryFontColor","secondaryFontColor","load","url","on","getCurrentTime","getDuration","destroy","console","log","playAllTracks","playPause","seekAllTracks","seekTo","changeSpeedAllTracks","newSpeed","setPlaybackRate","forwardAllTracks","currentTime","duration","newTime","Math","min","backwardAllTracks","max","style","children","map","name","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Mellowdies/mellowdies/src/Landingpage/Landingpage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport TimelinePlugin from \"wavesurfer.js/dist/plugins/timeline\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport Sidebar from './Sidebar.js';\r\nimport cloud from '../images/backgrounds/cloud.png';\r\nimport PlayButton from './PlayButton.js';\r\n\r\nconst pagebackground = {\r\n    backgroundSize: 'cover',\r\n    backgroundImage: `url(${cloud})`,\r\n    backgroundPosition: 'center',\r\n    padding: '10px',\r\n    height: '100vh',\r\n    margin: 0,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    fontFamily: 'Concert One',\r\n};\r\n\r\nconst musicbackground = {\r\n    width: '75%',\r\n    height: '80%',\r\n    position: 'fixed',\r\n    top: '0',\r\n    right: '0',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'left',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.3)',\r\n    marginTop: '5px',\r\n    boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\r\n    overflowY: 'auto',\r\n    padding: '10px',\r\n};\r\n\r\nconst trackNameStyle = {\r\n    position: 'relative',\r\n    color: '#000000',\r\n    fontSize: '0.8rem',\r\n    zIndex: '1002',\r\n    padding: '5px',\r\n    borderRadius: '5px',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.7)',\r\n};\r\n\r\nconst waveformStyle = {\r\n    width: '100%',\r\n    height: '75px',\r\n    position: 'relative',\r\n    marginBottom: '20px',\r\n};\r\n\r\nfunction Landingpage() {\r\n    const wavesurferRefs = useRef([]);  // Array to hold refs for each WaveSurfer instance\r\n    const location = useLocation();\r\n    const { audioFiles } = location.state || { audioFiles: [] };\r\n    const [isReady, setIsReady] = useState(false);\r\n    const [speed, setSpeed] = useState(1);\r\n    const [progress, setProgress] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // Initialize the wavesurferRefs array\r\n        wavesurferRefs.current = [];\r\n\r\n        if (audioFiles && audioFiles.length > 0) {\r\n            audioFiles.forEach((file, index) => {\r\n                const containerId = `waveform-${index}`;\r\n                \r\n\r\n                \r\n\r\n                const waveSurfer = WaveSurfer.create({\r\n                    container: `#${containerId}`,\r\n                    waveColor: 'blue',\r\n                    progressColor: '#00FFFF',\r\n                    height: 75,\r\n                    autoCenter: true,\r\n                    interact: true,\r\n                    backend: 'MediaElement',\r\n                    cursorWidth: 2,\r\n                    cursorColor: '#FF0000',\r\n                    backgroundColor: 'rgba(255, 255, 255, 0)',\r\n                    minPxPerSec: 100,\r\n                    plugins: [\r\n                        TimelinePlugin.create({\r\n                            container: `#${timelineId}`,\r\n                            primaryColor: '#000',\r\n                            secondaryColor: '#c0c0c0',\r\n                            primaryFontColor: '#000',\r\n                            secondaryFontColor: '#000',\r\n                        })\r\n                    ]\r\n                });\r\n\r\n                waveSurfer.load(file.url);\r\n\r\n                waveSurfer.on('ready', () => {\r\n                    setIsReady(true);\r\n                });\r\n\r\n                waveSurfer.on('audioprocess', () => {\r\n                    setProgress(waveSurfer.getCurrentTime() / waveSurfer.getDuration() * 100);\r\n                });\r\n\r\n                waveSurfer.on('seek', (progress) => {\r\n                    setProgress(progress * 100);\r\n                });\r\n\r\n                // Store the waveSurfer instance in the refs array\r\n                wavesurferRefs.current[index] = waveSurfer;\r\n            });\r\n\r\n            // Cleanup function to properly handle the destruction of WaveSurfer instances\r\n            return () => {\r\n                wavesurferRefs.current.forEach(waveSurfer => {\r\n                    if (waveSurfer) {\r\n                        waveSurfer.destroy();\r\n                    }\r\n                });\r\n            };\r\n        } else {\r\n            console.log('No audio files available to display.');\r\n        }\r\n    }, [audioFiles]);\r\n\r\n    const playAllTracks = () => {\r\n        wavesurferRefs.current.forEach(waveSurfer => {\r\n            waveSurfer.playPause();\r\n        });\r\n    };\r\n\r\n    const seekAllTracks = (seekTo) => {\r\n        wavesurferRefs.current.forEach(waveSurfer => {\r\n            waveSurfer.seekTo(seekTo);\r\n        });\r\n    };\r\n\r\n    const changeSpeedAllTracks = (newSpeed) => {\r\n        setSpeed(newSpeed);\r\n        wavesurferRefs.current.forEach(waveSurfer => {\r\n            waveSurfer.setPlaybackRate(newSpeed);\r\n        });\r\n    };\r\n\r\n    const forwardAllTracks = () => {\r\n        wavesurferRefs.current.forEach(waveSurfer => {\r\n            const currentTime = waveSurfer.getCurrentTime();\r\n            const duration = waveSurfer.getDuration();\r\n            const newTime = Math.min(currentTime + 5, duration);  // Skip forward 5 seconds, but not beyond the duration\r\n            waveSurfer.seekTo(newTime / duration);  // `seekTo` expects a value between 0 and 1\r\n        });\r\n    };\r\n\r\n    const backwardAllTracks = () => {\r\n        wavesurferRefs.current.forEach(waveSurfer => {\r\n            const currentTime = waveSurfer.getCurrentTime();\r\n            const newTime = Math.max(currentTime - 5, 0);  // Skip back 5 seconds, but not before the start\r\n            const duration = waveSurfer.getDuration();\r\n            waveSurfer.seekTo(newTime / duration);  // `seekTo` expects a value between 0 and 1\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div style={pagebackground}>\r\n            <div style={musicbackground}>\r\n                {audioFiles.map((file, index) => (\r\n                    <div key={index} style={waveformStyle}>\r\n                        <div style={trackNameStyle}>{file.name}</div>\r\n              \r\n                        <div id={`waveform-${index}`} style={{ width: '100%', height: '100%' }}></div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <Sidebar/>\r\n\r\n            {audioFiles && audioFiles.length > 0 ? (\r\n                <PlayButton\r\n                    playAllTracks={playAllTracks}\r\n                    forwardAllTracks={forwardAllTracks}\r\n                    backwardAllTracks={backwardAllTracks}\r\n                    seekAllTracks={seekAllTracks}\r\n                    changeSpeedAllTracks={changeSpeedAllTracks}\r\n                    isReady={isReady}\r\n                    speed={speed}\r\n                />\r\n            ) : (\r\n                <p>No audio tracks available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Landingpage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}