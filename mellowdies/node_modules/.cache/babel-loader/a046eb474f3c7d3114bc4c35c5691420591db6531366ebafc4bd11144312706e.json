{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst memoize = require(\"../util/memoize\");\nconst getBrowserslistTargetHandler = memoize(() => require(\"./browserslistTargetHandler\"));\n\n/**\n * @param {string} context the context directory\n * @returns {string} default target\n */\nconst getDefaultTarget = context => {\n  const browsers = getBrowserslistTargetHandler().load(null, context);\n  return browsers ? \"browserslist\" : \"web\";\n};\n\n/**\n * @typedef {object} PlatformTargetProperties\n * @property {boolean | null} web web platform, importing of http(s) and std: is available\n * @property {boolean | null} browser browser platform, running in a normal web browser\n * @property {boolean | null} webworker (Web)Worker platform, running in a web/shared/service worker\n * @property {boolean | null} node node platform, require of node built-in modules is available\n * @property {boolean | null} nwjs nwjs platform, require of legacy nw.gui is available\n * @property {boolean | null} electron electron platform, require of some electron built-in modules is available\n */\n\n/**\n * @typedef {object} ElectronContextTargetProperties\n * @property {boolean | null} electronMain in main context\n * @property {boolean | null} electronPreload in preload context\n * @property {boolean | null} electronRenderer in renderer context with node integration\n */\n\n/**\n * @typedef {object} ApiTargetProperties\n * @property {boolean | null} require has require function available\n * @property {boolean | null} nodeBuiltins has node.js built-in modules available\n * @property {boolean | null} nodePrefixForCoreModules node.js allows to use `node:` prefix for core modules\n * @property {boolean | null} document has document available (allows script tags)\n * @property {boolean | null} importScripts has importScripts available\n * @property {boolean | null} importScriptsInWorker has importScripts available when creating a worker\n * @property {boolean | null} fetchWasm has fetch function available for WebAssembly\n * @property {boolean | null} global has global variable available\n */\n\n/**\n * @typedef {object} EcmaTargetProperties\n * @property {boolean | null} globalThis has globalThis variable available\n * @property {boolean | null} bigIntLiteral big int literal syntax is available\n * @property {boolean | null} const const and let variable declarations are available\n * @property {boolean | null} arrowFunction arrow functions are available\n * @property {boolean | null} forOf for of iteration is available\n * @property {boolean | null} destructuring destructuring is available\n * @property {boolean | null} dynamicImport async import() is available\n * @property {boolean | null} dynamicImportInWorker async import() is available when creating a worker\n * @property {boolean | null} module ESM syntax is available (when in module)\n * @property {boolean | null} optionalChaining optional chaining is available\n * @property {boolean | null} templateLiteral template literal is available\n * @property {boolean | null} asyncFunction async functions and await are available\n */\n\n/**\n * @template T\n * @typedef {{ [P in keyof T]?: never }} Never<T>\n */\n\n/**\n * @template A\n * @template B\n * @typedef {(A & Never<B>) | (Never<A> & B) | (A & B)} Mix<A, B>\n */\n\n/** @typedef {Mix<Mix<PlatformTargetProperties, ElectronContextTargetProperties>, Mix<ApiTargetProperties, EcmaTargetProperties>>} TargetProperties */\n\n/**\n * @param {string} major major version\n * @param {string | undefined} minor minor version\n * @returns {(vMajor: number, vMinor?: number) => boolean | undefined} check if version is greater or equal\n */\nconst versionDependent = (major, minor) => {\n  if (!major) {\n    return () => (/** @type {undefined} */undefined);\n  }\n  /** @type {number} */\n  const nMajor = Number(major);\n  /** @type {number} */\n  const nMinor = minor ? Number(minor) : 0;\n  return (vMajor, vMinor = 0) => nMajor > vMajor || nMajor === vMajor && nMinor >= vMinor;\n};\n\n/** @type {[string, string, RegExp, (...args: string[]) => Partial<TargetProperties>][]} */\nconst TARGETS = [[\"browserslist / browserslist:env / browserslist:query / browserslist:path-to-config / browserslist:path-to-config:env\", \"Resolve features from browserslist. Will resolve browserslist config automatically. Only browser or node queries are supported (electron is not supported). Examples: 'browserslist:modern' to use 'modern' environment from browserslist config\", /^browserslist(?::(.+))?$/, (rest, context) => {\n  const browserslistTargetHandler = getBrowserslistTargetHandler();\n  const browsers = browserslistTargetHandler.load(rest ? rest.trim() : null, context);\n  if (!browsers) {\n    throw new Error(`No browserslist config found to handle the 'browserslist' target.\nSee https://github.com/browserslist/browserslist#queries for possible ways to provide a config.\nThe recommended way is to add a 'browserslist' key to your package.json and list supported browsers (resp. node.js versions).\nYou can also more options via the 'target' option: 'browserslist' / 'browserslist:env' / 'browserslist:query' / 'browserslist:path-to-config' / 'browserslist:path-to-config:env'`);\n  }\n  return browserslistTargetHandler.resolve(browsers);\n}], [\"web\", \"Web browser.\", /^web$/, () => ({\n  web: true,\n  browser: true,\n  webworker: null,\n  node: false,\n  electron: false,\n  nwjs: false,\n  document: true,\n  importScriptsInWorker: true,\n  fetchWasm: true,\n  nodeBuiltins: false,\n  importScripts: false,\n  require: false,\n  global: false\n})], [\"webworker\", \"Web Worker, SharedWorker or Service Worker.\", /^webworker$/, () => ({\n  web: true,\n  browser: true,\n  webworker: true,\n  node: false,\n  electron: false,\n  nwjs: false,\n  importScripts: true,\n  importScriptsInWorker: true,\n  fetchWasm: true,\n  nodeBuiltins: false,\n  require: false,\n  document: false,\n  global: false\n})], [\"[async-]node[X[.Y]]\", \"Node.js in version X.Y. The 'async-' prefix will load chunks asynchronously via 'fs' and 'vm' instead of 'require()'. Examples: node14.5, async-node10.\", /^(async-)?node((\\d+)(?:\\.(\\d+))?)?$/, (asyncFlag, _, major, minor) => {\n  const v = versionDependent(major, minor);\n  // see https://node.green/\n  return {\n    node: true,\n    electron: false,\n    nwjs: false,\n    web: false,\n    webworker: false,\n    browser: false,\n    require: !asyncFlag,\n    nodeBuiltins: true,\n    // v16.0.0, v14.18.0\n    nodePrefixForCoreModules: Number(major) < 15 ? v(14, 18) : v(16),\n    global: true,\n    document: false,\n    fetchWasm: false,\n    importScripts: false,\n    importScriptsInWorker: false,\n    globalThis: v(12),\n    const: v(6),\n    templateLiteral: v(4),\n    optionalChaining: v(14),\n    arrowFunction: v(6),\n    asyncFunction: v(7, 6),\n    forOf: v(5),\n    destructuring: v(6),\n    bigIntLiteral: v(10, 4),\n    dynamicImport: v(12, 17),\n    dynamicImportInWorker: major ? false : undefined,\n    module: v(12, 17)\n  };\n}], [\"electron[X[.Y]]-main/preload/renderer\", \"Electron in version X.Y. Script is running in main, preload resp. renderer context.\", /^electron((\\d+)(?:\\.(\\d+))?)?-(main|preload|renderer)$/, (_, major, minor, context) => {\n  const v = versionDependent(major, minor);\n  // see https://node.green/ + https://github.com/electron/releases\n  return {\n    node: true,\n    electron: true,\n    web: context !== \"main\",\n    webworker: false,\n    browser: false,\n    nwjs: false,\n    electronMain: context === \"main\",\n    electronPreload: context === \"preload\",\n    electronRenderer: context === \"renderer\",\n    global: true,\n    nodeBuiltins: true,\n    // 15.0.0\t- Node.js\tv16.5\n    // 14.0.0 - Mode.js v14.17, but prefixes only since v14.18\n    nodePrefixForCoreModules: v(15),\n    require: true,\n    document: context === \"renderer\",\n    fetchWasm: context === \"renderer\",\n    importScripts: false,\n    importScriptsInWorker: true,\n    globalThis: v(5),\n    const: v(1, 1),\n    templateLiteral: v(1, 1),\n    optionalChaining: v(8),\n    arrowFunction: v(1, 1),\n    asyncFunction: v(1, 7),\n    forOf: v(0, 36),\n    destructuring: v(1, 1),\n    bigIntLiteral: v(4),\n    dynamicImport: v(11),\n    dynamicImportInWorker: major ? false : undefined,\n    module: v(11)\n  };\n}], [\"nwjs[X[.Y]] / node-webkit[X[.Y]]\", \"NW.js in version X.Y.\", /^(?:nwjs|node-webkit)((\\d+)(?:\\.(\\d+))?)?$/, (_, major, minor) => {\n  const v = versionDependent(major, minor);\n  // see https://node.green/ + https://github.com/nwjs/nw.js/blob/nw48/CHANGELOG.md\n  return {\n    node: true,\n    web: true,\n    nwjs: true,\n    webworker: null,\n    browser: false,\n    electron: false,\n    global: true,\n    nodeBuiltins: true,\n    document: false,\n    importScriptsInWorker: false,\n    fetchWasm: false,\n    importScripts: false,\n    require: false,\n    globalThis: v(0, 43),\n    const: v(0, 15),\n    templateLiteral: v(0, 13),\n    optionalChaining: v(0, 44),\n    arrowFunction: v(0, 15),\n    asyncFunction: v(0, 21),\n    forOf: v(0, 13),\n    destructuring: v(0, 15),\n    bigIntLiteral: v(0, 32),\n    dynamicImport: v(0, 43),\n    dynamicImportInWorker: major ? false : undefined,\n    module: v(0, 43)\n  };\n}], [\"esX\", \"EcmaScript in this version. Examples: es2020, es5.\", /^es(\\d+)$/, version => {\n  let v = Number(version);\n  if (v < 1000) v = v + 2009;\n  return {\n    const: v >= 2015,\n    templateLiteral: v >= 2015,\n    optionalChaining: v >= 2020,\n    arrowFunction: v >= 2015,\n    forOf: v >= 2015,\n    destructuring: v >= 2015,\n    module: v >= 2015,\n    asyncFunction: v >= 2017,\n    globalThis: v >= 2020,\n    bigIntLiteral: v >= 2020,\n    dynamicImport: v >= 2020,\n    dynamicImportInWorker: v >= 2020\n  };\n}]];\n\n/**\n * @param {string} target the target\n * @param {string} context the context directory\n * @returns {TargetProperties} target properties\n */\nconst getTargetProperties = (target, context) => {\n  for (const [,, regExp, handler] of TARGETS) {\n    const match = regExp.exec(target);\n    if (match) {\n      const [, ...args] = match;\n      const result = handler(...args, context);\n      if (result) return /** @type {TargetProperties} */result;\n    }\n  }\n  throw new Error(`Unknown target '${target}'. The following targets are supported:\\n${TARGETS.map(([name, description]) => `* ${name}: ${description}`).join(\"\\n\")}`);\n};\n\n/**\n * @param {TargetProperties[]} targetProperties array of target properties\n * @returns {TargetProperties} merged target properties\n */\nconst mergeTargetProperties = targetProperties => {\n  /** @type {Set<keyof TargetProperties>} */\n  const keys = new Set();\n  for (const tp of targetProperties) {\n    for (const key of Object.keys(tp)) {\n      keys.add(/** @type {keyof TargetProperties} */key);\n    }\n  }\n  /** @type {object} */\n  const result = {};\n  for (const key of keys) {\n    let hasTrue = false;\n    let hasFalse = false;\n    for (const tp of targetProperties) {\n      const value = tp[key];\n      switch (value) {\n        case true:\n          hasTrue = true;\n          break;\n        case false:\n          hasFalse = true;\n          break;\n      }\n    }\n    if (hasTrue || hasFalse) /** @type {TargetProperties} */\n      result[key] = hasFalse && hasTrue ? null : Boolean(hasTrue);\n  }\n  return /** @type {TargetProperties} */result;\n};\n\n/**\n * @param {string[]} targets the targets\n * @param {string} context the context directory\n * @returns {TargetProperties} target properties\n */\nconst getTargetsProperties = (targets, context) => mergeTargetProperties(targets.map(t => getTargetProperties(t, context)));\nmodule.exports.getDefaultTarget = getDefaultTarget;\nmodule.exports.getTargetProperties = getTargetProperties;\nmodule.exports.getTargetsProperties = getTargetsProperties;","map":{"version":3,"names":["memoize","require","getBrowserslistTargetHandler","getDefaultTarget","context","browsers","load","versionDependent","major","minor","undefined","nMajor","Number","nMinor","vMajor","vMinor","TARGETS","rest","browserslistTargetHandler","trim","Error","resolve","web","browser","webworker","node","electron","nwjs","document","importScriptsInWorker","fetchWasm","nodeBuiltins","importScripts","global","asyncFlag","_","v","nodePrefixForCoreModules","globalThis","const","templateLiteral","optionalChaining","arrowFunction","asyncFunction","forOf","destructuring","bigIntLiteral","dynamicImport","dynamicImportInWorker","module","electronMain","electronPreload","electronRenderer","version","getTargetProperties","target","regExp","handler","match","exec","args","result","map","name","description","join","mergeTargetProperties","targetProperties","keys","Set","tp","key","Object","add","hasTrue","hasFalse","value","Boolean","getTargetsProperties","targets","t","exports"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/node_modules/webpack/lib/config/target.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst memoize = require(\"../util/memoize\");\n\nconst getBrowserslistTargetHandler = memoize(() =>\n\trequire(\"./browserslistTargetHandler\")\n);\n\n/**\n * @param {string} context the context directory\n * @returns {string} default target\n */\nconst getDefaultTarget = context => {\n\tconst browsers = getBrowserslistTargetHandler().load(null, context);\n\treturn browsers ? \"browserslist\" : \"web\";\n};\n\n/**\n * @typedef {object} PlatformTargetProperties\n * @property {boolean | null} web web platform, importing of http(s) and std: is available\n * @property {boolean | null} browser browser platform, running in a normal web browser\n * @property {boolean | null} webworker (Web)Worker platform, running in a web/shared/service worker\n * @property {boolean | null} node node platform, require of node built-in modules is available\n * @property {boolean | null} nwjs nwjs platform, require of legacy nw.gui is available\n * @property {boolean | null} electron electron platform, require of some electron built-in modules is available\n */\n\n/**\n * @typedef {object} ElectronContextTargetProperties\n * @property {boolean | null} electronMain in main context\n * @property {boolean | null} electronPreload in preload context\n * @property {boolean | null} electronRenderer in renderer context with node integration\n */\n\n/**\n * @typedef {object} ApiTargetProperties\n * @property {boolean | null} require has require function available\n * @property {boolean | null} nodeBuiltins has node.js built-in modules available\n * @property {boolean | null} nodePrefixForCoreModules node.js allows to use `node:` prefix for core modules\n * @property {boolean | null} document has document available (allows script tags)\n * @property {boolean | null} importScripts has importScripts available\n * @property {boolean | null} importScriptsInWorker has importScripts available when creating a worker\n * @property {boolean | null} fetchWasm has fetch function available for WebAssembly\n * @property {boolean | null} global has global variable available\n */\n\n/**\n * @typedef {object} EcmaTargetProperties\n * @property {boolean | null} globalThis has globalThis variable available\n * @property {boolean | null} bigIntLiteral big int literal syntax is available\n * @property {boolean | null} const const and let variable declarations are available\n * @property {boolean | null} arrowFunction arrow functions are available\n * @property {boolean | null} forOf for of iteration is available\n * @property {boolean | null} destructuring destructuring is available\n * @property {boolean | null} dynamicImport async import() is available\n * @property {boolean | null} dynamicImportInWorker async import() is available when creating a worker\n * @property {boolean | null} module ESM syntax is available (when in module)\n * @property {boolean | null} optionalChaining optional chaining is available\n * @property {boolean | null} templateLiteral template literal is available\n * @property {boolean | null} asyncFunction async functions and await are available\n */\n\n/**\n * @template T\n * @typedef {{ [P in keyof T]?: never }} Never<T>\n */\n\n/**\n * @template A\n * @template B\n * @typedef {(A & Never<B>) | (Never<A> & B) | (A & B)} Mix<A, B>\n */\n\n/** @typedef {Mix<Mix<PlatformTargetProperties, ElectronContextTargetProperties>, Mix<ApiTargetProperties, EcmaTargetProperties>>} TargetProperties */\n\n/**\n * @param {string} major major version\n * @param {string | undefined} minor minor version\n * @returns {(vMajor: number, vMinor?: number) => boolean | undefined} check if version is greater or equal\n */\nconst versionDependent = (major, minor) => {\n\tif (!major) {\n\t\treturn () => /** @type {undefined} */ (undefined);\n\t}\n\t/** @type {number} */\n\tconst nMajor = Number(major);\n\t/** @type {number} */\n\tconst nMinor = minor ? Number(minor) : 0;\n\treturn (vMajor, vMinor = 0) =>\n\t\tnMajor > vMajor || (nMajor === vMajor && nMinor >= vMinor);\n};\n\n/** @type {[string, string, RegExp, (...args: string[]) => Partial<TargetProperties>][]} */\nconst TARGETS = [\n\t[\n\t\t\"browserslist / browserslist:env / browserslist:query / browserslist:path-to-config / browserslist:path-to-config:env\",\n\t\t\"Resolve features from browserslist. Will resolve browserslist config automatically. Only browser or node queries are supported (electron is not supported). Examples: 'browserslist:modern' to use 'modern' environment from browserslist config\",\n\t\t/^browserslist(?::(.+))?$/,\n\t\t(rest, context) => {\n\t\t\tconst browserslistTargetHandler = getBrowserslistTargetHandler();\n\t\t\tconst browsers = browserslistTargetHandler.load(\n\t\t\t\trest ? rest.trim() : null,\n\t\t\t\tcontext\n\t\t\t);\n\t\t\tif (!browsers) {\n\t\t\t\tthrow new Error(`No browserslist config found to handle the 'browserslist' target.\nSee https://github.com/browserslist/browserslist#queries for possible ways to provide a config.\nThe recommended way is to add a 'browserslist' key to your package.json and list supported browsers (resp. node.js versions).\nYou can also more options via the 'target' option: 'browserslist' / 'browserslist:env' / 'browserslist:query' / 'browserslist:path-to-config' / 'browserslist:path-to-config:env'`);\n\t\t\t}\n\n\t\t\treturn browserslistTargetHandler.resolve(browsers);\n\t\t}\n\t],\n\t[\n\t\t\"web\",\n\t\t\"Web browser.\",\n\t\t/^web$/,\n\t\t() => ({\n\t\t\tweb: true,\n\t\t\tbrowser: true,\n\t\t\twebworker: null,\n\t\t\tnode: false,\n\t\t\telectron: false,\n\t\t\tnwjs: false,\n\n\t\t\tdocument: true,\n\t\t\timportScriptsInWorker: true,\n\t\t\tfetchWasm: true,\n\t\t\tnodeBuiltins: false,\n\t\t\timportScripts: false,\n\t\t\trequire: false,\n\t\t\tglobal: false\n\t\t})\n\t],\n\t[\n\t\t\"webworker\",\n\t\t\"Web Worker, SharedWorker or Service Worker.\",\n\t\t/^webworker$/,\n\t\t() => ({\n\t\t\tweb: true,\n\t\t\tbrowser: true,\n\t\t\twebworker: true,\n\t\t\tnode: false,\n\t\t\telectron: false,\n\t\t\tnwjs: false,\n\n\t\t\timportScripts: true,\n\t\t\timportScriptsInWorker: true,\n\t\t\tfetchWasm: true,\n\t\t\tnodeBuiltins: false,\n\t\t\trequire: false,\n\t\t\tdocument: false,\n\t\t\tglobal: false\n\t\t})\n\t],\n\t[\n\t\t\"[async-]node[X[.Y]]\",\n\t\t\"Node.js in version X.Y. The 'async-' prefix will load chunks asynchronously via 'fs' and 'vm' instead of 'require()'. Examples: node14.5, async-node10.\",\n\t\t/^(async-)?node((\\d+)(?:\\.(\\d+))?)?$/,\n\t\t(asyncFlag, _, major, minor) => {\n\t\t\tconst v = versionDependent(major, minor);\n\t\t\t// see https://node.green/\n\t\t\treturn {\n\t\t\t\tnode: true,\n\t\t\t\telectron: false,\n\t\t\t\tnwjs: false,\n\t\t\t\tweb: false,\n\t\t\t\twebworker: false,\n\t\t\t\tbrowser: false,\n\n\t\t\t\trequire: !asyncFlag,\n\t\t\t\tnodeBuiltins: true,\n\t\t\t\t// v16.0.0, v14.18.0\n\t\t\t\tnodePrefixForCoreModules: Number(major) < 15 ? v(14, 18) : v(16),\n\t\t\t\tglobal: true,\n\t\t\t\tdocument: false,\n\t\t\t\tfetchWasm: false,\n\t\t\t\timportScripts: false,\n\t\t\t\timportScriptsInWorker: false,\n\n\t\t\t\tglobalThis: v(12),\n\t\t\t\tconst: v(6),\n\t\t\t\ttemplateLiteral: v(4),\n\t\t\t\toptionalChaining: v(14),\n\t\t\t\tarrowFunction: v(6),\n\t\t\t\tasyncFunction: v(7, 6),\n\t\t\t\tforOf: v(5),\n\t\t\t\tdestructuring: v(6),\n\t\t\t\tbigIntLiteral: v(10, 4),\n\t\t\t\tdynamicImport: v(12, 17),\n\t\t\t\tdynamicImportInWorker: major ? false : undefined,\n\t\t\t\tmodule: v(12, 17)\n\t\t\t};\n\t\t}\n\t],\n\t[\n\t\t\"electron[X[.Y]]-main/preload/renderer\",\n\t\t\"Electron in version X.Y. Script is running in main, preload resp. renderer context.\",\n\t\t/^electron((\\d+)(?:\\.(\\d+))?)?-(main|preload|renderer)$/,\n\t\t(_, major, minor, context) => {\n\t\t\tconst v = versionDependent(major, minor);\n\t\t\t// see https://node.green/ + https://github.com/electron/releases\n\t\t\treturn {\n\t\t\t\tnode: true,\n\t\t\t\telectron: true,\n\t\t\t\tweb: context !== \"main\",\n\t\t\t\twebworker: false,\n\t\t\t\tbrowser: false,\n\t\t\t\tnwjs: false,\n\n\t\t\t\telectronMain: context === \"main\",\n\t\t\t\telectronPreload: context === \"preload\",\n\t\t\t\telectronRenderer: context === \"renderer\",\n\n\t\t\t\tglobal: true,\n\t\t\t\tnodeBuiltins: true,\n\t\t\t\t// 15.0.0\t- Node.js\tv16.5\n\t\t\t\t// 14.0.0 - Mode.js v14.17, but prefixes only since v14.18\n\t\t\t\tnodePrefixForCoreModules: v(15),\n\n\t\t\t\trequire: true,\n\t\t\t\tdocument: context === \"renderer\",\n\t\t\t\tfetchWasm: context === \"renderer\",\n\t\t\t\timportScripts: false,\n\t\t\t\timportScriptsInWorker: true,\n\n\t\t\t\tglobalThis: v(5),\n\t\t\t\tconst: v(1, 1),\n\t\t\t\ttemplateLiteral: v(1, 1),\n\t\t\t\toptionalChaining: v(8),\n\t\t\t\tarrowFunction: v(1, 1),\n\t\t\t\tasyncFunction: v(1, 7),\n\t\t\t\tforOf: v(0, 36),\n\t\t\t\tdestructuring: v(1, 1),\n\t\t\t\tbigIntLiteral: v(4),\n\t\t\t\tdynamicImport: v(11),\n\t\t\t\tdynamicImportInWorker: major ? false : undefined,\n\t\t\t\tmodule: v(11)\n\t\t\t};\n\t\t}\n\t],\n\t[\n\t\t\"nwjs[X[.Y]] / node-webkit[X[.Y]]\",\n\t\t\"NW.js in version X.Y.\",\n\t\t/^(?:nwjs|node-webkit)((\\d+)(?:\\.(\\d+))?)?$/,\n\t\t(_, major, minor) => {\n\t\t\tconst v = versionDependent(major, minor);\n\t\t\t// see https://node.green/ + https://github.com/nwjs/nw.js/blob/nw48/CHANGELOG.md\n\t\t\treturn {\n\t\t\t\tnode: true,\n\t\t\t\tweb: true,\n\t\t\t\tnwjs: true,\n\t\t\t\twebworker: null,\n\t\t\t\tbrowser: false,\n\t\t\t\telectron: false,\n\n\t\t\t\tglobal: true,\n\t\t\t\tnodeBuiltins: true,\n\t\t\t\tdocument: false,\n\t\t\t\timportScriptsInWorker: false,\n\t\t\t\tfetchWasm: false,\n\t\t\t\timportScripts: false,\n\t\t\t\trequire: false,\n\n\t\t\t\tglobalThis: v(0, 43),\n\t\t\t\tconst: v(0, 15),\n\t\t\t\ttemplateLiteral: v(0, 13),\n\t\t\t\toptionalChaining: v(0, 44),\n\t\t\t\tarrowFunction: v(0, 15),\n\t\t\t\tasyncFunction: v(0, 21),\n\t\t\t\tforOf: v(0, 13),\n\t\t\t\tdestructuring: v(0, 15),\n\t\t\t\tbigIntLiteral: v(0, 32),\n\t\t\t\tdynamicImport: v(0, 43),\n\t\t\t\tdynamicImportInWorker: major ? false : undefined,\n\t\t\t\tmodule: v(0, 43)\n\t\t\t};\n\t\t}\n\t],\n\t[\n\t\t\"esX\",\n\t\t\"EcmaScript in this version. Examples: es2020, es5.\",\n\t\t/^es(\\d+)$/,\n\t\tversion => {\n\t\t\tlet v = Number(version);\n\t\t\tif (v < 1000) v = v + 2009;\n\t\t\treturn {\n\t\t\t\tconst: v >= 2015,\n\t\t\t\ttemplateLiteral: v >= 2015,\n\t\t\t\toptionalChaining: v >= 2020,\n\t\t\t\tarrowFunction: v >= 2015,\n\t\t\t\tforOf: v >= 2015,\n\t\t\t\tdestructuring: v >= 2015,\n\t\t\t\tmodule: v >= 2015,\n\t\t\t\tasyncFunction: v >= 2017,\n\t\t\t\tglobalThis: v >= 2020,\n\t\t\t\tbigIntLiteral: v >= 2020,\n\t\t\t\tdynamicImport: v >= 2020,\n\t\t\t\tdynamicImportInWorker: v >= 2020\n\t\t\t};\n\t\t}\n\t]\n];\n\n/**\n * @param {string} target the target\n * @param {string} context the context directory\n * @returns {TargetProperties} target properties\n */\nconst getTargetProperties = (target, context) => {\n\tfor (const [, , regExp, handler] of TARGETS) {\n\t\tconst match = regExp.exec(target);\n\t\tif (match) {\n\t\t\tconst [, ...args] = match;\n\t\t\tconst result = handler(...args, context);\n\t\t\tif (result) return /** @type {TargetProperties} */ (result);\n\t\t}\n\t}\n\tthrow new Error(\n\t\t`Unknown target '${target}'. The following targets are supported:\\n${TARGETS.map(\n\t\t\t([name, description]) => `* ${name}: ${description}`\n\t\t).join(\"\\n\")}`\n\t);\n};\n\n/**\n * @param {TargetProperties[]} targetProperties array of target properties\n * @returns {TargetProperties} merged target properties\n */\nconst mergeTargetProperties = targetProperties => {\n\t/** @type {Set<keyof TargetProperties>} */\n\tconst keys = new Set();\n\tfor (const tp of targetProperties) {\n\t\tfor (const key of Object.keys(tp)) {\n\t\t\tkeys.add(/** @type {keyof TargetProperties} */ (key));\n\t\t}\n\t}\n\t/** @type {object} */\n\tconst result = {};\n\tfor (const key of keys) {\n\t\tlet hasTrue = false;\n\t\tlet hasFalse = false;\n\t\tfor (const tp of targetProperties) {\n\t\t\tconst value = tp[key];\n\t\t\tswitch (value) {\n\t\t\t\tcase true:\n\t\t\t\t\thasTrue = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase false:\n\t\t\t\t\thasFalse = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (hasTrue || hasFalse)\n\t\t\t/** @type {TargetProperties} */\n\t\t\t(result)[key] = hasFalse && hasTrue ? null : Boolean(hasTrue);\n\t}\n\treturn /** @type {TargetProperties} */ (result);\n};\n\n/**\n * @param {string[]} targets the targets\n * @param {string} context the context directory\n * @returns {TargetProperties} target properties\n */\nconst getTargetsProperties = (targets, context) =>\n\tmergeTargetProperties(targets.map(t => getTargetProperties(t, context)));\n\nmodule.exports.getDefaultTarget = getDefaultTarget;\nmodule.exports.getTargetProperties = getTargetProperties;\nmodule.exports.getTargetsProperties = getTargetsProperties;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}