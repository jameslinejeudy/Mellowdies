{"ast":null,"code":"/**\r\n * @module audio-format\r\n */\n'use strict';\n\nvar rates = require('sample-rate');\nvar os = require('os');\nvar isAudioBuffer = require('is-audio-buffer');\nvar isBuffer = require('is-buffer');\nvar isPlainObj = require('is-plain-obj');\nvar pick = require('pick-by-alias');\nmodule.exports = {\n  parse: parse,\n  stringify: stringify,\n  detect: detect,\n  type: getType\n};\nvar endianness = os.endianness instanceof Function ? os.endianness().toLowerCase() : 'le';\nvar types = {\n  'uint': 'uint32',\n  'uint8': 'uint8',\n  'uint8_clamped': 'uint8',\n  'uint16': 'uint16',\n  'uint32': 'uint32',\n  'int': 'int32',\n  'int8': 'int8',\n  'int16': 'int16',\n  'int32': 'int32',\n  'float': 'float32',\n  'float32': 'float32',\n  'float64': 'float64',\n  'array': 'array',\n  'arraybuffer': 'arraybuffer',\n  'buffer': 'buffer',\n  'audiobuffer': 'audiobuffer',\n  'ndarray': 'ndarray',\n  'ndsamples': 'ndsamples'\n};\nvar channelNumber = {\n  'mono': 1,\n  'stereo': 2,\n  'quad': 4,\n  '5.1': 6,\n  '2.1': 3,\n  '3-channel': 3,\n  '5-channel': 5\n};\nvar maxChannels = 32;\nfor (var i = 6; i < maxChannels; i++) {\n  channelNumber[i + '-channel'] = i;\n}\nvar channelName = {};\nfor (var name in channelNumber) {\n  channelName[channelNumber[name]] = name;\n}\n//parse format string\nfunction parse(str) {\n  var format = {};\n  var parts = str.split(/\\s*[,;_]\\s*|\\s+/);\n  for (var i = 0; i < parts.length; i++) {\n    var part = parts[i].toLowerCase();\n    if (part === 'planar' && format.interleaved == null) {\n      format.interleaved = false;\n      if (format.channels == null) format.channels = 2;\n    } else if ((part === 'interleave' || part === 'interleaved') && format.interleaved == null) {\n      format.interleaved = true;\n      if (format.channels == null) format.channels = 2;\n    } else if (channelNumber[part]) format.channels = channelNumber[part];else if (part === 'le' || part === 'LE' || part === 'littleendian' || part === 'bigEndian') format.endianness = 'le';else if (part === 'be' || part === 'BE' || part === 'bigendian' || part === 'bigEndian') format.endianness = 'be';else if (types[part]) {\n      format.type = types[part];\n      if (part === 'audiobuffer') {\n        format.endianness = endianness;\n        format.interleaved = false;\n      }\n    } else if (rates[part]) format.sampleRate = rates[part];else if (/^\\d+$/.test(part)) format.sampleRate = parseInt(part);else throw Error('Cannot identify part `' + part + '`');\n  }\n  return format;\n}\n\n//parse available format properties from an object\nfunction detect(obj) {\n  if (!obj) return {};\n  var format = pick(obj, {\n    channels: 'channel channels numberOfChannels channelCount',\n    sampleRate: 'sampleRate rate',\n    interleaved: 'interleave interleaved',\n    type: 'type dtype',\n    endianness: 'endianness'\n  });\n\n  // ndsamples case\n  if (obj.format) {\n    format.type = 'ndsamples';\n  }\n  if (format.sampleRate == null && obj.format && obj.format.sampleRate) {\n    format.sampleRate = obj.format.sampleRate;\n  }\n  if (obj.planar) format.interleaved = false;\n  if (format.interleaved != null) {\n    if (format.channels == null) format.channels = 2;\n  }\n  if (format.type == null) {\n    var type = getType(obj);\n    if (type) format.type = type;\n  }\n  if (format.type === 'audiobuffer') {\n    format.endianness = endianness;\n    format.interleaved = false;\n  }\n  return format;\n}\n\n//convert format string to format object\nfunction stringify(format, omit) {\n  if (omit === undefined) {\n    omit = {\n      endianness: 'le'\n    };\n  } else if (omit == null) {\n    omit = {};\n  } else if (typeof omit === 'string') {\n    omit = parse(omit);\n  } else {\n    omit = detect(omit);\n  }\n  if (!isPlainObj(format)) format = detect(format);\n  var parts = [];\n  if (format.type != null && format.type !== omit.type) parts.push(format.type || 'float32');\n  if (format.channels != null && format.channels !== omit.channels) parts.push(channelName[format.channels]);\n  if (format.endianness != null && format.endianness !== omit.endianness) parts.push(format.endianness || 'le');\n  if (format.interleaved != null && format.interleaved !== omit.interleaved) {\n    if (format.type !== 'audiobuffer') parts.push(format.interleaved ? 'interleaved' : 'planar');\n  }\n  if (format.sampleRate != null && format.sampleRate !== omit.sampleRate) parts.push(format.sampleRate);\n  return parts.join(' ');\n}\n\n//return type string for an object\nfunction getType(arg) {\n  if (isAudioBuffer(arg)) return 'audiobuffer';\n  if (isBuffer(arg)) return 'buffer';\n  if (Array.isArray(arg)) return 'array';\n  if (arg instanceof ArrayBuffer) return 'arraybuffer';\n  if (arg.shape && arg.dtype) return arg.format ? 'ndsamples' : 'ndarray';\n  if (arg instanceof Float32Array) return 'float32';\n  if (arg instanceof Float64Array) return 'float64';\n  if (arg instanceof Uint8Array) return 'uint8';\n  if (arg instanceof Uint8ClampedArray) return 'uint8_clamped';\n  if (arg instanceof Int8Array) return 'int8';\n  if (arg instanceof Int16Array) return 'int16';\n  if (arg instanceof Uint16Array) return 'uint16';\n  if (arg instanceof Int32Array) return 'int32';\n  if (arg instanceof Uint32Array) return 'uint32';\n}","map":{"version":3,"names":["rates","require","os","isAudioBuffer","isBuffer","isPlainObj","pick","module","exports","parse","stringify","detect","type","getType","endianness","Function","toLowerCase","types","channelNumber","maxChannels","i","channelName","name","str","format","parts","split","length","part","interleaved","channels","sampleRate","test","parseInt","Error","obj","planar","omit","undefined","push","join","arg","Array","isArray","ArrayBuffer","shape","dtype","Float32Array","Float64Array","Uint8Array","Uint8ClampedArray","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array"],"sources":["C:/Users/User/Desktop/Mellowdies/mellowdies/node_modules/audio-format/index.js"],"sourcesContent":["/**\r\n * @module audio-format\r\n */\r\n'use strict'\r\n\r\nvar rates = require('sample-rate')\r\nvar os = require('os')\r\nvar isAudioBuffer = require('is-audio-buffer')\r\nvar isBuffer = require('is-buffer')\r\nvar isPlainObj = require('is-plain-obj')\r\nvar pick = require('pick-by-alias')\r\n\r\nmodule.exports = {\r\n\tparse: parse,\r\n\tstringify: stringify,\r\n\tdetect: detect,\r\n\ttype: getType\r\n}\r\n\r\nvar endianness = os.endianness instanceof Function ? os.endianness().toLowerCase() : 'le'\r\n\r\nvar types = {\r\n\t'uint': 'uint32',\r\n\t'uint8': 'uint8',\r\n\t'uint8_clamped': 'uint8',\r\n\t'uint16': 'uint16',\r\n\t'uint32': 'uint32',\r\n\t'int': 'int32',\r\n\t'int8': 'int8',\r\n\t'int16': 'int16',\r\n\t'int32': 'int32',\r\n\t'float': 'float32',\r\n\t'float32': 'float32',\r\n\t'float64': 'float64',\r\n\t'array': 'array',\r\n\t'arraybuffer': 'arraybuffer',\r\n\t'buffer': 'buffer',\r\n\t'audiobuffer': 'audiobuffer',\r\n\t'ndarray': 'ndarray',\r\n\t'ndsamples': 'ndsamples'\r\n}\r\nvar channelNumber = {\r\n\t'mono': 1,\r\n\t'stereo': 2,\r\n\t'quad': 4,\r\n\t'5.1': 6,\r\n\t'2.1': 3,\r\n\t'3-channel': 3,\r\n\t'5-channel': 5\r\n}\r\nvar maxChannels = 32\r\nfor (var i = 6; i < maxChannels; i++) {\r\n\tchannelNumber[i + '-channel'] = i\r\n}\r\n\r\nvar channelName = {}\r\nfor (var name in channelNumber) {\r\n\tchannelName[channelNumber[name]] = name\r\n}\r\n//parse format string\r\nfunction parse (str) {\r\n\tvar format = {}\r\n\r\n\tvar parts = str.split(/\\s*[,;_]\\s*|\\s+/)\r\n\r\n\tfor (var i = 0; i < parts.length; i++) {\r\n\t\tvar part = parts[i].toLowerCase()\r\n\r\n\t\tif (part === 'planar' && format.interleaved == null) {\r\n\t\t\tformat.interleaved = false\r\n\t\t\tif (format.channels == null) format.channels = 2\r\n\t\t}\r\n\t\telse if ((part === 'interleave' || part === 'interleaved') && format.interleaved == null) {\r\n\t\t\tformat.interleaved = true\r\n\t\t\tif (format.channels == null) format.channels = 2\r\n\t\t}\r\n\t\telse if (channelNumber[part]) format.channels = channelNumber[part]\r\n\t\telse if (part === 'le' || part === 'LE' || part === 'littleendian' || part === 'bigEndian') format.endianness = 'le'\r\n\t\telse if (part === 'be' || part === 'BE' || part === 'bigendian' || part === 'bigEndian') format.endianness = 'be'\r\n\t\telse if (types[part]) {\r\n\t\t\tformat.type = types[part]\r\n\t\t\tif (part === 'audiobuffer') {\r\n\t\t\t\tformat.endianness = endianness\r\n\t\t\t\tformat.interleaved = false\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (rates[part]) format.sampleRate = rates[part]\r\n\t\telse if (/^\\d+$/.test(part)) format.sampleRate = parseInt(part)\r\n\t\telse throw Error('Cannot identify part `' + part + '`')\r\n\t}\r\n\r\n\treturn format\r\n}\r\n\r\n\r\n//parse available format properties from an object\r\nfunction detect (obj) {\r\n\tif (!obj) return {}\r\n\r\n\tvar format = pick(obj, {\r\n\t\tchannels: 'channel channels numberOfChannels channelCount',\r\n\t\tsampleRate: 'sampleRate rate',\r\n\t\tinterleaved: 'interleave interleaved',\r\n\t\ttype: 'type dtype',\r\n\t\tendianness: 'endianness'\r\n\t})\r\n\r\n\t// ndsamples case\r\n\tif (obj.format) {\r\n\t\tformat.type = 'ndsamples'\r\n\t}\r\n\tif (format.sampleRate == null && obj.format && obj.format.sampleRate) {\r\n\t\tformat.sampleRate = obj.format.sampleRate\r\n\t}\r\n\tif (obj.planar) format.interleaved = false\r\n\tif (format.interleaved != null) {\r\n\t\tif (format.channels == null) format.channels = 2\r\n\t}\r\n\tif (format.type == null) {\r\n\t\tvar type = getType(obj)\r\n\t\tif (type) format.type = type\r\n\t}\r\n\r\n\tif (format.type === 'audiobuffer') {\r\n\t\tformat.endianness = endianness\r\n\t\tformat.interleaved = false\r\n\t}\r\n\r\n\treturn format\r\n}\r\n\r\n\r\n//convert format string to format object\r\nfunction stringify (format, omit) {\r\n\tif (omit === undefined) {\r\n\t\tomit = {endianness: 'le'}\r\n\t} else if (omit == null) {\r\n\t\tomit = {}\r\n\t} else if (typeof omit === 'string') {\r\n\t\tomit = parse(omit)\r\n\t} else {\r\n\t\tomit = detect(omit)\r\n\t}\r\n\r\n\tif (!isPlainObj(format)) format = detect(format)\r\n\r\n\tvar parts = []\r\n\r\n\tif (format.type != null && format.type !== omit.type) parts.push(format.type || 'float32')\r\n\tif (format.channels != null && format.channels !== omit.channels) parts.push(channelName[format.channels])\r\n\tif (format.endianness != null && format.endianness !== omit.endianness) parts.push(format.endianness || 'le')\r\n\tif (format.interleaved != null && format.interleaved !== omit.interleaved) {\r\n\t\tif (format.type !== 'audiobuffer') parts.push(format.interleaved ? 'interleaved' : 'planar')\r\n\t}\r\n\tif (format.sampleRate != null && format.sampleRate !== omit.sampleRate) parts.push(format.sampleRate)\r\n\r\n\treturn parts.join(' ')\r\n}\r\n\r\n\r\n//return type string for an object\r\nfunction getType (arg) {\r\n\tif (isAudioBuffer(arg)) return 'audiobuffer'\r\n\tif (isBuffer(arg)) return 'buffer'\r\n\tif (Array.isArray(arg)) return 'array'\r\n\tif (arg instanceof ArrayBuffer) return 'arraybuffer'\r\n\tif (arg.shape && arg.dtype) return arg.format ? 'ndsamples' : 'ndarray'\r\n\tif (arg instanceof Float32Array) return 'float32'\r\n\tif (arg instanceof Float64Array) return 'float64'\r\n\tif (arg instanceof Uint8Array) return 'uint8'\r\n\tif (arg instanceof Uint8ClampedArray) return 'uint8_clamped'\r\n\tif (arg instanceof Int8Array) return 'int8'\r\n\tif (arg instanceof Int16Array) return 'int16'\r\n\tif (arg instanceof Uint16Array) return 'uint16'\r\n\tif (arg instanceof Int32Array) return 'int32'\r\n\tif (arg instanceof Uint32Array) return 'uint32'\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}