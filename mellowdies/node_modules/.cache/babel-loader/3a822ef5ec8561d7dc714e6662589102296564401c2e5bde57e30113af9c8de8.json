{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n  JAVASCRIPT_MODULE_TYPE_AUTO,\n  JAVASCRIPT_MODULE_TYPE_DYNAMIC,\n  JAVASCRIPT_MODULE_TYPE_ESM\n} = require(\"./ModuleTypeConstants\");\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"./Module\").BuildInfo} BuildInfo */\n/** @typedef {import(\"./javascript/JavascriptParser\")} JavascriptParser */\n/** @typedef {import(\"./javascript/JavascriptParser\").Range} Range */\n\nconst PLUGIN_NAME = \"UseStrictPlugin\";\nclass UseStrictPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation, {\n      normalModuleFactory\n    }) => {\n      /**\n       * @param {JavascriptParser} parser the parser\n       * @param {JavascriptParserOptions} parserOptions the javascript parser options\n       */\n      const handler = (parser, parserOptions) => {\n        parser.hooks.program.tap(PLUGIN_NAME, ast => {\n          const firstNode = ast.body[0];\n          if (firstNode && firstNode.type === \"ExpressionStatement\" && firstNode.expression.type === \"Literal\" && firstNode.expression.value === \"use strict\") {\n            // Remove \"use strict\" expression. It will be added later by the renderer again.\n            // This is necessary in order to not break the strict mode when webpack prepends code.\n            // @see https://github.com/webpack/webpack/issues/1970\n            const dep = new ConstDependency(\"\", /** @type {Range} */firstNode.range);\n            dep.loc = /** @type {DependencyLocation} */firstNode.loc;\n            parser.state.module.addPresentationalDependency(dep);\n            /** @type {BuildInfo} */\n            parser.state.module.buildInfo.strict = true;\n          }\n          if (parserOptions.overrideStrict) {\n            /** @type {BuildInfo} */\n            parser.state.module.buildInfo.strict = parserOptions.overrideStrict === \"strict\";\n          }\n        });\n      };\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_AUTO).tap(PLUGIN_NAME, handler);\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_DYNAMIC).tap(PLUGIN_NAME, handler);\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_ESM).tap(PLUGIN_NAME, handler);\n    });\n  }\n}\nmodule.exports = UseStrictPlugin;","map":{"version":3,"names":["JAVASCRIPT_MODULE_TYPE_AUTO","JAVASCRIPT_MODULE_TYPE_DYNAMIC","JAVASCRIPT_MODULE_TYPE_ESM","require","ConstDependency","PLUGIN_NAME","UseStrictPlugin","apply","compiler","hooks","compilation","tap","normalModuleFactory","handler","parser","parserOptions","program","ast","firstNode","body","type","expression","value","dep","range","loc","state","module","addPresentationalDependency","buildInfo","strict","overrideStrict","for","exports"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/node_modules/webpack/lib/UseStrictPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n\tJAVASCRIPT_MODULE_TYPE_AUTO,\n\tJAVASCRIPT_MODULE_TYPE_DYNAMIC,\n\tJAVASCRIPT_MODULE_TYPE_ESM\n} = require(\"./ModuleTypeConstants\");\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"./Module\").BuildInfo} BuildInfo */\n/** @typedef {import(\"./javascript/JavascriptParser\")} JavascriptParser */\n/** @typedef {import(\"./javascript/JavascriptParser\").Range} Range */\n\nconst PLUGIN_NAME = \"UseStrictPlugin\";\n\nclass UseStrictPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\tPLUGIN_NAME,\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\t/**\n\t\t\t\t * @param {JavascriptParser} parser the parser\n\t\t\t\t * @param {JavascriptParserOptions} parserOptions the javascript parser options\n\t\t\t\t */\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tparser.hooks.program.tap(PLUGIN_NAME, ast => {\n\t\t\t\t\t\tconst firstNode = ast.body[0];\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tfirstNode &&\n\t\t\t\t\t\t\tfirstNode.type === \"ExpressionStatement\" &&\n\t\t\t\t\t\t\tfirstNode.expression.type === \"Literal\" &&\n\t\t\t\t\t\t\tfirstNode.expression.value === \"use strict\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Remove \"use strict\" expression. It will be added later by the renderer again.\n\t\t\t\t\t\t\t// This is necessary in order to not break the strict mode when webpack prepends code.\n\t\t\t\t\t\t\t// @see https://github.com/webpack/webpack/issues/1970\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t/** @type {Range} */ (firstNode.range)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (firstNode.loc);\n\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\t/** @type {BuildInfo} */\n\t\t\t\t\t\t\t(parser.state.module.buildInfo).strict = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (parserOptions.overrideStrict) {\n\t\t\t\t\t\t\t/** @type {BuildInfo} */\n\t\t\t\t\t\t\t(parser.state.module.buildInfo).strict =\n\t\t\t\t\t\t\t\tparserOptions.overrideStrict === \"strict\";\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_AUTO)\n\t\t\t\t\t.tap(PLUGIN_NAME, handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_DYNAMIC)\n\t\t\t\t\t.tap(PLUGIN_NAME, handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_ESM)\n\t\t\t\t\t.tap(PLUGIN_NAME, handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = UseStrictPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAM;EACLA,2BAA2B;EAC3BC,8BAA8B;EAC9BC;AACD,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AACpC,MAAMC,eAAe,GAAGD,OAAO,CAAC,gCAAgC,CAAC;;AAEjE;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAME,WAAW,GAAG,iBAAiB;AAErC,MAAMC,eAAe,CAAC;EACrB;AACD;AACA;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7BN,WAAW,EACX,CAACK,WAAW,EAAE;MAAEE;IAAoB,CAAC,KAAK;MACzC;AACJ;AACA;AACA;MACI,MAAMC,OAAO,GAAGA,CAACC,MAAM,EAAEC,aAAa,KAAK;QAC1CD,MAAM,CAACL,KAAK,CAACO,OAAO,CAACL,GAAG,CAACN,WAAW,EAAEY,GAAG,IAAI;UAC5C,MAAMC,SAAS,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC;UAC7B,IACCD,SAAS,IACTA,SAAS,CAACE,IAAI,KAAK,qBAAqB,IACxCF,SAAS,CAACG,UAAU,CAACD,IAAI,KAAK,SAAS,IACvCF,SAAS,CAACG,UAAU,CAACC,KAAK,KAAK,YAAY,EAC1C;YACD;YACA;YACA;YACA,MAAMC,GAAG,GAAG,IAAInB,eAAe,CAC9B,EAAE,EACF,oBAAsBc,SAAS,CAACM,KACjC,CAAC;YACDD,GAAG,CAACE,GAAG,GAAG,iCAAmCP,SAAS,CAACO,GAAI;YAC3DX,MAAM,CAACY,KAAK,CAACC,MAAM,CAACC,2BAA2B,CAACL,GAAG,CAAC;YACpD;YACCT,MAAM,CAACY,KAAK,CAACC,MAAM,CAACE,SAAS,CAAEC,MAAM,GAAG,IAAI;UAC9C;UACA,IAAIf,aAAa,CAACgB,cAAc,EAAE;YACjC;YACCjB,MAAM,CAACY,KAAK,CAACC,MAAM,CAACE,SAAS,CAAEC,MAAM,GACrCf,aAAa,CAACgB,cAAc,KAAK,QAAQ;UAC3C;QACD,CAAC,CAAC;MACH,CAAC;MAEDnB,mBAAmB,CAACH,KAAK,CAACK,MAAM,CAC9BkB,GAAG,CAAChC,2BAA2B,CAAC,CAChCW,GAAG,CAACN,WAAW,EAAEQ,OAAO,CAAC;MAC3BD,mBAAmB,CAACH,KAAK,CAACK,MAAM,CAC9BkB,GAAG,CAAC/B,8BAA8B,CAAC,CACnCU,GAAG,CAACN,WAAW,EAAEQ,OAAO,CAAC;MAC3BD,mBAAmB,CAACH,KAAK,CAACK,MAAM,CAC9BkB,GAAG,CAAC9B,0BAA0B,CAAC,CAC/BS,GAAG,CAACN,WAAW,EAAEQ,OAAO,CAAC;IAC5B,CACD,CAAC;EACF;AACD;AAEAc,MAAM,CAACM,OAAO,GAAG3B,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}