{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\james\\\\Downloads\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Landingpage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport { useLocation } from 'react-router-dom';\nimport Sidebar from './Sidebar.js';\nimport cloud from '../images/cloud.png';\nimport PlayButton from './PlayButton.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pagebackground = {\n  backgroundSize: 'cover',\n  backgroundImage: `url(${cloud})`,\n  backgroundPosition: 'center',\n  padding: '10px',\n  height: '100vh',\n  margin: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  fontFamily: 'Concert One'\n};\nconst musicbackground = {\n  width: '75%',\n  height: '80%',\n  position: 'fixed',\n  top: '0',\n  right: '0',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'flex-start',\n  alignItems: 'left',\n  backgroundColor: 'rgba(255, 255, 255, 0.3)',\n  marginTop: '5px',\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\n  overflowY: 'auto',\n  padding: '10px'\n};\nconst trackNameStyle = {\n  position: 'relative',\n  color: '#000000',\n  fontSize: '0.8rem',\n  zIndex: '1002',\n  padding: '5px',\n  borderRadius: '5px',\n  backgroundColor: 'rgba(255, 255, 255, 0.7)'\n};\nconst waveformStyle = {\n  width: '100%',\n  height: '75px',\n  position: 'relative',\n  marginBottom: '20px'\n};\nfunction Landingpage() {\n  _s();\n  const [wavesurfers, setWavesurfers] = useState({}); // Object to hold all WaveSurfer instances\n  const location = useLocation();\n  const {\n    audioFiles\n  } = location.state || {\n    audioFiles: []\n  };\n  const [isReady, setIsReady] = useState(false);\n  const waveformRef = useRef(null);\n  const wavesurferRef = useRef(null);\n  const [speed, setSpeed] = useState(1); // State for playback speed\n  const [progress, setProgress] = useState(0); // State for progress bar\n\n  useEffect(() => {\n    const newWavesurfers = {};\n    if (audioFiles && audioFiles.length > 0) {\n      audioFiles.forEach((file, index) => {\n        const trackId = `track-${index}`;\n        const containerId = `waveform-${index}`;\n        const waveSurfer = WaveSurfer.create({\n          container: `#${containerId}`,\n          waveColor: 'blue',\n          progressColor: '#00FFFF',\n          height: 75,\n          autoCenter: true,\n          interact: true,\n          backend: 'MediaElement',\n          cursorWidth: 2,\n          cursorColor: '#FF0000',\n          backgroundColor: 'rgba(255, 255, 255, 0)',\n          minPxPerSec: 100\n        });\n        waveSurfer.load(file.url);\n        waveSurfer.on('ready', () => {\n          setIsReady(true);\n        });\n        newWavesurfers[trackId] = waveSurfer;\n      });\n      setWavesurfers(newWavesurfers);\n\n      // Cleanup function to properly handle the destruction of WaveSurfer\n      return () => {\n        Object.values(newWavesurfers).forEach(waveSurfer => {\n          if (waveSurfer) {\n            waveSurfer.destroy();\n          }\n        });\n      };\n    } else {\n      console.log('No audio files available to display.');\n    }\n  }, [audioFiles]);\n  const playAllTracks = () => {\n    Object.values(wavesurfers).forEach(waveSurfer => {\n      if (waveSurfer) {\n        waveSurfer.playPause();\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: pagebackground,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: musicbackground,\n      children: audioFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: waveformStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: trackNameStyle,\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `waveform-${index}`,\n          style: {\n            width: '100%',\n            height: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), audioFiles && audioFiles.length > 0 ? /*#__PURE__*/_jsxDEV(PlayButton, {\n      onClick: playAllTracks,\n      isReady: isReady,\n      speed: speed,\n      setSpeed: setSpeed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No audio tracks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}\n_s(Landingpage, \"Qn/syuJXLrpLdxzGKtly0mWMW1M=\", false, function () {\n  return [useLocation];\n});\n_c = Landingpage;\nexport default Landingpage;\nvar _c;\n$RefreshReg$(_c, \"Landingpage\");","map":{"version":3,"names":["React","useEffect","useState","WaveSurfer","useLocation","Sidebar","cloud","PlayButton","jsxDEV","_jsxDEV","pagebackground","backgroundSize","backgroundImage","backgroundPosition","padding","height","margin","display","flexDirection","fontFamily","musicbackground","width","position","top","right","justifyContent","alignItems","backgroundColor","marginTop","boxShadow","overflowY","trackNameStyle","color","fontSize","zIndex","borderRadius","waveformStyle","marginBottom","Landingpage","_s","wavesurfers","setWavesurfers","location","audioFiles","state","isReady","setIsReady","waveformRef","useRef","wavesurferRef","speed","setSpeed","progress","setProgress","newWavesurfers","length","forEach","file","index","trackId","containerId","waveSurfer","create","container","waveColor","progressColor","autoCenter","interact","backend","cursorWidth","cursorColor","minPxPerSec","load","url","on","Object","values","destroy","console","log","playAllTracks","playPause","style","children","map","name","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/src/Landingpage/Landingpage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Sidebar from './Sidebar.js';\r\nimport cloud from '../images/cloud.png';\r\nimport PlayButton from './PlayButton.js';\r\n\r\nconst pagebackground = {\r\n    backgroundSize: 'cover',\r\n    backgroundImage: `url(${cloud})`,\r\n    backgroundPosition: 'center',\r\n    padding: '10px',\r\n    height: '100vh',\r\n    margin: 0,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    fontFamily: 'Concert One',\r\n};\r\n\r\nconst musicbackground = {\r\n    width: '75%',\r\n    height: '80%',\r\n    position: 'fixed',\r\n    top: '0',\r\n    right: '0',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'left',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.3)',\r\n    marginTop: '5px',\r\n    boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\r\n    overflowY: 'auto',\r\n    padding: '10px',\r\n};\r\n\r\nconst trackNameStyle = {\r\n    position: 'relative',\r\n    color: '#000000',\r\n    fontSize: '0.8rem',\r\n    zIndex: '1002',\r\n    padding: '5px',\r\n    borderRadius: '5px',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.7)',\r\n};\r\n\r\nconst waveformStyle = {\r\n    width: '100%',\r\n    height: '75px',\r\n    position: 'relative',\r\n    marginBottom: '20px',\r\n};\r\n\r\nfunction Landingpage() {\r\n    const [wavesurfers, setWavesurfers] = useState({});  // Object to hold all WaveSurfer instances\r\n    const location = useLocation();\r\n    const { audioFiles } = location.state || { audioFiles: [] };\r\n    const [isReady, setIsReady] = useState(false);\r\n    const waveformRef = useRef(null);\r\n    const wavesurferRef = useRef(null);\r\n    const [speed, setSpeed] = useState(1); // State for playback speed\r\n    const [progress, setProgress] = useState(0); // State for progress bar\r\n\r\n    useEffect(() => {\r\n        const newWavesurfers = {};\r\n\r\n        if (audioFiles && audioFiles.length > 0) {\r\n            audioFiles.forEach((file, index) => {\r\n                const trackId = `track-${index}`;\r\n                const containerId = `waveform-${index}`;\r\n\r\n                const waveSurfer = WaveSurfer.create({\r\n                    container: `#${containerId}`,\r\n                    waveColor: 'blue',\r\n                    progressColor: '#00FFFF',\r\n                    height: 75,\r\n                    autoCenter: true,\r\n                    interact: true,\r\n                    backend: 'MediaElement',\r\n                    cursorWidth: 2,\r\n                    cursorColor: '#FF0000',\r\n                    backgroundColor: 'rgba(255, 255, 255, 0)',\r\n                    minPxPerSec: 100,\r\n                });\r\n\r\n                waveSurfer.load(file.url);\r\n\r\n                waveSurfer.on('ready', () => {\r\n                    setIsReady(true);\r\n                });\r\n\r\n                newWavesurfers[trackId] = waveSurfer;\r\n            });\r\n\r\n            setWavesurfers(newWavesurfers);\r\n\r\n            // Cleanup function to properly handle the destruction of WaveSurfer\r\n            return () => {\r\n                Object.values(newWavesurfers).forEach(waveSurfer => {\r\n                    if (waveSurfer) {\r\n                        waveSurfer.destroy();\r\n                    }\r\n                });\r\n            };\r\n        } else {\r\n            console.log('No audio files available to display.');\r\n        }\r\n    }, [audioFiles]);\r\n\r\n    const playAllTracks = () => {\r\n        Object.values(wavesurfers).forEach(waveSurfer => {\r\n            if (waveSurfer) {\r\n                waveSurfer.playPause();\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div style={pagebackground}>\r\n            <div style={musicbackground}>\r\n                {audioFiles.map((file, index) => (\r\n                    <div key={index} style={waveformStyle}>\r\n                        <div style={trackNameStyle}>{file.name}</div>\r\n                        <div id={`waveform-${index}`} style={{ width: '100%', height: '100%' }}></div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <Sidebar/>\r\n\r\n            {audioFiles && audioFiles.length > 0 ? (\r\n                <PlayButton\r\n                    onClick={playAllTracks}\r\n                    isReady={isReady}\r\n                    speed={speed}\r\n                    setSpeed={setSpeed}\r\n                />\r\n            ) : (\r\n                <p>No audio tracks available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Landingpage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}