{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Desktop\\\\School\\\\Senior Project\\\\Github Branch\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Ai.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { client as GradioClient } from \"@gradio/client\";\n\n// CSS styling for the component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst menubackground = {/* styles remain unchanged */};\nconst generateButtonStyle = {/* styles remain unchanged */};\nconst descriptionBoxStyle = {/* styles remain unchanged */};\nconst backButtonStyle = {/* styles remain unchanged */};\nconst contentStyle = {/* styles remain unchanged */};\nfunction AIMenu({\n  handleBack\n}) {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [description, setDescription] = useState(\"\");\n  const [app, setApp] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  // Initialize the Gradio client and store it in state\n  useEffect(() => {\n    const connectToClient = async () => {\n      try {\n        console.log(\"Connecting to the MusicGen API...\");\n        const appInstance = await GradioClient(\"https://facebook-musicgen.hf.space/\");\n        console.log(\"Connected to the API.\");\n        setApp(appInstance);\n      } catch (error) {\n        console.error(\"Failed to connect to the API:\", error);\n        setErrorMessage(\"Failed to connect to the MusicGen API. Please try again later.\");\n      }\n    };\n    connectToClient();\n  }, []);\n  const handleGenerateMusic = async () => {\n    if (!app) {\n      alert('App is still connecting, please wait.');\n      return;\n    }\n    setLoading(true);\n    try {\n      var _result$data, _result$data$;\n      console.log(\"Generating music for description:\", description);\n      const result = await app.predict(0, [description]);\n      console.log(\"Generated Music Result:\", result === null || result === void 0 ? void 0 : result.data);\n      const wavFilePath = result === null || result === void 0 ? void 0 : (_result$data = result.data) === null || _result$data === void 0 ? void 0 : (_result$data$ = _result$data[1]) === null || _result$data$ === void 0 ? void 0 : _result$data$.name;\n      if (!wavFilePath) {\n        throw new Error(\"No WAV file found in the result.\");\n      }\n      const wavFileUrl = `https://facebook-musicgen.hf.space/file=${wavFilePath}`;\n      console.log(\"WAV file URL:\", wavFileUrl);\n      await downloadFile(wavFileUrl, description);\n    } catch (error) {\n      console.error(\"Error generating or downloading music:\", error);\n      alert(`Failed to generate or download music: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const downloadFile = async (fileUrl, description) => {\n    try {\n      const response = await fetch(fileUrl);\n      if (!response.ok) {\n        throw new Error(\"Failed to download the music file.\");\n      }\n      const blob = await response.blob();\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `${description}_generated_music.wav`;\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n      URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error(\"Error downloading the file:\", error);\n      alert(`Error downloading the file: ${error.message}`);\n    }\n  };\n  if (errorMessage) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: menubackground,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: contentStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"This Is The AI Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        style: descriptionBoxStyle,\n        placeholder: \"Describe your music...\",\n        value: description,\n        onChange: e => setDescription(e.target.value) // Update state on change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: generateButtonStyle,\n        onClick: handleGenerateMusic,\n        disabled: loading,\n        children: loading ? 'Generating...' : 'Generate Music'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: backButtonStyle,\n        onClick: handleBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(AIMenu, \"/EgmGP6y6B4Or96NqGwUf0Ft2js=\");\n_c = AIMenu;\nexport default AIMenu;\nvar _c;\n$RefreshReg$(_c, \"AIMenu\");","map":{"version":3,"names":["React","useState","useEffect","client","GradioClient","jsxDEV","_jsxDEV","menubackground","generateButtonStyle","descriptionBoxStyle","backButtonStyle","contentStyle","AIMenu","handleBack","_s","loading","setLoading","description","setDescription","app","setApp","errorMessage","setErrorMessage","connectToClient","console","log","appInstance","error","handleGenerateMusic","alert","_result$data","_result$data$","result","predict","data","wavFilePath","name","Error","wavFileUrl","downloadFile","message","fileUrl","response","fetch","ok","blob","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","remove","revokeObjectURL","children","fileName","_jsxFileName","lineNumber","columnNumber","style","placeholder","value","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/kevin/Desktop/School/Senior Project/Github Branch/Mellowdies/mellowdies/src/Landingpage/Ai.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { client as GradioClient } from \"@gradio/client\";\r\n\r\n// CSS styling for the component\r\nconst menubackground = { /* styles remain unchanged */ };\r\nconst generateButtonStyle = { /* styles remain unchanged */ };\r\nconst descriptionBoxStyle = { /* styles remain unchanged */ };\r\nconst backButtonStyle = { /* styles remain unchanged */ };\r\nconst contentStyle = { /* styles remain unchanged */ };\r\n\r\nfunction AIMenu({ handleBack }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [app, setApp] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  // Initialize the Gradio client and store it in state\r\n  useEffect(() => {\r\n    const connectToClient = async () => {\r\n      try {\r\n        console.log(\"Connecting to the MusicGen API...\");\r\n        const appInstance = await GradioClient(\"https://facebook-musicgen.hf.space/\");\r\n        console.log(\"Connected to the API.\");\r\n        setApp(appInstance);\r\n      } catch (error) {\r\n        console.error(\"Failed to connect to the API:\", error);\r\n        setErrorMessage(\"Failed to connect to the MusicGen API. Please try again later.\");\r\n      }\r\n    };\r\n\r\n    connectToClient();\r\n  }, []);\r\n\r\n  const handleGenerateMusic = async () => {\r\n    if (!app) {\r\n      alert('App is still connecting, please wait.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      console.log(\"Generating music for description:\", description);\r\n      const result = await app.predict(0, [description]);\r\n      console.log(\"Generated Music Result:\", result?.data);\r\n\r\n      const wavFilePath = result?.data?.[1]?.name;\r\n      if (!wavFilePath) {\r\n        throw new Error(\"No WAV file found in the result.\");\r\n      }\r\n\r\n      const wavFileUrl = `https://facebook-musicgen.hf.space/file=${wavFilePath}`;\r\n      console.log(\"WAV file URL:\", wavFileUrl);\r\n\r\n      await downloadFile(wavFileUrl, description);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error generating or downloading music:\", error);\r\n      alert(`Failed to generate or download music: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const downloadFile = async (fileUrl, description) => {\r\n    try {\r\n      const response = await fetch(fileUrl);\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to download the music file.\");\r\n      }\r\n\r\n      const blob = await response.blob();\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.download = `${description}_generated_music.wav`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      a.remove();\r\n      URL.revokeObjectURL(url);\r\n    } catch (error) {\r\n      console.error(\"Error downloading the file:\", error);\r\n      alert(`Error downloading the file: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  if (errorMessage) {\r\n    return <div>{errorMessage}</div>;\r\n  }\r\n\r\n  return (\r\n    <div style={menubackground}>\r\n      <div style={contentStyle}>\r\n        <h1>This Is The AI Menu</h1>\r\n        {/* Textbox for user to input description */}\r\n        <textarea\r\n          style={descriptionBoxStyle}\r\n          placeholder=\"Describe your music...\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)} // Update state on change\r\n        />\r\n        {/* Button to generate music */}\r\n        <button style={generateButtonStyle} onClick={handleGenerateMusic} disabled={loading}>\r\n          {loading ? 'Generating...' : 'Generate Music'}\r\n        </button>\r\n        {/* Back button to close the menu */}\r\n        <button style={backButtonStyle} onClick={handleBack}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AIMenu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}