{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elect\\\\Documents\\\\CIS\\\\4914\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Landingpage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport TimelinePlugin from 'wavesurfer.js/dist/plugins/timeline'; // Import the timeline plugin\nimport { useLocation } from 'react-router-dom';\nimport Sidebar from './Sidebar.js';\nimport './Landingpage.css';\nimport PlayButton from './PlayButton.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Landingpage() {\n  _s();\n  const wavesurferRefs = useRef([]); // Array to hold refs for each WaveSurfer instance\n  const musicbackgroundRef = useRef(null); // Ref for the music background container\n  const location = useLocation();\n  const {\n    audioFiles\n  } = location.state || {\n    audioFiles: []\n  };\n  const [isReady, setIsReady] = useState(false);\n  const [speed, setSpeed] = useState(1); // Define speed and setSpeed state\n  let longestDuration = 0; // Variable to track the longest track duration\n\n  useEffect(() => {\n    // Initialize the wavesurferRefs array\n    wavesurferRefs.current = [];\n    if (audioFiles && audioFiles.length > 0) {\n      audioFiles.forEach((file, index) => {\n        const containerId = `waveform-${index}`;\n        const timelineId = `timeline-${index}`;\n        const timeline = TimelinePlugin.create({\n          container: `#${timelineId}`,\n          primaryColor: '#000',\n          secondaryColor: '#c0c0c0',\n          primaryFontColor: '#000',\n          secondaryFontColor: '#000',\n          secondaryLabelOpacity: 0.9,\n          timeInterval: 0.2,\n          primaryLabelInterval: 5,\n          secondaryLabelInterval: 1\n        });\n\n        // Create the WaveSurfer instance\n        const waveSurfer = WaveSurfer.create({\n          container: `#${containerId}`,\n          waveColor: 'blue',\n          progressColor: '#00FFFF',\n          height: 75,\n          autoCenter: true,\n          interact: true,\n          backend: 'MediaElement',\n          cursorWidth: 2,\n          cursorColor: '#FF0000',\n          backgroundColor: 'rgba(255, 255, 255, 0)',\n          url: file.url,\n          minPxPerSec: 100 // Adjust this for width control\n        });\n        waveSurfer.on('ready', () => {\n          setIsReady(true);\n          const duration = waveSurfer.getDuration();\n          if (duration > longestDuration) {\n            longestDuration = duration; // Track the longest duration\n          }\n\n          // Add the timeline plugin only for the first track\n          if (index === 0) {\n            waveSurfer.registerPlugin(timeline);\n          }\n        });\n        waveSurfer.on('scroll', minPxPerSec => {\n          timeline.destroy();\n          timeline = waveSurfer.registerPlugin(timeline);\n        });\n        wavesurferRefs.current[index] = waveSurfer;\n      });\n\n      // Cleanup function to properly handle the destruction of WaveSurfer instances\n      return () => {\n        wavesurferRefs.current.forEach(waveSurfer => {\n          if (waveSurfer) {\n            waveSurfer.destroy();\n          }\n        });\n      };\n    } else {\n      console.log('No audio files available to display.');\n    }\n  }, [audioFiles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagebackground\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"musicbackground\",\n      ref: musicbackgroundRef,\n      children: audioFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"trackName\",\n          className: \"trackNameStyle\",\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `timeline-${index}`,\n          className: \"timelineStyle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"waveformStyle\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: `waveform-${index}`,\n            style: {\n              width: '100%',\n              height: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), audioFiles && audioFiles.length > 0 ? /*#__PURE__*/_jsxDEV(PlayButton, {\n      wavesurferRefs: wavesurferRefs,\n      setSpeed: setSpeed // Pass the setSpeed function\n      ,\n      isReady: isReady,\n      speed: speed // Pass the speed value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No audio tracks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n_s(Landingpage, \"aMH6V5yxdkW0Nhl5+DYISXHRsZg=\", false, function () {\n  return [useLocation];\n});\n_c = Landingpage;\nexport default Landingpage;\nvar _c;\n$RefreshReg$(_c, \"Landingpage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","WaveSurfer","TimelinePlugin","useLocation","Sidebar","PlayButton","jsxDEV","_jsxDEV","Landingpage","_s","wavesurferRefs","musicbackgroundRef","location","audioFiles","state","isReady","setIsReady","speed","setSpeed","longestDuration","current","length","forEach","file","index","containerId","timelineId","timeline","create","container","primaryColor","secondaryColor","primaryFontColor","secondaryFontColor","secondaryLabelOpacity","timeInterval","primaryLabelInterval","secondaryLabelInterval","waveSurfer","waveColor","progressColor","height","autoCenter","interact","backend","cursorWidth","cursorColor","backgroundColor","url","minPxPerSec","on","duration","getDuration","registerPlugin","destroy","console","log","className","children","ref","map","id","name","fileName","_jsxFileName","lineNumber","columnNumber","style","width","_c","$RefreshReg$"],"sources":["C:/Users/elect/Documents/CIS/4914/Mellowdies/mellowdies/src/Landingpage/Landingpage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport TimelinePlugin from 'wavesurfer.js/dist/plugins/timeline';  // Import the timeline plugin\r\nimport { useLocation } from 'react-router-dom';\r\nimport Sidebar from './Sidebar.js';\r\nimport './Landingpage.css';  \r\nimport PlayButton from './PlayButton.js';\r\n\r\nfunction Landingpage() {\r\n    const wavesurferRefs = useRef([]);  // Array to hold refs for each WaveSurfer instance\r\n    const musicbackgroundRef = useRef(null);  // Ref for the music background container\r\n    const location = useLocation();\r\n    const { audioFiles } = location.state || { audioFiles: [] };\r\n    const [isReady, setIsReady] = useState(false);\r\n    const [speed, setSpeed] = useState(1);  // Define speed and setSpeed state\r\n    let longestDuration = 0;  // Variable to track the longest track duration\r\n\r\n    useEffect(() => {\r\n        // Initialize the wavesurferRefs array\r\n        wavesurferRefs.current = [];\r\n\r\n        if (audioFiles && audioFiles.length > 0) {\r\n            audioFiles.forEach((file, index) => {\r\n                const containerId = `waveform-${index}`;\r\n                const timelineId = `timeline-${index}`;\r\n\r\n                const timeline = TimelinePlugin.create({\r\n                    container: `#${timelineId}`,\r\n                    primaryColor: '#000',\r\n                    secondaryColor: '#c0c0c0',\r\n                    primaryFontColor: '#000',\r\n                    secondaryFontColor: '#000',\r\n                    secondaryLabelOpacity: 0.9,\r\n                    timeInterval: 0.2,\r\n                    primaryLabelInterval: 5,\r\n                    secondaryLabelInterval: 1,\r\n                });\r\n\r\n                // Create the WaveSurfer instance\r\n                const waveSurfer = WaveSurfer.create({\r\n                    container: `#${containerId}`,\r\n                    waveColor: 'blue',\r\n                    progressColor: '#00FFFF',\r\n                    height: 75,\r\n                    autoCenter: true,\r\n                    interact: true,\r\n                    backend: 'MediaElement',\r\n                    cursorWidth: 2,\r\n                    cursorColor: '#FF0000',\r\n                    backgroundColor: 'rgba(255, 255, 255, 0)',\r\n                    url:file.url,\r\n                    minPxPerSec: 100,  // Adjust this for width control\r\n                });\r\n\r\n                waveSurfer.on('ready', () => {\r\n                    setIsReady(true);\r\n\r\n                    const duration = waveSurfer.getDuration();\r\n                    if (duration > longestDuration) {\r\n                        longestDuration = duration;  // Track the longest duration\r\n                    }\r\n\r\n                    // Add the timeline plugin only for the first track\r\n                    if (index === 0) {\r\n                        \r\n\r\n                        waveSurfer.registerPlugin(timeline);\r\n                    }\r\n                });\r\n\r\n                waveSurfer.on('scroll', (minPxPerSec) => {\r\n                    timeline.destroy();\r\n\r\n                    timeline = waveSurfer.registerPlugin(timeline);\r\n                })\r\n\r\n                wavesurferRefs.current[index] = waveSurfer;\r\n                \r\n                \r\n            });\r\n\r\n            // Cleanup function to properly handle the destruction of WaveSurfer instances\r\n            return () => {\r\n                wavesurferRefs.current.forEach((waveSurfer) => {\r\n                    if (waveSurfer) {\r\n                        waveSurfer.destroy();\r\n                    }\r\n                });\r\n            };\r\n        } else {\r\n            console.log('No audio files available to display.');\r\n        }\r\n    }, [audioFiles]);\r\n    \r\n\r\n    return (\r\n        <div className=\"pagebackground\">\r\n\r\n            <div\r\n                className=\"musicbackground\"\r\n                ref={musicbackgroundRef}\r\n            >\r\n                {audioFiles.map((file, index) => (\r\n                    <div>\r\n                        <div id=\"trackName\" className=\"trackNameStyle\">{file.name}</div>\r\n                        <div id={`timeline-${index}`} className=\"timelineStyle\"></div>\r\n                        <div key={index} className=\"waveformStyle\">\r\n                            <div id={`waveform-${index}`} style={{  width: '100%',height: '100%' }}></div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <Sidebar />\r\n\r\n            {audioFiles && audioFiles.length > 0 ? (\r\n                <PlayButton\r\n                    wavesurferRefs={wavesurferRefs}\r\n                    setSpeed={setSpeed}  // Pass the setSpeed function\r\n                    isReady={isReady}\r\n                    speed={speed}  // Pass the speed value\r\n                />\r\n            ) : (\r\n                <p>No audio tracks available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Landingpage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}