{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthors Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./config/target\").PlatformTargetProperties} PlatformTargetProperties */\n\n/**\n * Should be used only for \"target === false\" or\n * when you want to overwrite platform target properties\n */\nclass PlatformPlugin {\n  /**\n   * @param {Partial<PlatformTargetProperties>} platform target properties\n   */\n  constructor(platform) {\n    /** @type {Partial<PlatformTargetProperties>} */\n    this.platform = platform;\n  }\n\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.environment.tap(\"PlatformPlugin\", () => {\n      compiler.platform = {\n        ...compiler.platform,\n        ...this.platform\n      };\n    });\n  }\n}\nmodule.exports = PlatformPlugin;","map":{"version":3,"names":["PlatformPlugin","constructor","platform","apply","compiler","hooks","environment","tap","module","exports"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/node_modules/webpack/lib/PlatformPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthors Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./config/target\").PlatformTargetProperties} PlatformTargetProperties */\n\n/**\n * Should be used only for \"target === false\" or\n * when you want to overwrite platform target properties\n */\nclass PlatformPlugin {\n\t/**\n\t * @param {Partial<PlatformTargetProperties>} platform target properties\n\t */\n\tconstructor(platform) {\n\t\t/** @type {Partial<PlatformTargetProperties>} */\n\t\tthis.platform = platform;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.environment.tap(\"PlatformPlugin\", () => {\n\t\t\tcompiler.platform = {\n\t\t\t\t...compiler.platform,\n\t\t\t\t...this.platform\n\t\t\t};\n\t\t});\n\t}\n}\n\nmodule.exports = PlatformPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAMA,cAAc,CAAC;EACpB;AACD;AACA;EACCC,WAAWA,CAACC,QAAQ,EAAE;IACrB;IACA,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EACzB;;EAEA;AACD;AACA;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAAC,gBAAgB,EAAE,MAAM;MACtDH,QAAQ,CAACF,QAAQ,GAAG;QACnB,GAAGE,QAAQ,CAACF,QAAQ;QACpB,GAAG,IAAI,CAACA;MACT,CAAC;IACF,CAAC,CAAC;EACH;AACD;AAEAM,MAAM,CAACC,OAAO,GAAGT,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}