{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst HotModuleReplacementPlugin = require(\"../HotModuleReplacementPlugin\");\nconst InnerGraph = require(\"../optimize/InnerGraph\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst HarmonyAcceptDependency = require(\"./HarmonyAcceptDependency\");\nconst HarmonyAcceptImportDependency = require(\"./HarmonyAcceptImportDependency\");\nconst HarmonyEvaluatedImportSpecifierDependency = require(\"./HarmonyEvaluatedImportSpecifierDependency\");\nconst HarmonyExports = require(\"./HarmonyExports\");\nconst {\n  ExportPresenceModes\n} = require(\"./HarmonyImportDependency\");\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\nconst HarmonyImportSpecifierDependency = require(\"./HarmonyImportSpecifierDependency\");\n\n/** @typedef {import(\"estree\").ExportAllDeclaration} ExportAllDeclaration */\n/** @typedef {import(\"estree\").ExportNamedDeclaration} ExportNamedDeclaration */\n/** @typedef {import(\"estree\").Identifier} Identifier */\n/** @typedef {import(\"estree\").ImportDeclaration} ImportDeclaration */\n/** @typedef {import(\"estree\").ImportExpression} ImportExpression */\n/** @typedef {import(\"estree\").Literal} Literal */\n/** @typedef {import(\"estree\").MemberExpression} MemberExpression */\n/** @typedef {import(\"estree\").ObjectExpression} ObjectExpression */\n/** @typedef {import(\"estree\").Property} Property */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"../javascript/BasicEvaluatedExpression\")} BasicEvaluatedExpression */\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\n/** @typedef {import(\"../javascript/JavascriptParser\").DestructuringAssignmentProperty} DestructuringAssignmentProperty */\n/** @typedef {import(\"../javascript/JavascriptParser\").ImportAttributes} ImportAttributes */\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n/** @typedef {import(\"../optimize/InnerGraph\").InnerGraph} InnerGraph */\n/** @typedef {import(\"../optimize/InnerGraph\").TopLevelSymbol} TopLevelSymbol */\n/** @typedef {import(\"./HarmonyImportDependency\")} HarmonyImportDependency */\n\nconst harmonySpecifierTag = Symbol(\"harmony import\");\n\n/**\n * @typedef {object} HarmonySettings\n * @property {string[]} ids\n * @property {string} source\n * @property {number} sourceOrder\n * @property {string} name\n * @property {boolean} await\n * @property {Record<string, any> | undefined} assertions\n */\n\n/**\n * @param {ImportDeclaration | ExportNamedDeclaration | ExportAllDeclaration | (ImportExpression & { arguments?: ObjectExpression[] })} node node with assertions\n * @returns {ImportAttributes | undefined} import attributes\n */\nfunction getAttributes(node) {\n  if (node.type === \"ImportExpression\" && node.arguments && node.arguments[0] && node.arguments[0].type === \"ObjectExpression\" && node.arguments[0].properties[0] && node.arguments[0].properties[0].type === \"Property\" && node.arguments[0].properties[0].value.type === \"ObjectExpression\" && node.arguments[0].properties[0].value.properties) {\n    const properties = /** @type {Property[]} */\n    node.arguments[0].properties[0].value.properties;\n    const result = /** @type {ImportAttributes} */{};\n    for (const property of properties) {\n      const key = /** @type {string} */\n\n      property.key.type === \"Identifier\" ? property.key.name : /** @type {Literal} */property.key.value;\n      result[key] = /** @type {string} */\n      /** @type {Literal} */property.value.value;\n    }\n    const key = node.arguments[0].properties[0].key.type === \"Identifier\" ? node.arguments[0].properties[0].key.name : /** @type {Literal} */node.arguments[0].properties[0].key.value;\n    if (key === \"assert\") {\n      result._isLegacyAssert = true;\n    }\n    return result;\n  }\n  // TODO remove cast when @types/estree has been updated to import assertions\n  const isImportAssertion = /** @type {{ assertions?: ImportAttributeNode[] }} */node.assertions !== undefined;\n  const attributes = isImportAssertion ? /** @type {{ assertions?: ImportAttributeNode[] }} */node.assertions : /** @type {{ attributes?: ImportAttributeNode[] }} */node.attributes;\n  if (attributes === undefined) {\n    return;\n  }\n  const result = /** @type {ImportAttributes} */{};\n  for (const attribute of attributes) {\n    const key = /** @type {string} */\n\n    attribute.key.type === \"Identifier\" ? attribute.key.name : attribute.key.value;\n    result[key] = /** @type {string} */attribute.value.value;\n  }\n  if (isImportAssertion) {\n    result._isLegacyAssert = true;\n  }\n  return result;\n}\nmodule.exports = class HarmonyImportDependencyParserPlugin {\n  /**\n   * @param {JavascriptParserOptions} options options\n   */\n  constructor(options) {\n    this.exportPresenceMode = options.importExportsPresence !== undefined ? ExportPresenceModes.fromUserOption(options.importExportsPresence) : options.exportsPresence !== undefined ? ExportPresenceModes.fromUserOption(options.exportsPresence) : options.strictExportPresence ? ExportPresenceModes.ERROR : ExportPresenceModes.AUTO;\n    this.strictThisContextOnImports = options.strictThisContextOnImports;\n  }\n\n  /**\n   * @param {JavascriptParser} parser the parser\n   * @returns {void}\n   */\n  apply(parser) {\n    const {\n      exportPresenceMode\n    } = this;\n\n    /**\n     * @param {string[]} members members\n     * @param {boolean[]} membersOptionals members Optionals\n     * @returns {string[]} a non optional part\n     */\n    function getNonOptionalPart(members, membersOptionals) {\n      let i = 0;\n      while (i < members.length && membersOptionals[i] === false) i++;\n      return i !== members.length ? members.slice(0, i) : members;\n    }\n\n    /**\n     * @param {TODO} node member expression\n     * @param {number} count count\n     * @returns {TODO} member expression\n     */\n    function getNonOptionalMemberChain(node, count) {\n      while (count--) node = node.object;\n      return node;\n    }\n    parser.hooks.isPure.for(\"Identifier\").tap(\"HarmonyImportDependencyParserPlugin\", expression => {\n      const expr = /** @type {Identifier} */expression;\n      if (parser.isVariableDefined(expr.name) || parser.getTagData(expr.name, harmonySpecifierTag)) {\n        return true;\n      }\n    });\n    parser.hooks.import.tap(\"HarmonyImportDependencyParserPlugin\", (statement, source) => {\n      parser.state.lastHarmonyImportOrder = (parser.state.lastHarmonyImportOrder || 0) + 1;\n      const clearDep = new ConstDependency(parser.isAsiPosition(/** @type {Range} */statement.range[0]) ? \";\" : \"\", /** @type {Range} */statement.range);\n      clearDep.loc = /** @type {DependencyLocation} */statement.loc;\n      parser.state.module.addPresentationalDependency(clearDep);\n      parser.unsetAsiPosition(/** @type {Range} */statement.range[1]);\n      const attributes = getAttributes(statement);\n      const sideEffectDep = new HarmonyImportSideEffectDependency(/** @type {string} */source, parser.state.lastHarmonyImportOrder, attributes);\n      sideEffectDep.loc = /** @type {DependencyLocation} */statement.loc;\n      parser.state.module.addDependency(sideEffectDep);\n      return true;\n    });\n    parser.hooks.importSpecifier.tap(\"HarmonyImportDependencyParserPlugin\", (statement, source, id, name) => {\n      const ids = id === null ? [] : [id];\n      parser.tagVariable(name, harmonySpecifierTag, {\n        name,\n        source,\n        ids,\n        sourceOrder: parser.state.lastHarmonyImportOrder,\n        assertions: getAttributes(statement)\n      });\n      return true;\n    });\n    parser.hooks.binaryExpression.tap(\"HarmonyImportDependencyParserPlugin\", expression => {\n      if (expression.operator !== \"in\") return;\n      const leftPartEvaluated = parser.evaluateExpression(expression.left);\n      if (leftPartEvaluated.couldHaveSideEffects()) return;\n      const leftPart = leftPartEvaluated.asString();\n      if (!leftPart) return;\n      const rightPart = parser.evaluateExpression(expression.right);\n      if (!rightPart.isIdentifier()) return;\n      const rootInfo = rightPart.rootInfo;\n      if (typeof rootInfo === \"string\" || !rootInfo || !rootInfo.tagInfo || rootInfo.tagInfo.tag !== harmonySpecifierTag) return;\n      const settings = rootInfo.tagInfo.data;\n      const members = /** @type {(() => string[])} */\n      rightPart.getMembers();\n      const dep = new HarmonyEvaluatedImportSpecifierDependency(settings.source, settings.sourceOrder, settings.ids.concat(members).concat([leftPart]), settings.name, /** @type {Range} */expression.range, settings.assertions, \"in\");\n      dep.directImport = members.length === 0;\n      dep.asiSafe = !parser.isAsiPosition(/** @type {Range} */expression.range[0]);\n      dep.loc = /** @type {DependencyLocation} */expression.loc;\n      parser.state.module.addDependency(dep);\n      InnerGraph.onUsage(parser.state, e => dep.usedByExports = e);\n      return true;\n    });\n    parser.hooks.expression.for(harmonySpecifierTag).tap(\"HarmonyImportDependencyParserPlugin\", expr => {\n      const settings = /** @type {HarmonySettings} */parser.currentTagData;\n      const dep = new HarmonyImportSpecifierDependency(settings.source, settings.sourceOrder, settings.ids, settings.name, /** @type {Range} */expr.range, exportPresenceMode, settings.assertions, []);\n      dep.referencedPropertiesInDestructuring = parser.destructuringAssignmentPropertiesFor(expr);\n      dep.shorthand = parser.scope.inShorthand;\n      dep.directImport = true;\n      dep.asiSafe = !parser.isAsiPosition(/** @type {Range} */expr.range[0]);\n      dep.loc = /** @type {DependencyLocation} */expr.loc;\n      dep.call = parser.scope.inTaggedTemplateTag;\n      parser.state.module.addDependency(dep);\n      InnerGraph.onUsage(parser.state, e => dep.usedByExports = e);\n      return true;\n    });\n    parser.hooks.expressionMemberChain.for(harmonySpecifierTag).tap(\"HarmonyImportDependencyParserPlugin\", (expression, members, membersOptionals, memberRanges) => {\n      const settings = /** @type {HarmonySettings} */\n      parser.currentTagData;\n      const nonOptionalMembers = getNonOptionalPart(members, membersOptionals);\n      /** @type {Range[]} */\n      const ranges = memberRanges.slice(0, memberRanges.length - (members.length - nonOptionalMembers.length));\n      const expr = nonOptionalMembers !== members ? getNonOptionalMemberChain(expression, members.length - nonOptionalMembers.length) : expression;\n      const ids = settings.ids.concat(nonOptionalMembers);\n      const dep = new HarmonyImportSpecifierDependency(settings.source, settings.sourceOrder, ids, settings.name, /** @type {Range} */expr.range, exportPresenceMode, settings.assertions, ranges);\n      dep.referencedPropertiesInDestructuring = parser.destructuringAssignmentPropertiesFor(expr);\n      dep.asiSafe = !parser.isAsiPosition(/** @type {Range} */expr.range[0]);\n      dep.loc = /** @type {DependencyLocation} */expr.loc;\n      parser.state.module.addDependency(dep);\n      InnerGraph.onUsage(parser.state, e => dep.usedByExports = e);\n      return true;\n    });\n    parser.hooks.callMemberChain.for(harmonySpecifierTag).tap(\"HarmonyImportDependencyParserPlugin\", (expression, members, membersOptionals, memberRanges) => {\n      const {\n        arguments: args,\n        callee\n      } = expression;\n      const settings = /** @type {HarmonySettings} */\n      parser.currentTagData;\n      const nonOptionalMembers = getNonOptionalPart(members, membersOptionals);\n      /** @type {Range[]} */\n      const ranges = memberRanges.slice(0, memberRanges.length - (members.length - nonOptionalMembers.length));\n      const expr = nonOptionalMembers !== members ? getNonOptionalMemberChain(callee, members.length - nonOptionalMembers.length) : callee;\n      const ids = settings.ids.concat(nonOptionalMembers);\n      const dep = new HarmonyImportSpecifierDependency(settings.source, settings.sourceOrder, ids, settings.name, /** @type {Range} */expr.range, exportPresenceMode, settings.assertions, ranges);\n      dep.directImport = members.length === 0;\n      dep.call = true;\n      dep.asiSafe = !parser.isAsiPosition(/** @type {Range} */expr.range[0]);\n      // only in case when we strictly follow the spec we need a special case here\n      dep.namespaceObjectAsContext = members.length > 0 && (/** @type {boolean} */this.strictThisContextOnImports);\n      dep.loc = /** @type {DependencyLocation} */expr.loc;\n      parser.state.module.addDependency(dep);\n      if (args) parser.walkExpressions(args);\n      InnerGraph.onUsage(parser.state, e => dep.usedByExports = e);\n      return true;\n    });\n    const {\n      hotAcceptCallback,\n      hotAcceptWithoutCallback\n    } = HotModuleReplacementPlugin.getParserHooks(parser);\n    hotAcceptCallback.tap(\"HarmonyImportDependencyParserPlugin\", (expr, requests) => {\n      if (!HarmonyExports.isEnabled(parser.state)) {\n        // This is not a harmony module, skip it\n        return;\n      }\n      const dependencies = requests.map(request => {\n        const dep = new HarmonyAcceptImportDependency(request);\n        dep.loc = expr.loc;\n        parser.state.module.addDependency(dep);\n        return dep;\n      });\n      if (dependencies.length > 0) {\n        const dep = new HarmonyAcceptDependency(expr.range, dependencies, true);\n        dep.loc = expr.loc;\n        parser.state.module.addDependency(dep);\n      }\n    });\n    hotAcceptWithoutCallback.tap(\"HarmonyImportDependencyParserPlugin\", (expr, requests) => {\n      if (!HarmonyExports.isEnabled(parser.state)) {\n        // This is not a harmony module, skip it\n        return;\n      }\n      const dependencies = requests.map(request => {\n        const dep = new HarmonyAcceptImportDependency(request);\n        dep.loc = expr.loc;\n        parser.state.module.addDependency(dep);\n        return dep;\n      });\n      if (dependencies.length > 0) {\n        const dep = new HarmonyAcceptDependency(expr.range, dependencies, false);\n        dep.loc = expr.loc;\n        parser.state.module.addDependency(dep);\n      }\n    });\n  }\n};\nmodule.exports.harmonySpecifierTag = harmonySpecifierTag;\n// TODO remove it in webpack@6 in favor getAttributes\nmodule.exports.getAssertions = getAttributes;\nmodule.exports.getAttributes = getAttributes;","map":{"version":3,"names":["HotModuleReplacementPlugin","require","InnerGraph","ConstDependency","HarmonyAcceptDependency","HarmonyAcceptImportDependency","HarmonyEvaluatedImportSpecifierDependency","HarmonyExports","ExportPresenceModes","HarmonyImportSideEffectDependency","HarmonyImportSpecifierDependency","harmonySpecifierTag","Symbol","getAttributes","node","type","arguments","properties","value","result","property","key","name","_isLegacyAssert","isImportAssertion","assertions","undefined","attributes","attribute","module","exports","HarmonyImportDependencyParserPlugin","constructor","options","exportPresenceMode","importExportsPresence","fromUserOption","exportsPresence","strictExportPresence","ERROR","AUTO","strictThisContextOnImports","apply","parser","getNonOptionalPart","members","membersOptionals","i","length","slice","getNonOptionalMemberChain","count","object","hooks","isPure","for","tap","expression","expr","isVariableDefined","getTagData","import","statement","source","state","lastHarmonyImportOrder","clearDep","isAsiPosition","range","loc","addPresentationalDependency","unsetAsiPosition","sideEffectDep","addDependency","importSpecifier","id","ids","tagVariable","sourceOrder","binaryExpression","operator","leftPartEvaluated","evaluateExpression","left","couldHaveSideEffects","leftPart","asString","rightPart","right","isIdentifier","rootInfo","tagInfo","tag","settings","data","getMembers","dep","concat","directImport","asiSafe","onUsage","e","usedByExports","currentTagData","referencedPropertiesInDestructuring","destructuringAssignmentPropertiesFor","shorthand","scope","inShorthand","call","inTaggedTemplateTag","expressionMemberChain","memberRanges","nonOptionalMembers","ranges","callMemberChain","args","callee","namespaceObjectAsContext","walkExpressions","hotAcceptCallback","hotAcceptWithoutCallback","getParserHooks","requests","isEnabled","dependencies","map","request","getAssertions"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/node_modules/webpack/lib/dependencies/HarmonyImportDependencyParserPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst HotModuleReplacementPlugin = require(\"../HotModuleReplacementPlugin\");\nconst InnerGraph = require(\"../optimize/InnerGraph\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst HarmonyAcceptDependency = require(\"./HarmonyAcceptDependency\");\nconst HarmonyAcceptImportDependency = require(\"./HarmonyAcceptImportDependency\");\nconst HarmonyEvaluatedImportSpecifierDependency = require(\"./HarmonyEvaluatedImportSpecifierDependency\");\nconst HarmonyExports = require(\"./HarmonyExports\");\nconst { ExportPresenceModes } = require(\"./HarmonyImportDependency\");\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\nconst HarmonyImportSpecifierDependency = require(\"./HarmonyImportSpecifierDependency\");\n\n/** @typedef {import(\"estree\").ExportAllDeclaration} ExportAllDeclaration */\n/** @typedef {import(\"estree\").ExportNamedDeclaration} ExportNamedDeclaration */\n/** @typedef {import(\"estree\").Identifier} Identifier */\n/** @typedef {import(\"estree\").ImportDeclaration} ImportDeclaration */\n/** @typedef {import(\"estree\").ImportExpression} ImportExpression */\n/** @typedef {import(\"estree\").Literal} Literal */\n/** @typedef {import(\"estree\").MemberExpression} MemberExpression */\n/** @typedef {import(\"estree\").ObjectExpression} ObjectExpression */\n/** @typedef {import(\"estree\").Property} Property */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"../javascript/BasicEvaluatedExpression\")} BasicEvaluatedExpression */\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\n/** @typedef {import(\"../javascript/JavascriptParser\").DestructuringAssignmentProperty} DestructuringAssignmentProperty */\n/** @typedef {import(\"../javascript/JavascriptParser\").ImportAttributes} ImportAttributes */\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n/** @typedef {import(\"../optimize/InnerGraph\").InnerGraph} InnerGraph */\n/** @typedef {import(\"../optimize/InnerGraph\").TopLevelSymbol} TopLevelSymbol */\n/** @typedef {import(\"./HarmonyImportDependency\")} HarmonyImportDependency */\n\nconst harmonySpecifierTag = Symbol(\"harmony import\");\n\n/**\n * @typedef {object} HarmonySettings\n * @property {string[]} ids\n * @property {string} source\n * @property {number} sourceOrder\n * @property {string} name\n * @property {boolean} await\n * @property {Record<string, any> | undefined} assertions\n */\n\n/**\n * @param {ImportDeclaration | ExportNamedDeclaration | ExportAllDeclaration | (ImportExpression & { arguments?: ObjectExpression[] })} node node with assertions\n * @returns {ImportAttributes | undefined} import attributes\n */\nfunction getAttributes(node) {\n\tif (\n\t\tnode.type === \"ImportExpression\" &&\n\t\tnode.arguments &&\n\t\tnode.arguments[0] &&\n\t\tnode.arguments[0].type === \"ObjectExpression\" &&\n\t\tnode.arguments[0].properties[0] &&\n\t\tnode.arguments[0].properties[0].type === \"Property\" &&\n\t\tnode.arguments[0].properties[0].value.type === \"ObjectExpression\" &&\n\t\tnode.arguments[0].properties[0].value.properties\n\t) {\n\t\tconst properties =\n\t\t\t/** @type {Property[]} */\n\t\t\t(node.arguments[0].properties[0].value.properties);\n\t\tconst result = /** @type {ImportAttributes} */ ({});\n\t\tfor (const property of properties) {\n\t\t\tconst key =\n\t\t\t\t/** @type {string} */\n\t\t\t\t(\n\t\t\t\t\tproperty.key.type === \"Identifier\"\n\t\t\t\t\t\t? property.key.name\n\t\t\t\t\t\t: /** @type {Literal} */ (property.key).value\n\t\t\t\t);\n\t\t\tresult[key] =\n\t\t\t\t/** @type {string} */\n\t\t\t\t(/** @type {Literal} */ (property.value).value);\n\t\t}\n\t\tconst key =\n\t\t\tnode.arguments[0].properties[0].key.type === \"Identifier\"\n\t\t\t\t? node.arguments[0].properties[0].key.name\n\t\t\t\t: /** @type {Literal} */ (node.arguments[0].properties[0].key).value;\n\t\tif (key === \"assert\") {\n\t\t\tresult._isLegacyAssert = true;\n\t\t}\n\t\treturn result;\n\t}\n\t// TODO remove cast when @types/estree has been updated to import assertions\n\tconst isImportAssertion =\n\t\t/** @type {{ assertions?: ImportAttributeNode[] }} */ (node).assertions !==\n\t\tundefined;\n\tconst attributes = isImportAssertion\n\t\t? /** @type {{ assertions?: ImportAttributeNode[] }} */ (node).assertions\n\t\t: /** @type {{ attributes?: ImportAttributeNode[] }} */ (node).attributes;\n\tif (attributes === undefined) {\n\t\treturn;\n\t}\n\tconst result = /** @type {ImportAttributes} */ ({});\n\tfor (const attribute of attributes) {\n\t\tconst key =\n\t\t\t/** @type {string} */\n\t\t\t(\n\t\t\t\tattribute.key.type === \"Identifier\"\n\t\t\t\t\t? attribute.key.name\n\t\t\t\t\t: attribute.key.value\n\t\t\t);\n\t\tresult[key] = /** @type {string} */ (attribute.value.value);\n\t}\n\tif (isImportAssertion) {\n\t\tresult._isLegacyAssert = true;\n\t}\n\treturn result;\n}\n\nmodule.exports = class HarmonyImportDependencyParserPlugin {\n\t/**\n\t * @param {JavascriptParserOptions} options options\n\t */\n\tconstructor(options) {\n\t\tthis.exportPresenceMode =\n\t\t\toptions.importExportsPresence !== undefined\n\t\t\t\t? ExportPresenceModes.fromUserOption(options.importExportsPresence)\n\t\t\t\t: options.exportsPresence !== undefined\n\t\t\t\t\t? ExportPresenceModes.fromUserOption(options.exportsPresence)\n\t\t\t\t\t: options.strictExportPresence\n\t\t\t\t\t\t? ExportPresenceModes.ERROR\n\t\t\t\t\t\t: ExportPresenceModes.AUTO;\n\t\tthis.strictThisContextOnImports = options.strictThisContextOnImports;\n\t}\n\n\t/**\n\t * @param {JavascriptParser} parser the parser\n\t * @returns {void}\n\t */\n\tapply(parser) {\n\t\tconst { exportPresenceMode } = this;\n\n\t\t/**\n\t\t * @param {string[]} members members\n\t\t * @param {boolean[]} membersOptionals members Optionals\n\t\t * @returns {string[]} a non optional part\n\t\t */\n\t\tfunction getNonOptionalPart(members, membersOptionals) {\n\t\t\tlet i = 0;\n\t\t\twhile (i < members.length && membersOptionals[i] === false) i++;\n\t\t\treturn i !== members.length ? members.slice(0, i) : members;\n\t\t}\n\n\t\t/**\n\t\t * @param {TODO} node member expression\n\t\t * @param {number} count count\n\t\t * @returns {TODO} member expression\n\t\t */\n\t\tfunction getNonOptionalMemberChain(node, count) {\n\t\t\twhile (count--) node = node.object;\n\t\t\treturn node;\n\t\t}\n\n\t\tparser.hooks.isPure\n\t\t\t.for(\"Identifier\")\n\t\t\t.tap(\"HarmonyImportDependencyParserPlugin\", expression => {\n\t\t\t\tconst expr = /** @type {Identifier} */ (expression);\n\t\t\t\tif (\n\t\t\t\t\tparser.isVariableDefined(expr.name) ||\n\t\t\t\t\tparser.getTagData(expr.name, harmonySpecifierTag)\n\t\t\t\t) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\tparser.hooks.import.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(statement, source) => {\n\t\t\t\tparser.state.lastHarmonyImportOrder =\n\t\t\t\t\t(parser.state.lastHarmonyImportOrder || 0) + 1;\n\t\t\t\tconst clearDep = new ConstDependency(\n\t\t\t\t\tparser.isAsiPosition(/** @type {Range} */ (statement.range)[0])\n\t\t\t\t\t\t? \";\"\n\t\t\t\t\t\t: \"\",\n\t\t\t\t\t/** @type {Range} */ (statement.range)\n\t\t\t\t);\n\t\t\t\tclearDep.loc = /** @type {DependencyLocation} */ (statement.loc);\n\t\t\t\tparser.state.module.addPresentationalDependency(clearDep);\n\t\t\t\tparser.unsetAsiPosition(/** @type {Range} */ (statement.range)[1]);\n\t\t\t\tconst attributes = getAttributes(statement);\n\t\t\t\tconst sideEffectDep = new HarmonyImportSideEffectDependency(\n\t\t\t\t\t/** @type {string} */ (source),\n\t\t\t\t\tparser.state.lastHarmonyImportOrder,\n\t\t\t\t\tattributes\n\t\t\t\t);\n\t\t\t\tsideEffectDep.loc = /** @type {DependencyLocation} */ (statement.loc);\n\t\t\t\tparser.state.module.addDependency(sideEffectDep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.importSpecifier.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(statement, source, id, name) => {\n\t\t\t\tconst ids = id === null ? [] : [id];\n\t\t\t\tparser.tagVariable(name, harmonySpecifierTag, {\n\t\t\t\t\tname,\n\t\t\t\t\tsource,\n\t\t\t\t\tids,\n\t\t\t\t\tsourceOrder: parser.state.lastHarmonyImportOrder,\n\t\t\t\t\tassertions: getAttributes(statement)\n\t\t\t\t});\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.binaryExpression.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\texpression => {\n\t\t\t\tif (expression.operator !== \"in\") return;\n\n\t\t\t\tconst leftPartEvaluated = parser.evaluateExpression(expression.left);\n\t\t\t\tif (leftPartEvaluated.couldHaveSideEffects()) return;\n\t\t\t\tconst leftPart = leftPartEvaluated.asString();\n\t\t\t\tif (!leftPart) return;\n\n\t\t\t\tconst rightPart = parser.evaluateExpression(expression.right);\n\t\t\t\tif (!rightPart.isIdentifier()) return;\n\n\t\t\t\tconst rootInfo = rightPart.rootInfo;\n\t\t\t\tif (\n\t\t\t\t\ttypeof rootInfo === \"string\" ||\n\t\t\t\t\t!rootInfo ||\n\t\t\t\t\t!rootInfo.tagInfo ||\n\t\t\t\t\trootInfo.tagInfo.tag !== harmonySpecifierTag\n\t\t\t\t)\n\t\t\t\t\treturn;\n\t\t\t\tconst settings = rootInfo.tagInfo.data;\n\t\t\t\tconst members =\n\t\t\t\t\t/** @type {(() => string[])} */\n\t\t\t\t\t(rightPart.getMembers)();\n\t\t\t\tconst dep = new HarmonyEvaluatedImportSpecifierDependency(\n\t\t\t\t\tsettings.source,\n\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\tsettings.ids.concat(members).concat([leftPart]),\n\t\t\t\t\tsettings.name,\n\t\t\t\t\t/** @type {Range} */ (expression.range),\n\t\t\t\t\tsettings.assertions,\n\t\t\t\t\t\"in\"\n\t\t\t\t);\n\t\t\t\tdep.directImport = members.length === 0;\n\t\t\t\tdep.asiSafe = !parser.isAsiPosition(\n\t\t\t\t\t/** @type {Range} */ (expression.range)[0]\n\t\t\t\t);\n\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (expression.loc);\n\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\tInnerGraph.onUsage(parser.state, e => (dep.usedByExports = e));\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.expression\n\t\t\t.for(harmonySpecifierTag)\n\t\t\t.tap(\"HarmonyImportDependencyParserPlugin\", expr => {\n\t\t\t\tconst settings = /** @type {HarmonySettings} */ (parser.currentTagData);\n\t\t\t\tconst dep = new HarmonyImportSpecifierDependency(\n\t\t\t\t\tsettings.source,\n\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\tsettings.ids,\n\t\t\t\t\tsettings.name,\n\t\t\t\t\t/** @type {Range} */ (expr.range),\n\t\t\t\t\texportPresenceMode,\n\t\t\t\t\tsettings.assertions,\n\t\t\t\t\t[]\n\t\t\t\t);\n\t\t\t\tdep.referencedPropertiesInDestructuring =\n\t\t\t\t\tparser.destructuringAssignmentPropertiesFor(expr);\n\t\t\t\tdep.shorthand = parser.scope.inShorthand;\n\t\t\t\tdep.directImport = true;\n\t\t\t\tdep.asiSafe = !parser.isAsiPosition(\n\t\t\t\t\t/** @type {Range} */ (expr.range)[0]\n\t\t\t\t);\n\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (expr.loc);\n\t\t\t\tdep.call = parser.scope.inTaggedTemplateTag;\n\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\tInnerGraph.onUsage(parser.state, e => (dep.usedByExports = e));\n\t\t\t\treturn true;\n\t\t\t});\n\t\tparser.hooks.expressionMemberChain\n\t\t\t.for(harmonySpecifierTag)\n\t\t\t.tap(\n\t\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t\t(expression, members, membersOptionals, memberRanges) => {\n\t\t\t\t\tconst settings = /** @type {HarmonySettings} */ (\n\t\t\t\t\t\tparser.currentTagData\n\t\t\t\t\t);\n\t\t\t\t\tconst nonOptionalMembers = getNonOptionalPart(\n\t\t\t\t\t\tmembers,\n\t\t\t\t\t\tmembersOptionals\n\t\t\t\t\t);\n\t\t\t\t\t/** @type {Range[]} */\n\t\t\t\t\tconst ranges = memberRanges.slice(\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tmemberRanges.length - (members.length - nonOptionalMembers.length)\n\t\t\t\t\t);\n\t\t\t\t\tconst expr =\n\t\t\t\t\t\tnonOptionalMembers !== members\n\t\t\t\t\t\t\t? getNonOptionalMemberChain(\n\t\t\t\t\t\t\t\t\texpression,\n\t\t\t\t\t\t\t\t\tmembers.length - nonOptionalMembers.length\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: expression;\n\t\t\t\t\tconst ids = settings.ids.concat(nonOptionalMembers);\n\t\t\t\t\tconst dep = new HarmonyImportSpecifierDependency(\n\t\t\t\t\t\tsettings.source,\n\t\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\t\tids,\n\t\t\t\t\t\tsettings.name,\n\t\t\t\t\t\t/** @type {Range} */ (expr.range),\n\t\t\t\t\t\texportPresenceMode,\n\t\t\t\t\t\tsettings.assertions,\n\t\t\t\t\t\tranges\n\t\t\t\t\t);\n\t\t\t\t\tdep.referencedPropertiesInDestructuring =\n\t\t\t\t\t\tparser.destructuringAssignmentPropertiesFor(expr);\n\t\t\t\t\tdep.asiSafe = !parser.isAsiPosition(\n\t\t\t\t\t\t/** @type {Range} */ (expr.range)[0]\n\t\t\t\t\t);\n\t\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (expr.loc);\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\tInnerGraph.onUsage(parser.state, e => (dep.usedByExports = e));\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t);\n\t\tparser.hooks.callMemberChain\n\t\t\t.for(harmonySpecifierTag)\n\t\t\t.tap(\n\t\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t\t(expression, members, membersOptionals, memberRanges) => {\n\t\t\t\t\tconst { arguments: args, callee } = expression;\n\t\t\t\t\tconst settings = /** @type {HarmonySettings} */ (\n\t\t\t\t\t\tparser.currentTagData\n\t\t\t\t\t);\n\t\t\t\t\tconst nonOptionalMembers = getNonOptionalPart(\n\t\t\t\t\t\tmembers,\n\t\t\t\t\t\tmembersOptionals\n\t\t\t\t\t);\n\t\t\t\t\t/** @type {Range[]} */\n\t\t\t\t\tconst ranges = memberRanges.slice(\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tmemberRanges.length - (members.length - nonOptionalMembers.length)\n\t\t\t\t\t);\n\t\t\t\t\tconst expr =\n\t\t\t\t\t\tnonOptionalMembers !== members\n\t\t\t\t\t\t\t? getNonOptionalMemberChain(\n\t\t\t\t\t\t\t\t\tcallee,\n\t\t\t\t\t\t\t\t\tmembers.length - nonOptionalMembers.length\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: callee;\n\t\t\t\t\tconst ids = settings.ids.concat(nonOptionalMembers);\n\t\t\t\t\tconst dep = new HarmonyImportSpecifierDependency(\n\t\t\t\t\t\tsettings.source,\n\t\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\t\tids,\n\t\t\t\t\t\tsettings.name,\n\t\t\t\t\t\t/** @type {Range} */ (expr.range),\n\t\t\t\t\t\texportPresenceMode,\n\t\t\t\t\t\tsettings.assertions,\n\t\t\t\t\t\tranges\n\t\t\t\t\t);\n\t\t\t\t\tdep.directImport = members.length === 0;\n\t\t\t\t\tdep.call = true;\n\t\t\t\t\tdep.asiSafe = !parser.isAsiPosition(\n\t\t\t\t\t\t/** @type {Range} */ (expr.range)[0]\n\t\t\t\t\t);\n\t\t\t\t\t// only in case when we strictly follow the spec we need a special case here\n\t\t\t\t\tdep.namespaceObjectAsContext =\n\t\t\t\t\t\tmembers.length > 0 &&\n\t\t\t\t\t\t/** @type {boolean} */ (this.strictThisContextOnImports);\n\t\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (expr.loc);\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\tif (args) parser.walkExpressions(args);\n\t\t\t\t\tInnerGraph.onUsage(parser.state, e => (dep.usedByExports = e));\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t);\n\t\tconst { hotAcceptCallback, hotAcceptWithoutCallback } =\n\t\t\tHotModuleReplacementPlugin.getParserHooks(parser);\n\t\thotAcceptCallback.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(expr, requests) => {\n\t\t\t\tif (!HarmonyExports.isEnabled(parser.state)) {\n\t\t\t\t\t// This is not a harmony module, skip it\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst dependencies = requests.map(request => {\n\t\t\t\t\tconst dep = new HarmonyAcceptImportDependency(request);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\treturn dep;\n\t\t\t\t});\n\t\t\t\tif (dependencies.length > 0) {\n\t\t\t\t\tconst dep = new HarmonyAcceptDependency(\n\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\tdependencies,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\thotAcceptWithoutCallback.tap(\n\t\t\t\"HarmonyImportDependencyParserPlugin\",\n\t\t\t(expr, requests) => {\n\t\t\t\tif (!HarmonyExports.isEnabled(parser.state)) {\n\t\t\t\t\t// This is not a harmony module, skip it\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst dependencies = requests.map(request => {\n\t\t\t\t\tconst dep = new HarmonyAcceptImportDependency(request);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\treturn dep;\n\t\t\t\t});\n\t\t\t\tif (dependencies.length > 0) {\n\t\t\t\t\tconst dep = new HarmonyAcceptDependency(\n\t\t\t\t\t\texpr.range,\n\t\t\t\t\t\tdependencies,\n\t\t\t\t\t\tfalse\n\t\t\t\t\t);\n\t\t\t\t\tdep.loc = expr.loc;\n\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n};\n\nmodule.exports.harmonySpecifierTag = harmonySpecifierTag;\n// TODO remove it in webpack@6 in favor getAttributes\nmodule.exports.getAssertions = getAttributes;\nmodule.exports.getAttributes = getAttributes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}