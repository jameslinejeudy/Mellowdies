{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n  compareRuntime\n} = require(\"./runtime\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Chunk\").ChunkId} ChunkId */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../ChunkGraph\").ModuleId} ModuleId */\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"../Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/**\n * @template T\n * @typedef {function(T, T): -1|0|1} Comparator\n */\n/**\n * @template TArg\n * @template T\n * @typedef {function(TArg, T, T): -1|0|1} RawParameterizedComparator\n */\n/**\n * @template TArg\n * @template T\n * @typedef {function(TArg): Comparator<T>} ParameterizedComparator\n */\n\n/**\n * @template T\n * @param {RawParameterizedComparator<any, T>} fn comparator with argument\n * @returns {ParameterizedComparator<any, T>} comparator\n */\nconst createCachedParameterizedComparator = fn => {\n  /** @type {WeakMap<object, Comparator<T>>} */\n  const map = new WeakMap();\n  return arg => {\n    const cachedResult = map.get(arg);\n    if (cachedResult !== undefined) return cachedResult;\n    /**\n     * @param {T} a first item\n     * @param {T} b second item\n     * @returns {-1|0|1} compare result\n     */\n    const result = fn.bind(null, arg);\n    map.set(arg, result);\n    return result;\n  };\n};\n\n/**\n * @param {Chunk} a chunk\n * @param {Chunk} b chunk\n * @returns {-1|0|1} compare result\n */\nmodule.exports.compareChunksById = (a, b) => compareIds(/** @type {ChunkId} */a.id, /** @type {ChunkId} */b.id);\n\n/**\n * @param {Module} a module\n * @param {Module} b module\n * @returns {-1|0|1} compare result\n */\nmodule.exports.compareModulesByIdentifier = (a, b) => compareIds(a.identifier(), b.identifier());\n\n/**\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @param {Module} a module\n * @param {Module} b module\n * @returns {-1|0|1} compare result\n */\nconst compareModulesById = (chunkGraph, a, b) => compareIds(/** @type {ModuleId} */chunkGraph.getModuleId(a), /** @type {ModuleId} */chunkGraph.getModuleId(b));\n/** @type {ParameterizedComparator<ChunkGraph, Module>} */\nmodule.exports.compareModulesById = createCachedParameterizedComparator(compareModulesById);\n\n/**\n * @param {number} a number\n * @param {number} b number\n * @returns {-1|0|1} compare result\n */\nconst compareNumbers = (a, b) => {\n  if (typeof a !== typeof b) {\n    return typeof a < typeof b ? -1 : 1;\n  }\n  if (a < b) return -1;\n  if (a > b) return 1;\n  return 0;\n};\nmodule.exports.compareNumbers = compareNumbers;\n\n/**\n * @param {string} a string\n * @param {string} b string\n * @returns {-1|0|1} compare result\n */\nconst compareStringsNumeric = (a, b) => {\n  const aLength = a.length;\n  const bLength = b.length;\n  let aChar = 0;\n  let bChar = 0;\n  let aIsDigit = false;\n  let bIsDigit = false;\n  let i = 0;\n  let j = 0;\n  while (i < aLength && j < bLength) {\n    aChar = a.charCodeAt(i);\n    bChar = b.charCodeAt(j);\n    aIsDigit = aChar >= 48 && aChar <= 57;\n    bIsDigit = bChar >= 48 && bChar <= 57;\n    if (!aIsDigit && !bIsDigit) {\n      if (aChar < bChar) return -1;\n      if (aChar > bChar) return 1;\n      i++;\n      j++;\n    } else if (aIsDigit && !bIsDigit) {\n      // This segment of a is shorter than in b\n      return 1;\n    } else if (!aIsDigit && bIsDigit) {\n      // This segment of b is shorter than in a\n      return -1;\n    } else {\n      let aNumber = aChar - 48;\n      let bNumber = bChar - 48;\n      while (++i < aLength) {\n        aChar = a.charCodeAt(i);\n        if (aChar < 48 || aChar > 57) break;\n        aNumber = aNumber * 10 + aChar - 48;\n      }\n      while (++j < bLength) {\n        bChar = b.charCodeAt(j);\n        if (bChar < 48 || bChar > 57) break;\n        bNumber = bNumber * 10 + bChar - 48;\n      }\n      if (aNumber < bNumber) return -1;\n      if (aNumber > bNumber) return 1;\n    }\n  }\n  if (j < bLength) {\n    // a is shorter than b\n    bChar = b.charCodeAt(j);\n    bIsDigit = bChar >= 48 && bChar <= 57;\n    return bIsDigit ? -1 : 1;\n  }\n  if (i < aLength) {\n    // b is shorter than a\n    aChar = a.charCodeAt(i);\n    aIsDigit = aChar >= 48 && aChar <= 57;\n    return aIsDigit ? 1 : -1;\n  }\n  return 0;\n};\nmodule.exports.compareStringsNumeric = compareStringsNumeric;\n\n/**\n * @param {ModuleGraph} moduleGraph the module graph\n * @param {Module} a module\n * @param {Module} b module\n * @returns {-1|0|1} compare result\n */\nconst compareModulesByPostOrderIndexOrIdentifier = (moduleGraph, a, b) => {\n  const cmp = compareNumbers(/** @type {number} */moduleGraph.getPostOrderIndex(a), /** @type {number} */moduleGraph.getPostOrderIndex(b));\n  if (cmp !== 0) return cmp;\n  return compareIds(a.identifier(), b.identifier());\n};\n/** @type {ParameterizedComparator<ModuleGraph, Module>} */\nmodule.exports.compareModulesByPostOrderIndexOrIdentifier = createCachedParameterizedComparator(compareModulesByPostOrderIndexOrIdentifier);\n\n/**\n * @param {ModuleGraph} moduleGraph the module graph\n * @param {Module} a module\n * @param {Module} b module\n * @returns {-1|0|1} compare result\n */\nconst compareModulesByPreOrderIndexOrIdentifier = (moduleGraph, a, b) => {\n  const cmp = compareNumbers(/** @type {number} */moduleGraph.getPreOrderIndex(a), /** @type {number} */moduleGraph.getPreOrderIndex(b));\n  if (cmp !== 0) return cmp;\n  return compareIds(a.identifier(), b.identifier());\n};\n/** @type {ParameterizedComparator<ModuleGraph, Module>} */\nmodule.exports.compareModulesByPreOrderIndexOrIdentifier = createCachedParameterizedComparator(compareModulesByPreOrderIndexOrIdentifier);\n\n/**\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @param {Module} a module\n * @param {Module} b module\n * @returns {-1|0|1} compare result\n */\nconst compareModulesByIdOrIdentifier = (chunkGraph, a, b) => {\n  const cmp = compareIds(/** @type {ModuleId} */chunkGraph.getModuleId(a), /** @type {ModuleId} */chunkGraph.getModuleId(b));\n  if (cmp !== 0) return cmp;\n  return compareIds(a.identifier(), b.identifier());\n};\n/** @type {ParameterizedComparator<ChunkGraph, Module>} */\nmodule.exports.compareModulesByIdOrIdentifier = createCachedParameterizedComparator(compareModulesByIdOrIdentifier);\n\n/**\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @param {Chunk} a chunk\n * @param {Chunk} b chunk\n * @returns {-1|0|1} compare result\n */\nconst compareChunks = (chunkGraph, a, b) => chunkGraph.compareChunks(a, b);\n/** @type {ParameterizedComparator<ChunkGraph, Chunk>} */\nmodule.exports.compareChunks = createCachedParameterizedComparator(compareChunks);\n\n/**\n * @param {string|number} a first id\n * @param {string|number} b second id\n * @returns {-1|0|1} compare result\n */\nconst compareIds = (a, b) => {\n  if (typeof a !== typeof b) {\n    return typeof a < typeof b ? -1 : 1;\n  }\n  if (a < b) return -1;\n  if (a > b) return 1;\n  return 0;\n};\nmodule.exports.compareIds = compareIds;\n\n/**\n * @param {string} a first string\n * @param {string} b second string\n * @returns {-1|0|1} compare result\n */\nconst compareStrings = (a, b) => {\n  if (a < b) return -1;\n  if (a > b) return 1;\n  return 0;\n};\nmodule.exports.compareStrings = compareStrings;\n\n/**\n * @param {ChunkGroup} a first chunk group\n * @param {ChunkGroup} b second chunk group\n * @returns {-1|0|1} compare result\n */\nconst compareChunkGroupsByIndex = (a, b) => /** @type {number} */a.index < (/** @type {number} */b.index) ? -1 : 1;\nmodule.exports.compareChunkGroupsByIndex = compareChunkGroupsByIndex;\n\n/**\n * @template K1 {Object}\n * @template K2\n * @template T\n */\nclass TwoKeyWeakMap {\n  constructor() {\n    /**\n     * @private\n     * @type {WeakMap<any, WeakMap<any, T | undefined>>}\n     */\n    this._map = new WeakMap();\n  }\n\n  /**\n   * @param {K1} key1 first key\n   * @param {K2} key2 second key\n   * @returns {T | undefined} value\n   */\n  get(key1, key2) {\n    const childMap = this._map.get(key1);\n    if (childMap === undefined) {\n      return;\n    }\n    return childMap.get(key2);\n  }\n\n  /**\n   * @param {K1} key1 first key\n   * @param {K2} key2 second key\n   * @param {T | undefined} value new value\n   * @returns {void}\n   */\n  set(key1, key2, value) {\n    let childMap = this._map.get(key1);\n    if (childMap === undefined) {\n      childMap = new WeakMap();\n      this._map.set(key1, childMap);\n    }\n    childMap.set(key2, value);\n  }\n}\n\n/** @type {TwoKeyWeakMap<Comparator<any>, Comparator<any>, Comparator<any>>}} */\nconst concatComparatorsCache = new TwoKeyWeakMap();\n\n/**\n * @template T\n * @param {Comparator<T>} c1 comparator\n * @param {Comparator<T>} c2 comparator\n * @param {Comparator<T>[]} cRest comparators\n * @returns {Comparator<T>} comparator\n */\nconst concatComparators = (c1, c2, ...cRest) => {\n  if (cRest.length > 0) {\n    const [c3, ...cRest2] = cRest;\n    return concatComparators(c1, concatComparators(c2, c3, ...cRest2));\n  }\n  const cacheEntry = /** @type {Comparator<T>} */\n  concatComparatorsCache.get(c1, c2);\n  if (cacheEntry !== undefined) return cacheEntry;\n  /**\n   * @param {T} a first value\n   * @param {T} b second value\n   * @returns {-1|0|1} compare result\n   */\n  const result = (a, b) => {\n    const res = c1(a, b);\n    if (res !== 0) return res;\n    return c2(a, b);\n  };\n  concatComparatorsCache.set(c1, c2, result);\n  return result;\n};\nmodule.exports.concatComparators = concatComparators;\n\n/**\n * @template A, B\n * @typedef {(input: A) => B | undefined | null} Selector\n */\n\n/** @type {TwoKeyWeakMap<Selector<any, any>, Comparator<any>, Comparator<any>>}} */\nconst compareSelectCache = new TwoKeyWeakMap();\n\n/**\n * @template T\n * @template R\n * @param {Selector<T, R>} getter getter for value\n * @param {Comparator<R>} comparator comparator\n * @returns {Comparator<T>} comparator\n */\nconst compareSelect = (getter, comparator) => {\n  const cacheEntry = compareSelectCache.get(getter, comparator);\n  if (cacheEntry !== undefined) return cacheEntry;\n  /**\n   * @param {T} a first value\n   * @param {T} b second value\n   * @returns {-1|0|1} compare result\n   */\n  const result = (a, b) => {\n    const aValue = getter(a);\n    const bValue = getter(b);\n    if (aValue !== undefined && aValue !== null) {\n      if (bValue !== undefined && bValue !== null) {\n        return comparator(aValue, bValue);\n      }\n      return -1;\n    }\n    if (bValue !== undefined && bValue !== null) {\n      return 1;\n    }\n    return 0;\n  };\n  compareSelectCache.set(getter, comparator, result);\n  return result;\n};\nmodule.exports.compareSelect = compareSelect;\n\n/** @type {WeakMap<Comparator<any>, Comparator<Iterable<any>>>} */\nconst compareIteratorsCache = new WeakMap();\n\n/**\n * @template T\n * @param {Comparator<T>} elementComparator comparator for elements\n * @returns {Comparator<Iterable<T>>} comparator for iterables of elements\n */\nconst compareIterables = elementComparator => {\n  const cacheEntry = compareIteratorsCache.get(elementComparator);\n  if (cacheEntry !== undefined) return cacheEntry;\n  /**\n   * @param {Iterable<T>} a first value\n   * @param {Iterable<T>} b second value\n   * @returns {-1|0|1} compare result\n   */\n  const result = (a, b) => {\n    const aI = a[Symbol.iterator]();\n    const bI = b[Symbol.iterator]();\n    while (true) {\n      const aItem = aI.next();\n      const bItem = bI.next();\n      if (aItem.done) {\n        return bItem.done ? 0 : -1;\n      } else if (bItem.done) {\n        return 1;\n      }\n      const res = elementComparator(aItem.value, bItem.value);\n      if (res !== 0) return res;\n    }\n  };\n  compareIteratorsCache.set(elementComparator, result);\n  return result;\n};\nmodule.exports.compareIterables = compareIterables;\n\n// TODO this is no longer needed when minimum node.js version is >= 12\n// since these versions ship with a stable sort function\n/**\n * @template T\n * @param {Iterable<T>} iterable original ordered list\n * @returns {Comparator<T>} comparator\n */\nmodule.exports.keepOriginalOrder = iterable => {\n  /** @type {Map<T, number>} */\n  const map = new Map();\n  let i = 0;\n  for (const item of iterable) {\n    map.set(item, i++);\n  }\n  return (a, b) => compareNumbers(/** @type {number} */map.get(a), /** @type {number} */map.get(b));\n};\n\n/**\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @returns {Comparator<Chunk>} comparator\n */\nmodule.exports.compareChunksNatural = chunkGraph => {\n  const cmpFn = module.exports.compareModulesById(chunkGraph);\n  const cmpIterableFn = compareIterables(cmpFn);\n  return concatComparators(compareSelect(chunk => (/** @type {string|number} */chunk.name), compareIds), compareSelect(chunk => chunk.runtime, compareRuntime), compareSelect(\n  /**\n   * @param {Chunk} chunk a chunk\n   * @returns {Iterable<Module>} modules\n   */\n  chunk => chunkGraph.getOrderedChunkModulesIterable(chunk, cmpFn), cmpIterableFn));\n};\n\n/**\n * Compare two locations\n * @param {DependencyLocation} a A location node\n * @param {DependencyLocation} b A location node\n * @returns {-1|0|1} sorting comparator value\n */\nmodule.exports.compareLocations = (a, b) => {\n  const isObjectA = typeof a === \"object\" && a !== null;\n  const isObjectB = typeof b === \"object\" && b !== null;\n  if (!isObjectA || !isObjectB) {\n    if (isObjectA) return 1;\n    if (isObjectB) return -1;\n    return 0;\n  }\n  if (\"start\" in a) {\n    if (\"start\" in b) {\n      const ap = a.start;\n      const bp = b.start;\n      if (ap.line < bp.line) return -1;\n      if (ap.line > bp.line) return 1;\n      if (/** @type {number} */ap.column < (/** @type {number} */bp.column)) return -1;\n      if (/** @type {number} */ap.column > (/** @type {number} */bp.column)) return 1;\n    } else return -1;\n  } else if (\"start\" in b) return 1;\n  if (\"name\" in a) {\n    if (\"name\" in b) {\n      if (a.name < b.name) return -1;\n      if (a.name > b.name) return 1;\n    } else return -1;\n  } else if (\"name\" in b) return 1;\n  if (\"index\" in a) {\n    if (\"index\" in b) {\n      if (/** @type {number} */a.index < (/** @type {number} */b.index)) return -1;\n      if (/** @type {number} */a.index > (/** @type {number} */b.index)) return 1;\n    } else return -1;\n  } else if (\"index\" in b) return 1;\n  return 0;\n};","map":{"version":3,"names":["compareRuntime","require","createCachedParameterizedComparator","fn","map","WeakMap","arg","cachedResult","get","undefined","result","bind","set","module","exports","compareChunksById","a","b","compareIds","id","compareModulesByIdentifier","identifier","compareModulesById","chunkGraph","getModuleId","compareNumbers","compareStringsNumeric","aLength","length","bLength","aChar","bChar","aIsDigit","bIsDigit","i","j","charCodeAt","aNumber","bNumber","compareModulesByPostOrderIndexOrIdentifier","moduleGraph","cmp","getPostOrderIndex","compareModulesByPreOrderIndexOrIdentifier","getPreOrderIndex","compareModulesByIdOrIdentifier","compareChunks","compareStrings","compareChunkGroupsByIndex","index","TwoKeyWeakMap","constructor","_map","key1","key2","childMap","value","concatComparatorsCache","concatComparators","c1","c2","cRest","c3","cRest2","cacheEntry","res","compareSelectCache","compareSelect","getter","comparator","aValue","bValue","compareIteratorsCache","compareIterables","elementComparator","aI","Symbol","iterator","bI","aItem","next","bItem","done","keepOriginalOrder","iterable","Map","item","compareChunksNatural","cmpFn","cmpIterableFn","chunk","name","runtime","getOrderedChunkModulesIterable","compareLocations","isObjectA","isObjectB","ap","start","bp","line","column"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/node_modules/webpack/lib/util/comparators.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { compareRuntime } = require(\"./runtime\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../Chunk\").ChunkId} ChunkId */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../ChunkGraph\").ModuleId} ModuleId */\n/** @typedef {import(\"../ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"../Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/**\n * @template T\n * @typedef {function(T, T): -1|0|1} Comparator\n */\n/**\n * @template TArg\n * @template T\n * @typedef {function(TArg, T, T): -1|0|1} RawParameterizedComparator\n */\n/**\n * @template TArg\n * @template T\n * @typedef {function(TArg): Comparator<T>} ParameterizedComparator\n */\n\n/**\n * @template T\n * @param {RawParameterizedComparator<any, T>} fn comparator with argument\n * @returns {ParameterizedComparator<any, T>} comparator\n */\nconst createCachedParameterizedComparator = fn => {\n\t/** @type {WeakMap<object, Comparator<T>>} */\n\tconst map = new WeakMap();\n\treturn arg => {\n\t\tconst cachedResult = map.get(arg);\n\t\tif (cachedResult !== undefined) return cachedResult;\n\t\t/**\n\t\t * @param {T} a first item\n\t\t * @param {T} b second item\n\t\t * @returns {-1|0|1} compare result\n\t\t */\n\t\tconst result = fn.bind(null, arg);\n\t\tmap.set(arg, result);\n\t\treturn result;\n\t};\n};\n\n/**\n * @param {Chunk} a chunk\n * @param {Chunk} b chunk\n * @returns {-1|0|1} compare result\n */\nmodule.exports.compareChunksById = (a, b) =>\n\tcompareIds(/** @type {ChunkId} */ (a.id), /** @type {ChunkId} */ (b.id));\n\n/**\n * @param {Module} a module\n * @param {Module} b module\n * @returns {-1|0|1} compare result\n */\nmodule.exports.compareModulesByIdentifier = (a, b) =>\n\tcompareIds(a.identifier(), b.identifier());\n\n/**\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @param {Module} a module\n * @param {Module} b module\n * @returns {-1|0|1} compare result\n */\nconst compareModulesById = (chunkGraph, a, b) =>\n\tcompareIds(\n\t\t/** @type {ModuleId} */ (chunkGraph.getModuleId(a)),\n\t\t/** @type {ModuleId} */ (chunkGraph.getModuleId(b))\n\t);\n/** @type {ParameterizedComparator<ChunkGraph, Module>} */\nmodule.exports.compareModulesById =\n\tcreateCachedParameterizedComparator(compareModulesById);\n\n/**\n * @param {number} a number\n * @param {number} b number\n * @returns {-1|0|1} compare result\n */\nconst compareNumbers = (a, b) => {\n\tif (typeof a !== typeof b) {\n\t\treturn typeof a < typeof b ? -1 : 1;\n\t}\n\tif (a < b) return -1;\n\tif (a > b) return 1;\n\treturn 0;\n};\nmodule.exports.compareNumbers = compareNumbers;\n\n/**\n * @param {string} a string\n * @param {string} b string\n * @returns {-1|0|1} compare result\n */\nconst compareStringsNumeric = (a, b) => {\n\tconst aLength = a.length;\n\tconst bLength = b.length;\n\n\tlet aChar = 0;\n\tlet bChar = 0;\n\n\tlet aIsDigit = false;\n\tlet bIsDigit = false;\n\tlet i = 0;\n\tlet j = 0;\n\twhile (i < aLength && j < bLength) {\n\t\taChar = a.charCodeAt(i);\n\t\tbChar = b.charCodeAt(j);\n\n\t\taIsDigit = aChar >= 48 && aChar <= 57;\n\t\tbIsDigit = bChar >= 48 && bChar <= 57;\n\n\t\tif (!aIsDigit && !bIsDigit) {\n\t\t\tif (aChar < bChar) return -1;\n\t\t\tif (aChar > bChar) return 1;\n\t\t\ti++;\n\t\t\tj++;\n\t\t} else if (aIsDigit && !bIsDigit) {\n\t\t\t// This segment of a is shorter than in b\n\t\t\treturn 1;\n\t\t} else if (!aIsDigit && bIsDigit) {\n\t\t\t// This segment of b is shorter than in a\n\t\t\treturn -1;\n\t\t} else {\n\t\t\tlet aNumber = aChar - 48;\n\t\t\tlet bNumber = bChar - 48;\n\n\t\t\twhile (++i < aLength) {\n\t\t\t\taChar = a.charCodeAt(i);\n\t\t\t\tif (aChar < 48 || aChar > 57) break;\n\t\t\t\taNumber = aNumber * 10 + aChar - 48;\n\t\t\t}\n\n\t\t\twhile (++j < bLength) {\n\t\t\t\tbChar = b.charCodeAt(j);\n\t\t\t\tif (bChar < 48 || bChar > 57) break;\n\t\t\t\tbNumber = bNumber * 10 + bChar - 48;\n\t\t\t}\n\n\t\t\tif (aNumber < bNumber) return -1;\n\t\t\tif (aNumber > bNumber) return 1;\n\t\t}\n\t}\n\n\tif (j < bLength) {\n\t\t// a is shorter than b\n\t\tbChar = b.charCodeAt(j);\n\t\tbIsDigit = bChar >= 48 && bChar <= 57;\n\t\treturn bIsDigit ? -1 : 1;\n\t}\n\tif (i < aLength) {\n\t\t// b is shorter than a\n\t\taChar = a.charCodeAt(i);\n\t\taIsDigit = aChar >= 48 && aChar <= 57;\n\t\treturn aIsDigit ? 1 : -1;\n\t}\n\n\treturn 0;\n};\nmodule.exports.compareStringsNumeric = compareStringsNumeric;\n\n/**\n * @param {ModuleGraph} moduleGraph the module graph\n * @param {Module} a module\n * @param {Module} b module\n * @returns {-1|0|1} compare result\n */\nconst compareModulesByPostOrderIndexOrIdentifier = (moduleGraph, a, b) => {\n\tconst cmp = compareNumbers(\n\t\t/** @type {number} */ (moduleGraph.getPostOrderIndex(a)),\n\t\t/** @type {number} */ (moduleGraph.getPostOrderIndex(b))\n\t);\n\tif (cmp !== 0) return cmp;\n\treturn compareIds(a.identifier(), b.identifier());\n};\n/** @type {ParameterizedComparator<ModuleGraph, Module>} */\nmodule.exports.compareModulesByPostOrderIndexOrIdentifier =\n\tcreateCachedParameterizedComparator(\n\t\tcompareModulesByPostOrderIndexOrIdentifier\n\t);\n\n/**\n * @param {ModuleGraph} moduleGraph the module graph\n * @param {Module} a module\n * @param {Module} b module\n * @returns {-1|0|1} compare result\n */\nconst compareModulesByPreOrderIndexOrIdentifier = (moduleGraph, a, b) => {\n\tconst cmp = compareNumbers(\n\t\t/** @type {number} */ (moduleGraph.getPreOrderIndex(a)),\n\t\t/** @type {number} */ (moduleGraph.getPreOrderIndex(b))\n\t);\n\tif (cmp !== 0) return cmp;\n\treturn compareIds(a.identifier(), b.identifier());\n};\n/** @type {ParameterizedComparator<ModuleGraph, Module>} */\nmodule.exports.compareModulesByPreOrderIndexOrIdentifier =\n\tcreateCachedParameterizedComparator(\n\t\tcompareModulesByPreOrderIndexOrIdentifier\n\t);\n\n/**\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @param {Module} a module\n * @param {Module} b module\n * @returns {-1|0|1} compare result\n */\nconst compareModulesByIdOrIdentifier = (chunkGraph, a, b) => {\n\tconst cmp = compareIds(\n\t\t/** @type {ModuleId} */ (chunkGraph.getModuleId(a)),\n\t\t/** @type {ModuleId} */ (chunkGraph.getModuleId(b))\n\t);\n\tif (cmp !== 0) return cmp;\n\treturn compareIds(a.identifier(), b.identifier());\n};\n/** @type {ParameterizedComparator<ChunkGraph, Module>} */\nmodule.exports.compareModulesByIdOrIdentifier =\n\tcreateCachedParameterizedComparator(compareModulesByIdOrIdentifier);\n\n/**\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @param {Chunk} a chunk\n * @param {Chunk} b chunk\n * @returns {-1|0|1} compare result\n */\nconst compareChunks = (chunkGraph, a, b) => chunkGraph.compareChunks(a, b);\n/** @type {ParameterizedComparator<ChunkGraph, Chunk>} */\nmodule.exports.compareChunks =\n\tcreateCachedParameterizedComparator(compareChunks);\n\n/**\n * @param {string|number} a first id\n * @param {string|number} b second id\n * @returns {-1|0|1} compare result\n */\nconst compareIds = (a, b) => {\n\tif (typeof a !== typeof b) {\n\t\treturn typeof a < typeof b ? -1 : 1;\n\t}\n\tif (a < b) return -1;\n\tif (a > b) return 1;\n\treturn 0;\n};\n\nmodule.exports.compareIds = compareIds;\n\n/**\n * @param {string} a first string\n * @param {string} b second string\n * @returns {-1|0|1} compare result\n */\nconst compareStrings = (a, b) => {\n\tif (a < b) return -1;\n\tif (a > b) return 1;\n\treturn 0;\n};\n\nmodule.exports.compareStrings = compareStrings;\n\n/**\n * @param {ChunkGroup} a first chunk group\n * @param {ChunkGroup} b second chunk group\n * @returns {-1|0|1} compare result\n */\nconst compareChunkGroupsByIndex = (a, b) =>\n\t/** @type {number} */ (a.index) < /** @type {number} */ (b.index) ? -1 : 1;\nmodule.exports.compareChunkGroupsByIndex = compareChunkGroupsByIndex;\n\n/**\n * @template K1 {Object}\n * @template K2\n * @template T\n */\nclass TwoKeyWeakMap {\n\tconstructor() {\n\t\t/**\n\t\t * @private\n\t\t * @type {WeakMap<any, WeakMap<any, T | undefined>>}\n\t\t */\n\t\tthis._map = new WeakMap();\n\t}\n\n\t/**\n\t * @param {K1} key1 first key\n\t * @param {K2} key2 second key\n\t * @returns {T | undefined} value\n\t */\n\tget(key1, key2) {\n\t\tconst childMap = this._map.get(key1);\n\t\tif (childMap === undefined) {\n\t\t\treturn;\n\t\t}\n\t\treturn childMap.get(key2);\n\t}\n\n\t/**\n\t * @param {K1} key1 first key\n\t * @param {K2} key2 second key\n\t * @param {T | undefined} value new value\n\t * @returns {void}\n\t */\n\tset(key1, key2, value) {\n\t\tlet childMap = this._map.get(key1);\n\t\tif (childMap === undefined) {\n\t\t\tchildMap = new WeakMap();\n\t\t\tthis._map.set(key1, childMap);\n\t\t}\n\t\tchildMap.set(key2, value);\n\t}\n}\n\n/** @type {TwoKeyWeakMap<Comparator<any>, Comparator<any>, Comparator<any>>}} */\nconst concatComparatorsCache = new TwoKeyWeakMap();\n\n/**\n * @template T\n * @param {Comparator<T>} c1 comparator\n * @param {Comparator<T>} c2 comparator\n * @param {Comparator<T>[]} cRest comparators\n * @returns {Comparator<T>} comparator\n */\nconst concatComparators = (c1, c2, ...cRest) => {\n\tif (cRest.length > 0) {\n\t\tconst [c3, ...cRest2] = cRest;\n\t\treturn concatComparators(c1, concatComparators(c2, c3, ...cRest2));\n\t}\n\tconst cacheEntry = /** @type {Comparator<T>} */ (\n\t\tconcatComparatorsCache.get(c1, c2)\n\t);\n\tif (cacheEntry !== undefined) return cacheEntry;\n\t/**\n\t * @param {T} a first value\n\t * @param {T} b second value\n\t * @returns {-1|0|1} compare result\n\t */\n\tconst result = (a, b) => {\n\t\tconst res = c1(a, b);\n\t\tif (res !== 0) return res;\n\t\treturn c2(a, b);\n\t};\n\tconcatComparatorsCache.set(c1, c2, result);\n\treturn result;\n};\nmodule.exports.concatComparators = concatComparators;\n\n/**\n * @template A, B\n * @typedef {(input: A) => B | undefined | null} Selector\n */\n\n/** @type {TwoKeyWeakMap<Selector<any, any>, Comparator<any>, Comparator<any>>}} */\nconst compareSelectCache = new TwoKeyWeakMap();\n\n/**\n * @template T\n * @template R\n * @param {Selector<T, R>} getter getter for value\n * @param {Comparator<R>} comparator comparator\n * @returns {Comparator<T>} comparator\n */\nconst compareSelect = (getter, comparator) => {\n\tconst cacheEntry = compareSelectCache.get(getter, comparator);\n\tif (cacheEntry !== undefined) return cacheEntry;\n\t/**\n\t * @param {T} a first value\n\t * @param {T} b second value\n\t * @returns {-1|0|1} compare result\n\t */\n\tconst result = (a, b) => {\n\t\tconst aValue = getter(a);\n\t\tconst bValue = getter(b);\n\t\tif (aValue !== undefined && aValue !== null) {\n\t\t\tif (bValue !== undefined && bValue !== null) {\n\t\t\t\treturn comparator(aValue, bValue);\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\t\tif (bValue !== undefined && bValue !== null) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t};\n\tcompareSelectCache.set(getter, comparator, result);\n\treturn result;\n};\nmodule.exports.compareSelect = compareSelect;\n\n/** @type {WeakMap<Comparator<any>, Comparator<Iterable<any>>>} */\nconst compareIteratorsCache = new WeakMap();\n\n/**\n * @template T\n * @param {Comparator<T>} elementComparator comparator for elements\n * @returns {Comparator<Iterable<T>>} comparator for iterables of elements\n */\nconst compareIterables = elementComparator => {\n\tconst cacheEntry = compareIteratorsCache.get(elementComparator);\n\tif (cacheEntry !== undefined) return cacheEntry;\n\t/**\n\t * @param {Iterable<T>} a first value\n\t * @param {Iterable<T>} b second value\n\t * @returns {-1|0|1} compare result\n\t */\n\tconst result = (a, b) => {\n\t\tconst aI = a[Symbol.iterator]();\n\t\tconst bI = b[Symbol.iterator]();\n\t\twhile (true) {\n\t\t\tconst aItem = aI.next();\n\t\t\tconst bItem = bI.next();\n\t\t\tif (aItem.done) {\n\t\t\t\treturn bItem.done ? 0 : -1;\n\t\t\t} else if (bItem.done) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tconst res = elementComparator(aItem.value, bItem.value);\n\t\t\tif (res !== 0) return res;\n\t\t}\n\t};\n\tcompareIteratorsCache.set(elementComparator, result);\n\treturn result;\n};\nmodule.exports.compareIterables = compareIterables;\n\n// TODO this is no longer needed when minimum node.js version is >= 12\n// since these versions ship with a stable sort function\n/**\n * @template T\n * @param {Iterable<T>} iterable original ordered list\n * @returns {Comparator<T>} comparator\n */\nmodule.exports.keepOriginalOrder = iterable => {\n\t/** @type {Map<T, number>} */\n\tconst map = new Map();\n\tlet i = 0;\n\tfor (const item of iterable) {\n\t\tmap.set(item, i++);\n\t}\n\treturn (a, b) =>\n\t\tcompareNumbers(\n\t\t\t/** @type {number} */ (map.get(a)),\n\t\t\t/** @type {number} */ (map.get(b))\n\t\t);\n};\n\n/**\n * @param {ChunkGraph} chunkGraph the chunk graph\n * @returns {Comparator<Chunk>} comparator\n */\nmodule.exports.compareChunksNatural = chunkGraph => {\n\tconst cmpFn = module.exports.compareModulesById(chunkGraph);\n\tconst cmpIterableFn = compareIterables(cmpFn);\n\treturn concatComparators(\n\t\tcompareSelect(\n\t\t\tchunk => /** @type {string|number} */ (chunk.name),\n\t\t\tcompareIds\n\t\t),\n\t\tcompareSelect(chunk => chunk.runtime, compareRuntime),\n\t\tcompareSelect(\n\t\t\t/**\n\t\t\t * @param {Chunk} chunk a chunk\n\t\t\t * @returns {Iterable<Module>} modules\n\t\t\t */\n\t\t\tchunk => chunkGraph.getOrderedChunkModulesIterable(chunk, cmpFn),\n\t\t\tcmpIterableFn\n\t\t)\n\t);\n};\n\n/**\n * Compare two locations\n * @param {DependencyLocation} a A location node\n * @param {DependencyLocation} b A location node\n * @returns {-1|0|1} sorting comparator value\n */\nmodule.exports.compareLocations = (a, b) => {\n\tconst isObjectA = typeof a === \"object\" && a !== null;\n\tconst isObjectB = typeof b === \"object\" && b !== null;\n\tif (!isObjectA || !isObjectB) {\n\t\tif (isObjectA) return 1;\n\t\tif (isObjectB) return -1;\n\t\treturn 0;\n\t}\n\tif (\"start\" in a) {\n\t\tif (\"start\" in b) {\n\t\t\tconst ap = a.start;\n\t\t\tconst bp = b.start;\n\t\t\tif (ap.line < bp.line) return -1;\n\t\t\tif (ap.line > bp.line) return 1;\n\t\t\tif (/** @type {number} */ (ap.column) < /** @type {number} */ (bp.column))\n\t\t\t\treturn -1;\n\t\t\tif (/** @type {number} */ (ap.column) > /** @type {number} */ (bp.column))\n\t\t\t\treturn 1;\n\t\t} else return -1;\n\t} else if (\"start\" in b) return 1;\n\tif (\"name\" in a) {\n\t\tif (\"name\" in b) {\n\t\t\tif (a.name < b.name) return -1;\n\t\t\tif (a.name > b.name) return 1;\n\t\t} else return -1;\n\t} else if (\"name\" in b) return 1;\n\tif (\"index\" in a) {\n\t\tif (\"index\" in b) {\n\t\t\tif (/** @type {number} */ (a.index) < /** @type {number} */ (b.index))\n\t\t\t\treturn -1;\n\t\t\tif (/** @type {number} */ (a.index) > /** @type {number} */ (b.index))\n\t\t\t\treturn 1;\n\t\t} else return -1;\n\t} else if (\"index\" in b) return 1;\n\treturn 0;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}