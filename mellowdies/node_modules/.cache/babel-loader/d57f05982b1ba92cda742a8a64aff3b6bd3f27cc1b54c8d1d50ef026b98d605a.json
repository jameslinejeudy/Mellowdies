{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elect\\\\Documents\\\\CIS\\\\4914\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Ai.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst menubackground = {/* styles remain unchanged */};\nconst generateButtonStyle = {/* styles remain unchanged */};\nconst descriptionBoxStyle = {/* styles remain unchanged */};\nconst backButtonStyle = {/* styles remain unchanged */};\nconst contentStyle = {/* styles remain unchanged */};\nfunction bufferToWave(abuffer, offset, len) {\n  var numOfChan = abuffer.numberOfChannels,\n    length = len * numOfChan * 2 + 44,\n    buffer = new ArrayBuffer(length),\n    view = new DataView(buffer),\n    channels = [],\n    i,\n    sample,\n    pos = 0;\n\n  // write WAVE header\n  setUint32(0x46464952); // \"RIFF\"\n  setUint32(length - 8); // file length - 8\n  setUint32(0x45564157); // \"WAVE\"\n\n  setUint32(0x20746d66); // \"fmt \" chunk\n  setUint32(16); // length = 16\n  setUint16(1); // PCM (uncompressed)\n  setUint16(numOfChan);\n  setUint32(abuffer.sampleRate);\n  setUint32(abuffer.sampleRate * 2 * numOfChan); // avg. bytes/sec\n  setUint16(numOfChan * 2); // block-align\n  setUint16(16); // 16-bit (hardcoded in this demo)\n\n  setUint32(0x61746164); // \"data\" - chunk\n  setUint32(length - pos - 4); // chunk length\n\n  // write interleaved data\n  for (i = 0; i < abuffer.numberOfChannels; i++) channels.push(abuffer.getChannelData(i));\n  while (pos < length) {\n    for (i = 0; i < numOfChan; i++) {\n      // interleave channels\n      sample = Math.max(-1, Math.min(1, channels[i][offset])); // clamp\n      sample = (0.5 + sample < 0 ? sample * 32768 : sample * 32767) | 0; // scale to 16-bit signed int\n      view.setInt16(pos, sample, true); // update data chunk\n      pos += 2;\n    }\n    offset++; // next source sample\n  }\n\n  // create Blob\n  return (URL || webkitURL).createObjectURL(new Blob([buffer], {\n    type: \"audio/wav\"\n  }));\n  function setUint16(data) {\n    view.setUint16(pos, data, true);\n    pos += 2;\n  }\n  function setUint32(data) {\n    view.setUint32(pos, data, true);\n    pos += 4;\n  }\n}\nfunction regionToSend(wavesurferRefs, regions) {\n  if (regions.getRegions().length === 0) {\n    alert(\"Please create a section first.\");\n    return;\n  }\n  const currRegion = regions.getRegions().at(0); // Assuming one region at a time\n  const length = currRegion.end - currRegion.start;\n  if (length > 15) {\n    alert(\"Section is too long, please limit to 15 seconds or less.\");\n    return;\n  }\n  const audioBuffer = wavesurferRefs.current[0].backend.buffer;\n  const wavFileURL = bufferToWave(audioBuffer, startTime * audioBuffer.sampleRate, (endTime - startTime) * audioBuffer.sampleRate);\n  console.log(wavFileURL);\n  return wavFileURL;\n}\n;\nfunction AIMenu({\n  handleBack,\n  wavesurferRefs,\n  regions\n}) {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [description, setDescription] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [progressMessage, setProgressMessage] = useState(null);\n  const [sendToAI, setSendToAI] = useState(false); // Checkbox state\n  var regionURL = \"\";\n  const handleGenerateMusic = async () => {\n    if (setSendToAI) {\n      regionURL = regionToSend(wavesurferRefs, regions);\n    }\n    setLoading(true);\n    setErrorMessage(null);\n    setProgressMessage(\"Connecting to the server...\");\n    try {\n      const response = await fetch(\"http://localhost:3001/api/generate-music\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          description,\n          regionURL\n        }) // Send checkbox value to server\n      });\n      if (!response.ok) {\n        throw new Error(\"Server failed to generate music.\");\n      }\n      setProgressMessage(\"Generating music on server...\");\n      const blob = await response.blob();\n      setProgressMessage(\"Downloading generated music file...\");\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `${description}_generated_music.wav`;\n\n      // Trigger download\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n      URL.revokeObjectURL(url);\n      setProgressMessage(\"Download complete. Check your Downloads folder.\");\n    } catch (error) {\n      console.error(\"Error during music generation or download:\", error);\n      setErrorMessage(`Failed to generate or download music: ${error.message}`);\n      setProgressMessage(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: menubackground,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: contentStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI Music Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 26\n      }, this), progressMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"blue\"\n        },\n        children: progressMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        style: descriptionBoxStyle,\n        placeholder: \"Describe your music...\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: sendToAI,\n            onChange: e => setSendToAI(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), \"Send selected music region to AI\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: generateButtonStyle,\n        onClick: handleGenerateMusic,\n        disabled: loading,\n        children: loading ? \"Processing...\" : \"Generate Music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: backButtonStyle,\n        onClick: handleBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(AIMenu, \"ptwJ39U0wz8VqpdqAwP3IbubKGE=\");\n_c = AIMenu;\nexport default AIMenu;\nvar _c;\n$RefreshReg$(_c, \"AIMenu\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","menubackground","generateButtonStyle","descriptionBoxStyle","backButtonStyle","contentStyle","bufferToWave","abuffer","offset","len","numOfChan","numberOfChannels","length","buffer","ArrayBuffer","view","DataView","channels","i","sample","pos","setUint32","setUint16","sampleRate","push","getChannelData","Math","max","min","setInt16","URL","webkitURL","createObjectURL","Blob","type","data","regionToSend","wavesurferRefs","regions","getRegions","alert","currRegion","at","end","start","audioBuffer","current","backend","wavFileURL","startTime","endTime","console","log","AIMenu","handleBack","_s","loading","setLoading","description","setDescription","errorMessage","setErrorMessage","progressMessage","setProgressMessage","sendToAI","setSendToAI","regionURL","handleGenerateMusic","response","fetch","method","headers","body","JSON","stringify","ok","Error","blob","url","a","document","createElement","href","download","appendChild","click","remove","revokeObjectURL","error","message","style","children","fileName","_jsxFileName","lineNumber","columnNumber","color","placeholder","value","onChange","e","target","checked","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/elect/Documents/CIS/4914/Mellowdies/mellowdies/src/Landingpage/Ai.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst menubackground = { /* styles remain unchanged */ };\r\nconst generateButtonStyle = { /* styles remain unchanged */ };\r\nconst descriptionBoxStyle = { /* styles remain unchanged */ };\r\nconst backButtonStyle = { /* styles remain unchanged */ };\r\nconst contentStyle = { /* styles remain unchanged */ };\r\n\r\nfunction bufferToWave(abuffer, offset, len) {\r\n\r\n  var numOfChan = abuffer.numberOfChannels,\r\n      length = len * numOfChan * 2 + 44,\r\n      buffer = new ArrayBuffer(length),\r\n      view = new DataView(buffer),\r\n      channels = [], i, sample,\r\n      pos = 0;\r\n\r\n  // write WAVE header\r\n  setUint32(0x46464952);                         // \"RIFF\"\r\n  setUint32(length - 8);                         // file length - 8\r\n  setUint32(0x45564157);                         // \"WAVE\"\r\n\r\n  setUint32(0x20746d66);                         // \"fmt \" chunk\r\n  setUint32(16);                                 // length = 16\r\n  setUint16(1);                                  // PCM (uncompressed)\r\n  setUint16(numOfChan);\r\n  setUint32(abuffer.sampleRate);\r\n  setUint32(abuffer.sampleRate * 2 * numOfChan); // avg. bytes/sec\r\n  setUint16(numOfChan * 2);                      // block-align\r\n  setUint16(16);                                 // 16-bit (hardcoded in this demo)\r\n\r\n  setUint32(0x61746164);                         // \"data\" - chunk\r\n  setUint32(length - pos - 4);                   // chunk length\r\n\r\n  // write interleaved data\r\n  for(i = 0; i < abuffer.numberOfChannels; i++)\r\n    channels.push(abuffer.getChannelData(i));\r\n\r\n  while(pos < length) {\r\n    for(i = 0; i < numOfChan; i++) {             // interleave channels\r\n      sample = Math.max(-1, Math.min(1, channels[i][offset])); // clamp\r\n      sample = (0.5 + sample < 0 ? sample * 32768 : sample * 32767)|0; // scale to 16-bit signed int\r\n      view.setInt16(pos, sample, true);          // update data chunk\r\n      pos += 2;\r\n    }\r\n    offset++                                     // next source sample\r\n  }\r\n\r\n  // create Blob\r\n  return (URL || webkitURL).createObjectURL(new Blob([buffer], {type: \"audio/wav\"}));\r\n\r\n  function setUint16(data) {\r\n    view.setUint16(pos, data, true);\r\n    pos += 2;\r\n  }\r\n\r\n  function setUint32(data) {\r\n    view.setUint32(pos, data, true);\r\n    pos += 4;\r\n  }\r\n}\r\n\r\nfunction regionToSend(wavesurferRefs, regions) {\r\n  if (regions.getRegions().length === 0) {\r\n      alert(\"Please create a section first.\");\r\n      return;\r\n  }\r\n\r\n  const currRegion = regions.getRegions().at(0); // Assuming one region at a time\r\n  const length = currRegion.end - currRegion.start;\r\n  if (length > 15) {\r\n      alert(\"Section is too long, please limit to 15 seconds or less.\");\r\n      return;\r\n  }\r\n  const audioBuffer = wavesurferRefs.current[0].backend.buffer;\r\n  const wavFileURL = bufferToWave(audioBuffer, startTime * audioBuffer.sampleRate, (endTime - startTime) * audioBuffer.sampleRate);\r\n  console.log(wavFileURL);\r\n  return wavFileURL;\r\n};\r\n\r\nfunction AIMenu({ handleBack, wavesurferRefs, regions }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [progressMessage, setProgressMessage] = useState(null);\r\n  const [sendToAI, setSendToAI] = useState(false);  // Checkbox state\r\n  var regionURL = \"\";\r\n\r\n  const handleGenerateMusic = async () => {\r\n\r\n    if (setSendToAI) {\r\n      regionURL = regionToSend(wavesurferRefs, regions);\r\n    }\r\n\r\n    setLoading(true);\r\n    setErrorMessage(null);\r\n    setProgressMessage(\"Connecting to the server...\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:3001/api/generate-music\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ description, regionURL }),  // Send checkbox value to server\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Server failed to generate music.\");\r\n      }\r\n\r\n      setProgressMessage(\"Generating music on server...\");\r\n\r\n      const blob = await response.blob();\r\n      setProgressMessage(\"Downloading generated music file...\");\r\n\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.download = `${description}_generated_music.wav`;\r\n\r\n      // Trigger download\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      a.remove();\r\n      URL.revokeObjectURL(url);\r\n\r\n      setProgressMessage(\"Download complete. Check your Downloads folder.\");\r\n    } catch (error) {\r\n      console.error(\"Error during music generation or download:\", error);\r\n      setErrorMessage(`Failed to generate or download music: ${error.message}`);\r\n      setProgressMessage(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={menubackground}>\r\n      <div style={contentStyle}>\r\n        <h1>AI Music Generator</h1>\r\n        {errorMessage && <div style={{ color: \"red\" }}>{errorMessage}</div>}\r\n        {progressMessage && <div style={{ color: \"blue\" }}>{progressMessage}</div>}\r\n        <textarea\r\n          style={descriptionBoxStyle}\r\n          placeholder=\"Describe your music...\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <div>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={sendToAI}\r\n              onChange={(e) => setSendToAI(e.target.checked)}\r\n            />\r\n            Send selected music region to AI\r\n          </label>\r\n        </div>\r\n        <button style={generateButtonStyle} onClick={handleGenerateMusic} disabled={loading}>\r\n          {loading ? \"Processing...\" : \"Generate Music\"}\r\n        </button>\r\n        <button style={backButtonStyle} onClick={handleBack}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AIMenu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}