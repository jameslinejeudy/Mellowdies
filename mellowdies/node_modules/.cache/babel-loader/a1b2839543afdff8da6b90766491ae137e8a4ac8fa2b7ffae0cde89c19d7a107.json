{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elect\\\\Documents\\\\CIS\\\\4914\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Landingpage.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport RegionsPlugin from \"wavesurfer.js/dist/plugins/regions.js\";\nimport { useLocation } from 'react-router-dom';\nimport Sidebar from './Sidebar.js';\nimport cloud from '../images/cloud.png';\nimport PlayButton from './PlayButton.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst controller = new AbortController();\nconst signal = controller.signal;\nvar toWav = require('audiobuffer-to-wav');\nconst pagebackground = {\n  backgroundSize: 'cover',\n  backgroundImage: `url(${cloud})`,\n  backgroundPosition: 'center',\n  padding: '10px',\n  height: '100vh',\n  margin: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  fontFamily: 'Concert One'\n};\nconst musicbackground = {\n  width: '75%',\n  height: '80%',\n  position: 'fixed',\n  top: '0',\n  right: '0',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'flex-start',\n  alignItems: 'left',\n  backgroundColor: 'rgba(255, 255, 255, 0.3)',\n  marginTop: '5px',\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\n  overflowY: 'auto',\n  padding: '10px'\n};\nconst trackNameStyle = {\n  position: 'relative',\n  color: '#000000',\n  fontSize: '0.8rem',\n  zIndex: '1002',\n  padding: '5px',\n  borderRadius: '5px',\n  backgroundColor: 'rgba(255, 255, 255, 0.7)'\n};\nconst waveformStyle = {\n  width: '100%',\n  height: '75px',\n  position: 'relative',\n  marginBottom: '20px'\n};\nfunction Landingpage() {\n  _s();\n  const wavesurferRefs = useRef([]);\n  const location = useLocation();\n  const {\n    audioFiles\n  } = location.state || {\n    audioFiles: []\n  };\n  const [isReady, setIsReady] = useState(false);\n  const [speed, setSpeed] = useState(1);\n  const [progress, setProgress] = useState(0);\n  const containerRefs = useRef([]);\n  const regions = RegionsPlugin.create();\n  var regionURL = \"\";\n  const initializeWaveSurfer = () => {\n    wavesurferRefs.current = [];\n    if (audioFiles && audioFiles.length > 0) {\n      audioFiles.forEach((file, index) => {\n        const container = containerRefs.current[index];\n        if (!container) {\n          console.error(`Container for index ${index} not found`);\n          return;\n        }\n        const waveSurfer = WaveSurfer.create({\n          container: container,\n          // Safely use the container\n          waveColor: 'blue',\n          progressColor: '#00FFFF',\n          height: 75,\n          backend: 'MediaElement',\n          plugins: [regions]\n        });\n        waveSurfer.load(file.url).catch(error => console.log(error));\n        waveSurfer.on('ready', () => {\n          setIsReady(true);\n          const buffer = waveSurfer.getDecodedData();\n          // console.log(buffer);\n\n          let channel0Peaks = buffer.getChannelData(0);\n          console.log('channel0Peaks : ', channel0Peaks);\n          let channel1Peaks = buffer.getChannelData(1);\n          console.log('channel1Peaks : ', channel1Peaks);\n          console.log('buffer length : ', buffer.length);\n          console.log('buffer duration : ', buffer.duration);\n          console.log('buffer sampleRate : ', buffer.sampleRate);\n          console.log('buffer numberOfChannels : ', buffer.numberOfChannels);\n        });\n        waveSurfer.on('audioprocess', () => {\n          setProgress(waveSurfer.getCurrentTime() / waveSurfer.getDuration() * 100);\n        });\n        waveSurfer.on('seek', progress => {\n          setProgress(progress * 100);\n        });\n        regions.on('region-created', region => {\n          regions.getRegions().forEach(r => {\n            if (r.id !== region.id) {\n              r.remove();\n            }\n          });\n        });\n        regions.on('region-clicked', (region, e) => {\n          e.stopPropagation();\n          const buffer = waveSurfer.getDecodedData();\n          regionURL = (URL || webkitURL).createObjectURL(new Blob([toWav(buffer)], {\n            type: \"audio/wav\"\n          }));\n        });\n        regions.enableDragSelection({\n          color: 'rgba(245, 137, 5, 0.4)'\n        });\n        wavesurferRefs.current[index] = waveSurfer;\n      });\n    }\n  };\n  const scheduleWaveSurferInitialization = () => {\n    setTimeout(() => initializeWaveSurfer(), 100); // Small delay\n  };\n  if (audioFiles && audioFiles.length > 0 && wavesurferRefs.current.length === 0) {\n    scheduleWaveSurferInitialization();\n  }\n  const handlePlaybackRateChange = rate => {\n    setSpeed(rate);\n    wavesurferRefs.current.forEach(waveSurfer => waveSurfer.setPlaybackRate(rate));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: pagebackground,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: musicbackground,\n      children: audioFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: waveformStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: trackNameStyle,\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: el => containerRefs.current[index] = el,\n          style: {\n            width: '100%',\n            height: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      regionURL: regionURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), audioFiles && audioFiles.length > 0 ? /*#__PURE__*/_jsxDEV(PlayButton, {\n      playAllTracks: () => wavesurferRefs.current.forEach(waveSurfer => waveSurfer.playPause()),\n      forwardAllTracks: () => {\n        wavesurferRefs.current.forEach(waveSurfer => {\n          const currentTime = waveSurfer.getCurrentTime();\n          const duration = waveSurfer.getDuration();\n          waveSurfer.seekTo((currentTime + 5) / duration);\n        });\n      },\n      backwardAllTracks: () => {\n        wavesurferRefs.current.forEach(waveSurfer => {\n          const currentTime = waveSurfer.getCurrentTime();\n          waveSurfer.seekTo(Math.max((currentTime - 5) / waveSurfer.getDuration(), 0));\n        });\n      },\n      seekAllTracks: seekTo => wavesurferRefs.current.forEach(waveSurfer => waveSurfer.seekTo(seekTo)),\n      changeSpeedAllTracks: handlePlaybackRateChange,\n      isReady: isReady,\n      speed: speed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No audio tracks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n}\n_s(Landingpage, \"kA/gkhyJrp/KKR5rWILX+yPdPBM=\", false, function () {\n  return [useLocation];\n});\n_c = Landingpage;\nexport default Landingpage;\nvar _c;\n$RefreshReg$(_c, \"Landingpage\");","map":{"version":3,"names":["React","useRef","useState","WaveSurfer","RegionsPlugin","useLocation","Sidebar","cloud","PlayButton","jsxDEV","_jsxDEV","controller","AbortController","signal","toWav","require","pagebackground","backgroundSize","backgroundImage","backgroundPosition","padding","height","margin","display","flexDirection","fontFamily","musicbackground","width","position","top","right","justifyContent","alignItems","backgroundColor","marginTop","boxShadow","overflowY","trackNameStyle","color","fontSize","zIndex","borderRadius","waveformStyle","marginBottom","Landingpage","_s","wavesurferRefs","location","audioFiles","state","isReady","setIsReady","speed","setSpeed","progress","setProgress","containerRefs","regions","create","regionURL","initializeWaveSurfer","current","length","forEach","file","index","container","console","error","waveSurfer","waveColor","progressColor","backend","plugins","load","url","catch","log","on","buffer","getDecodedData","channel0Peaks","getChannelData","channel1Peaks","duration","sampleRate","numberOfChannels","getCurrentTime","getDuration","region","getRegions","r","id","remove","e","stopPropagation","URL","webkitURL","createObjectURL","Blob","type","enableDragSelection","scheduleWaveSurferInitialization","setTimeout","handlePlaybackRateChange","rate","setPlaybackRate","style","children","map","name","fileName","_jsxFileName","lineNumber","columnNumber","ref","el","playAllTracks","playPause","forwardAllTracks","currentTime","seekTo","backwardAllTracks","Math","max","seekAllTracks","changeSpeedAllTracks","_c","$RefreshReg$"],"sources":["C:/Users/elect/Documents/CIS/4914/Mellowdies/mellowdies/src/Landingpage/Landingpage.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport RegionsPlugin from \"wavesurfer.js/dist/plugins/regions.js\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport Sidebar from './Sidebar.js';\r\nimport cloud from '../images/cloud.png';\r\nimport PlayButton from './PlayButton.js';\r\n\r\nconst controller = new AbortController();\r\nconst signal = controller.signal;\r\nvar toWav = require('audiobuffer-to-wav');\r\n\r\nconst pagebackground = {\r\n    backgroundSize: 'cover',\r\n    backgroundImage: `url(${cloud})`,\r\n    backgroundPosition: 'center',\r\n    padding: '10px',\r\n    height: '100vh',\r\n    margin: 0,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    fontFamily: 'Concert One',\r\n};\r\n\r\nconst musicbackground = {\r\n    width: '75%',\r\n    height: '80%',\r\n    position: 'fixed',\r\n    top: '0',\r\n    right: '0',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'left',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.3)',\r\n    marginTop: '5px',\r\n    boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\r\n    overflowY: 'auto',\r\n    padding: '10px',\r\n};\r\n\r\nconst trackNameStyle = {\r\n    position: 'relative',\r\n    color: '#000000',\r\n    fontSize: '0.8rem',\r\n    zIndex: '1002',\r\n    padding: '5px',\r\n    borderRadius: '5px',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.7)',\r\n};\r\n\r\nconst waveformStyle = {\r\n    width: '100%',\r\n    height: '75px',\r\n    position: 'relative',\r\n    marginBottom: '20px',\r\n}; \r\n\r\nfunction Landingpage() {\r\n    const wavesurferRefs = useRef([]);\r\n    const location = useLocation();\r\n    const { audioFiles } = location.state || { audioFiles: [] };\r\n    const [isReady, setIsReady] = useState(false);\r\n    const [speed, setSpeed] = useState(1);\r\n    const [progress, setProgress] = useState(0);\r\n    const containerRefs = useRef([]);\r\n    const regions = RegionsPlugin.create();\r\n    var regionURL = \"\";\r\n\r\n    const initializeWaveSurfer = () => {\r\n        wavesurferRefs.current = [];\r\n    \r\n        if (audioFiles && audioFiles.length > 0) {\r\n            audioFiles.forEach((file, index) => {\r\n                const container = containerRefs.current[index];\r\n                if (!container) {\r\n                    console.error(`Container for index ${index} not found`);\r\n                    return;\r\n                }\r\n    \r\n                const waveSurfer = WaveSurfer.create({\r\n                    container: container, // Safely use the container\r\n                    waveColor: 'blue',\r\n                    progressColor: '#00FFFF',\r\n                    height: 75,\r\n                    backend: 'MediaElement',\r\n                    plugins: [regions],\r\n                });\r\n\r\n                waveSurfer.load(file.url).catch(error => console.log(error));\r\n    \r\n                waveSurfer.on('ready', () => {setIsReady(true);\r\n                    const buffer = waveSurfer.getDecodedData();\r\n                    // console.log(buffer);\r\n        \r\n                    let channel0Peaks = buffer.getChannelData(0);\r\n                    console.log('channel0Peaks : ', channel0Peaks);\r\n        \r\n                    let channel1Peaks = buffer.getChannelData(1);\r\n                    console.log('channel1Peaks : ', channel1Peaks);\r\n        \r\n                    console.log('buffer length : ', buffer.length);\r\n                    console.log('buffer duration : ', buffer.duration);\r\n                    console.log('buffer sampleRate : ', buffer.sampleRate);\r\n                    console.log('buffer numberOfChannels : ', buffer.numberOfChannels);});\r\n    \r\n                waveSurfer.on('audioprocess', () => {\r\n                    setProgress(waveSurfer.getCurrentTime() / waveSurfer.getDuration() * 100);\r\n                });\r\n    \r\n                waveSurfer.on('seek', (progress) => {\r\n                    setProgress(progress * 100);\r\n                });\r\n    \r\n                regions.on('region-created', (region) => {\r\n                    regions.getRegions().forEach((r) => {\r\n                        if (r.id !== region.id) {\r\n                            r.remove();\r\n                        }\r\n                    });\r\n                });\r\n    \r\n                regions.on('region-clicked', (region, e) => {\r\n                    e.stopPropagation();\r\n                    const buffer = waveSurfer.getDecodedData();\r\n                    regionURL = (URL || webkitURL).createObjectURL(new Blob([toWav(buffer)], {type: \"audio/wav\"}));\r\n                });\r\n    \r\n                regions.enableDragSelection({\r\n                    color: 'rgba(245, 137, 5, 0.4)',\r\n                });\r\n    \r\n                wavesurferRefs.current[index] = waveSurfer;\r\n            });\r\n        }\r\n    };\r\n\r\n    const scheduleWaveSurferInitialization = () => {\r\n        setTimeout(() => initializeWaveSurfer(), 100); // Small delay\r\n    };\r\n\r\n    if (audioFiles && audioFiles.length > 0 && wavesurferRefs.current.length === 0) {\r\n        scheduleWaveSurferInitialization();\r\n    }\r\n\r\n    const handlePlaybackRateChange = (rate) => {\r\n        setSpeed(rate);\r\n        wavesurferRefs.current.forEach(waveSurfer => waveSurfer.setPlaybackRate(rate));\r\n    };\r\n\r\n    return (\r\n        <div style={pagebackground}>\r\n            <div style={musicbackground}>\r\n                {audioFiles.map((file, index) => (\r\n                    <div key={index} style={waveformStyle}>\r\n                        <div style={trackNameStyle}>{file.name}</div>\r\n                        <div ref={el => containerRefs.current[index] = el} style={{ width: '100%', height: '100%' }}></div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <Sidebar regionURL = {regionURL}/>\r\n\r\n            {audioFiles && audioFiles.length > 0 ? (\r\n                <PlayButton\r\n                    playAllTracks={() => wavesurferRefs.current.forEach(waveSurfer => waveSurfer.playPause())}\r\n                    forwardAllTracks={() => {\r\n                        wavesurferRefs.current.forEach(waveSurfer => {\r\n                            const currentTime = waveSurfer.getCurrentTime();\r\n                            const duration = waveSurfer.getDuration();\r\n                            waveSurfer.seekTo((currentTime + 5) / duration);\r\n                        });\r\n                    }}\r\n                    backwardAllTracks={() => {\r\n                        wavesurferRefs.current.forEach(waveSurfer => {\r\n                            const currentTime = waveSurfer.getCurrentTime();\r\n                            waveSurfer.seekTo(Math.max((currentTime - 5) / waveSurfer.getDuration(), 0));\r\n                        });\r\n                    }}\r\n                    seekAllTracks={(seekTo) => wavesurferRefs.current.forEach(waveSurfer => waveSurfer.seekTo(seekTo))}\r\n                    changeSpeedAllTracks={handlePlaybackRateChange}\r\n                    isReady={isReady}\r\n                    speed={speed}\r\n                />\r\n            ) : (\r\n                <p>No audio tracks available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Landingpage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}