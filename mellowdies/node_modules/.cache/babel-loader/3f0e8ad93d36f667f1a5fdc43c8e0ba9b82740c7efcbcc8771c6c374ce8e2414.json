{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../Module\").RuntimeRequirements} RuntimeRequirements */\n/** @typedef {\"exports\" | \"module.exports\" | \"this\" | \"Object.defineProperty(exports)\" | \"Object.defineProperty(module.exports)\" | \"Object.defineProperty(this)\"} CommonJSDependencyBaseKeywords */\n\n/**\n * @param {CommonJSDependencyBaseKeywords} depBase commonjs dependency base\n * @param {Module} module module\n * @param {RuntimeRequirements} runtimeRequirements runtime requirements\n * @returns {[string, string]} type and base\n */\nmodule.exports.handleDependencyBase = (depBase, module, runtimeRequirements) => {\n  let base;\n  let type;\n  switch (depBase) {\n    case \"exports\":\n      runtimeRequirements.add(RuntimeGlobals.exports);\n      base = module.exportsArgument;\n      type = \"expression\";\n      break;\n    case \"module.exports\":\n      runtimeRequirements.add(RuntimeGlobals.module);\n      base = `${module.moduleArgument}.exports`;\n      type = \"expression\";\n      break;\n    case \"this\":\n      runtimeRequirements.add(RuntimeGlobals.thisAsExports);\n      base = \"this\";\n      type = \"expression\";\n      break;\n    case \"Object.defineProperty(exports)\":\n      runtimeRequirements.add(RuntimeGlobals.exports);\n      base = module.exportsArgument;\n      type = \"Object.defineProperty\";\n      break;\n    case \"Object.defineProperty(module.exports)\":\n      runtimeRequirements.add(RuntimeGlobals.module);\n      base = `${module.moduleArgument}.exports`;\n      type = \"Object.defineProperty\";\n      break;\n    case \"Object.defineProperty(this)\":\n      runtimeRequirements.add(RuntimeGlobals.thisAsExports);\n      base = \"this\";\n      type = \"Object.defineProperty\";\n      break;\n    default:\n      throw new Error(`Unsupported base ${depBase}`);\n  }\n  return [type, base];\n};","map":{"version":3,"names":["RuntimeGlobals","require","module","exports","handleDependencyBase","depBase","runtimeRequirements","base","type","add","exportsArgument","moduleArgument","thisAsExports","Error"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/node_modules/webpack/lib/dependencies/CommonJsDependencyHelpers.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../Module\").RuntimeRequirements} RuntimeRequirements */\n/** @typedef {\"exports\" | \"module.exports\" | \"this\" | \"Object.defineProperty(exports)\" | \"Object.defineProperty(module.exports)\" | \"Object.defineProperty(this)\"} CommonJSDependencyBaseKeywords */\n\n/**\n * @param {CommonJSDependencyBaseKeywords} depBase commonjs dependency base\n * @param {Module} module module\n * @param {RuntimeRequirements} runtimeRequirements runtime requirements\n * @returns {[string, string]} type and base\n */\nmodule.exports.handleDependencyBase = (\n\tdepBase,\n\tmodule,\n\truntimeRequirements\n) => {\n\tlet base;\n\tlet type;\n\tswitch (depBase) {\n\t\tcase \"exports\":\n\t\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\t\tbase = module.exportsArgument;\n\t\t\ttype = \"expression\";\n\t\t\tbreak;\n\t\tcase \"module.exports\":\n\t\t\truntimeRequirements.add(RuntimeGlobals.module);\n\t\t\tbase = `${module.moduleArgument}.exports`;\n\t\t\ttype = \"expression\";\n\t\t\tbreak;\n\t\tcase \"this\":\n\t\t\truntimeRequirements.add(RuntimeGlobals.thisAsExports);\n\t\t\tbase = \"this\";\n\t\t\ttype = \"expression\";\n\t\t\tbreak;\n\t\tcase \"Object.defineProperty(exports)\":\n\t\t\truntimeRequirements.add(RuntimeGlobals.exports);\n\t\t\tbase = module.exportsArgument;\n\t\t\ttype = \"Object.defineProperty\";\n\t\t\tbreak;\n\t\tcase \"Object.defineProperty(module.exports)\":\n\t\t\truntimeRequirements.add(RuntimeGlobals.module);\n\t\t\tbase = `${module.moduleArgument}.exports`;\n\t\t\ttype = \"Object.defineProperty\";\n\t\t\tbreak;\n\t\tcase \"Object.defineProperty(this)\":\n\t\t\truntimeRequirements.add(RuntimeGlobals.thisAsExports);\n\t\t\tbase = \"this\";\n\t\t\ttype = \"Object.defineProperty\";\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new Error(`Unsupported base ${depBase}`);\n\t}\n\n\treturn [type, base];\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAmB,CAAC;;AAEnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,CAACC,oBAAoB,GAAG,CACrCC,OAAO,EACPH,MAAM,EACNI,mBAAmB,KACf;EACJ,IAAIC,IAAI;EACR,IAAIC,IAAI;EACR,QAAQH,OAAO;IACd,KAAK,SAAS;MACbC,mBAAmB,CAACG,GAAG,CAACT,cAAc,CAACG,OAAO,CAAC;MAC/CI,IAAI,GAAGL,MAAM,CAACQ,eAAe;MAC7BF,IAAI,GAAG,YAAY;MACnB;IACD,KAAK,gBAAgB;MACpBF,mBAAmB,CAACG,GAAG,CAACT,cAAc,CAACE,MAAM,CAAC;MAC9CK,IAAI,GAAG,GAAGL,MAAM,CAACS,cAAc,UAAU;MACzCH,IAAI,GAAG,YAAY;MACnB;IACD,KAAK,MAAM;MACVF,mBAAmB,CAACG,GAAG,CAACT,cAAc,CAACY,aAAa,CAAC;MACrDL,IAAI,GAAG,MAAM;MACbC,IAAI,GAAG,YAAY;MACnB;IACD,KAAK,gCAAgC;MACpCF,mBAAmB,CAACG,GAAG,CAACT,cAAc,CAACG,OAAO,CAAC;MAC/CI,IAAI,GAAGL,MAAM,CAACQ,eAAe;MAC7BF,IAAI,GAAG,uBAAuB;MAC9B;IACD,KAAK,uCAAuC;MAC3CF,mBAAmB,CAACG,GAAG,CAACT,cAAc,CAACE,MAAM,CAAC;MAC9CK,IAAI,GAAG,GAAGL,MAAM,CAACS,cAAc,UAAU;MACzCH,IAAI,GAAG,uBAAuB;MAC9B;IACD,KAAK,6BAA6B;MACjCF,mBAAmB,CAACG,GAAG,CAACT,cAAc,CAACY,aAAa,CAAC;MACrDL,IAAI,GAAG,MAAM;MACbC,IAAI,GAAG,uBAAuB;MAC9B;IACD;MACC,MAAM,IAAIK,KAAK,CAAC,oBAAoBR,OAAO,EAAE,CAAC;EAChD;EAEA,OAAO,CAACG,IAAI,EAAED,IAAI,CAAC;AACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}