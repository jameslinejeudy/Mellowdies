{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst util = require(\"util\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").RuleSetLoader} RuleSetLoader */\n/** @typedef {import(\"../../declarations/WebpackOptions\").RuleSetLoaderOptions} RuleSetLoaderOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").RuleSetRule} RuleSetRule */\n/** @typedef {import(\"./RuleSetCompiler\")} RuleSetCompiler */\n/** @typedef {import(\"./RuleSetCompiler\").Effect} Effect */\n\nclass UseEffectRulePlugin {\n  /**\n   * @param {RuleSetCompiler} ruleSetCompiler the rule set compiler\n   * @returns {void}\n   */\n  apply(ruleSetCompiler) {\n    ruleSetCompiler.hooks.rule.tap(\"UseEffectRulePlugin\", (path, rule, unhandledProperties, result, references) => {\n      /**\n       * @param {keyof RuleSetRule} property property\n       * @param {string} correctProperty correct property\n       */\n      const conflictWith = (property, correctProperty) => {\n        if (unhandledProperties.has(property)) {\n          throw ruleSetCompiler.error(`${path}.${property}`, rule[property], `A Rule must not have a '${property}' property when it has a '${correctProperty}' property`);\n        }\n      };\n      if (unhandledProperties.has(\"use\")) {\n        unhandledProperties.delete(\"use\");\n        unhandledProperties.delete(\"enforce\");\n        conflictWith(\"loader\", \"use\");\n        conflictWith(\"options\", \"use\");\n        const use = rule.use;\n        const enforce = rule.enforce;\n        const type = enforce ? `use-${enforce}` : \"use\";\n\n        /**\n         * @param {string} path options path\n         * @param {string} defaultIdent default ident when none is provided\n         * @param {object} item user provided use value\n         * @returns {Effect|function(any): Effect[]} effect\n         */\n        const useToEffect = (path, defaultIdent, item) => {\n          if (typeof item === \"function\") {\n            return data => useToEffectsWithoutIdent(path, item(data));\n          }\n          return useToEffectRaw(path, defaultIdent, item);\n        };\n\n        /**\n         * @param {string} path options path\n         * @param {string} defaultIdent default ident when none is provided\n         * @param {{ ident?: string, loader?: RuleSetLoader, options?: RuleSetLoaderOptions }} item user provided use value\n         * @returns {Effect} effect\n         */\n        const useToEffectRaw = (path, defaultIdent, item) => {\n          if (typeof item === \"string\") {\n            return {\n              type,\n              value: {\n                loader: item,\n                options: undefined,\n                ident: undefined\n              }\n            };\n          }\n          const loader = item.loader;\n          const options = item.options;\n          let ident = item.ident;\n          if (options && typeof options === \"object\") {\n            if (!ident) ident = defaultIdent;\n            references.set(ident, options);\n          }\n          if (typeof options === \"string\") {\n            util.deprecate(() => {}, `Using a string as loader options is deprecated (${path}.options)`, \"DEP_WEBPACK_RULE_LOADER_OPTIONS_STRING\")();\n          }\n          return {\n            type: enforce ? `use-${enforce}` : \"use\",\n            value: {\n              loader,\n              options,\n              ident\n            }\n          };\n        };\n\n        /**\n         * @param {string} path options path\n         * @param {any} items user provided use value\n         * @returns {Effect[]} effects\n         */\n        const useToEffectsWithoutIdent = (path, items) => {\n          if (Array.isArray(items)) {\n            return items.filter(Boolean).map((item, idx) => useToEffectRaw(`${path}[${idx}]`, \"[[missing ident]]\", item));\n          }\n          return [useToEffectRaw(path, \"[[missing ident]]\", items)];\n        };\n\n        /**\n         * @param {string} path current path\n         * @param {any} items user provided use value\n         * @returns {(Effect|function(any): Effect[])[]} effects\n         */\n        const useToEffects = (path, items) => {\n          if (Array.isArray(items)) {\n            return items.filter(Boolean).map((item, idx) => {\n              const subPath = `${path}[${idx}]`;\n              return useToEffect(subPath, subPath, item);\n            });\n          }\n          return [useToEffect(path, path, items)];\n        };\n        if (typeof use === \"function\") {\n          result.effects.push(data => useToEffectsWithoutIdent(`${path}.use`, use(/** @type {TODO} */data)));\n        } else {\n          for (const effect of useToEffects(`${path}.use`, use)) {\n            result.effects.push(effect);\n          }\n        }\n      }\n      if (unhandledProperties.has(\"loader\")) {\n        unhandledProperties.delete(\"loader\");\n        unhandledProperties.delete(\"options\");\n        unhandledProperties.delete(\"enforce\");\n        const loader = /** @type {RuleSetLoader} */rule.loader;\n        const options = rule.options;\n        const enforce = rule.enforce;\n        if (loader.includes(\"!\")) {\n          throw ruleSetCompiler.error(`${path}.loader`, loader, \"Exclamation mark separated loader lists has been removed in favor of the 'use' property with arrays\");\n        }\n        if (loader.includes(\"?\")) {\n          throw ruleSetCompiler.error(`${path}.loader`, loader, \"Query arguments on 'loader' has been removed in favor of the 'options' property\");\n        }\n        if (typeof options === \"string\") {\n          util.deprecate(() => {}, `Using a string as loader options is deprecated (${path}.options)`, \"DEP_WEBPACK_RULE_LOADER_OPTIONS_STRING\")();\n        }\n        const ident = options && typeof options === \"object\" ? path : undefined;\n        references.set(ident, options);\n        result.effects.push({\n          type: enforce ? `use-${enforce}` : \"use\",\n          value: {\n            loader,\n            options,\n            ident\n          }\n        });\n      }\n    });\n  }\n}\nmodule.exports = UseEffectRulePlugin;","map":{"version":3,"names":["util","require","UseEffectRulePlugin","apply","ruleSetCompiler","hooks","rule","tap","path","unhandledProperties","result","references","conflictWith","property","correctProperty","has","error","delete","use","enforce","type","useToEffect","defaultIdent","item","data","useToEffectsWithoutIdent","useToEffectRaw","value","loader","options","undefined","ident","set","deprecate","items","Array","isArray","filter","Boolean","map","idx","useToEffects","subPath","effects","push","effect","includes","module","exports"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/node_modules/webpack/lib/rules/UseEffectRulePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst util = require(\"util\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").RuleSetLoader} RuleSetLoader */\n/** @typedef {import(\"../../declarations/WebpackOptions\").RuleSetLoaderOptions} RuleSetLoaderOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").RuleSetRule} RuleSetRule */\n/** @typedef {import(\"./RuleSetCompiler\")} RuleSetCompiler */\n/** @typedef {import(\"./RuleSetCompiler\").Effect} Effect */\n\nclass UseEffectRulePlugin {\n\t/**\n\t * @param {RuleSetCompiler} ruleSetCompiler the rule set compiler\n\t * @returns {void}\n\t */\n\tapply(ruleSetCompiler) {\n\t\truleSetCompiler.hooks.rule.tap(\n\t\t\t\"UseEffectRulePlugin\",\n\t\t\t(path, rule, unhandledProperties, result, references) => {\n\t\t\t\t/**\n\t\t\t\t * @param {keyof RuleSetRule} property property\n\t\t\t\t * @param {string} correctProperty correct property\n\t\t\t\t */\n\t\t\t\tconst conflictWith = (property, correctProperty) => {\n\t\t\t\t\tif (unhandledProperties.has(property)) {\n\t\t\t\t\t\tthrow ruleSetCompiler.error(\n\t\t\t\t\t\t\t`${path}.${property}`,\n\t\t\t\t\t\t\trule[property],\n\t\t\t\t\t\t\t`A Rule must not have a '${property}' property when it has a '${correctProperty}' property`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tif (unhandledProperties.has(\"use\")) {\n\t\t\t\t\tunhandledProperties.delete(\"use\");\n\t\t\t\t\tunhandledProperties.delete(\"enforce\");\n\n\t\t\t\t\tconflictWith(\"loader\", \"use\");\n\t\t\t\t\tconflictWith(\"options\", \"use\");\n\n\t\t\t\t\tconst use = rule.use;\n\t\t\t\t\tconst enforce = rule.enforce;\n\n\t\t\t\t\tconst type = enforce ? `use-${enforce}` : \"use\";\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {string} path options path\n\t\t\t\t\t * @param {string} defaultIdent default ident when none is provided\n\t\t\t\t\t * @param {object} item user provided use value\n\t\t\t\t\t * @returns {Effect|function(any): Effect[]} effect\n\t\t\t\t\t */\n\t\t\t\t\tconst useToEffect = (path, defaultIdent, item) => {\n\t\t\t\t\t\tif (typeof item === \"function\") {\n\t\t\t\t\t\t\treturn data => useToEffectsWithoutIdent(path, item(data));\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn useToEffectRaw(path, defaultIdent, item);\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {string} path options path\n\t\t\t\t\t * @param {string} defaultIdent default ident when none is provided\n\t\t\t\t\t * @param {{ ident?: string, loader?: RuleSetLoader, options?: RuleSetLoaderOptions }} item user provided use value\n\t\t\t\t\t * @returns {Effect} effect\n\t\t\t\t\t */\n\t\t\t\t\tconst useToEffectRaw = (path, defaultIdent, item) => {\n\t\t\t\t\t\tif (typeof item === \"string\") {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\t\tloader: item,\n\t\t\t\t\t\t\t\t\toptions: undefined,\n\t\t\t\t\t\t\t\t\tident: undefined\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst loader = item.loader;\n\t\t\t\t\t\tconst options = item.options;\n\t\t\t\t\t\tlet ident = item.ident;\n\t\t\t\t\t\tif (options && typeof options === \"object\") {\n\t\t\t\t\t\t\tif (!ident) ident = defaultIdent;\n\t\t\t\t\t\t\treferences.set(ident, options);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (typeof options === \"string\") {\n\t\t\t\t\t\t\tutil.deprecate(\n\t\t\t\t\t\t\t\t() => {},\n\t\t\t\t\t\t\t\t`Using a string as loader options is deprecated (${path}.options)`,\n\t\t\t\t\t\t\t\t\"DEP_WEBPACK_RULE_LOADER_OPTIONS_STRING\"\n\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttype: enforce ? `use-${enforce}` : \"use\",\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\tloader,\n\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t\tident\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {string} path options path\n\t\t\t\t\t * @param {any} items user provided use value\n\t\t\t\t\t * @returns {Effect[]} effects\n\t\t\t\t\t */\n\t\t\t\t\tconst useToEffectsWithoutIdent = (path, items) => {\n\t\t\t\t\t\tif (Array.isArray(items)) {\n\t\t\t\t\t\t\treturn items\n\t\t\t\t\t\t\t\t.filter(Boolean)\n\t\t\t\t\t\t\t\t.map((item, idx) =>\n\t\t\t\t\t\t\t\t\tuseToEffectRaw(`${path}[${idx}]`, \"[[missing ident]]\", item)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn [useToEffectRaw(path, \"[[missing ident]]\", items)];\n\t\t\t\t\t};\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {string} path current path\n\t\t\t\t\t * @param {any} items user provided use value\n\t\t\t\t\t * @returns {(Effect|function(any): Effect[])[]} effects\n\t\t\t\t\t */\n\t\t\t\t\tconst useToEffects = (path, items) => {\n\t\t\t\t\t\tif (Array.isArray(items)) {\n\t\t\t\t\t\t\treturn items.filter(Boolean).map((item, idx) => {\n\t\t\t\t\t\t\t\tconst subPath = `${path}[${idx}]`;\n\t\t\t\t\t\t\t\treturn useToEffect(subPath, subPath, item);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn [useToEffect(path, path, items)];\n\t\t\t\t\t};\n\n\t\t\t\t\tif (typeof use === \"function\") {\n\t\t\t\t\t\tresult.effects.push(data =>\n\t\t\t\t\t\t\tuseToEffectsWithoutIdent(\n\t\t\t\t\t\t\t\t`${path}.use`,\n\t\t\t\t\t\t\t\tuse(/** @type {TODO} */ (data))\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (const effect of useToEffects(`${path}.use`, use)) {\n\t\t\t\t\t\t\tresult.effects.push(effect);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (unhandledProperties.has(\"loader\")) {\n\t\t\t\t\tunhandledProperties.delete(\"loader\");\n\t\t\t\t\tunhandledProperties.delete(\"options\");\n\t\t\t\t\tunhandledProperties.delete(\"enforce\");\n\n\t\t\t\t\tconst loader = /** @type {RuleSetLoader} */ (rule.loader);\n\t\t\t\t\tconst options = rule.options;\n\t\t\t\t\tconst enforce = rule.enforce;\n\n\t\t\t\t\tif (loader.includes(\"!\")) {\n\t\t\t\t\t\tthrow ruleSetCompiler.error(\n\t\t\t\t\t\t\t`${path}.loader`,\n\t\t\t\t\t\t\tloader,\n\t\t\t\t\t\t\t\"Exclamation mark separated loader lists has been removed in favor of the 'use' property with arrays\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (loader.includes(\"?\")) {\n\t\t\t\t\t\tthrow ruleSetCompiler.error(\n\t\t\t\t\t\t\t`${path}.loader`,\n\t\t\t\t\t\t\tloader,\n\t\t\t\t\t\t\t\"Query arguments on 'loader' has been removed in favor of the 'options' property\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof options === \"string\") {\n\t\t\t\t\t\tutil.deprecate(\n\t\t\t\t\t\t\t() => {},\n\t\t\t\t\t\t\t`Using a string as loader options is deprecated (${path}.options)`,\n\t\t\t\t\t\t\t\"DEP_WEBPACK_RULE_LOADER_OPTIONS_STRING\"\n\t\t\t\t\t\t)();\n\t\t\t\t\t}\n\n\t\t\t\t\tconst ident =\n\t\t\t\t\t\toptions && typeof options === \"object\" ? path : undefined;\n\t\t\t\t\treferences.set(ident, options);\n\t\t\t\t\tresult.effects.push({\n\t\t\t\t\t\ttype: enforce ? `use-${enforce}` : \"use\",\n\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\tloader,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tident\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = UseEffectRulePlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;;AAE5B;AACA;AACA;AACA;AACA;;AAEA,MAAMC,mBAAmB,CAAC;EACzB;AACD;AACA;AACA;EACCC,KAAKA,CAACC,eAAe,EAAE;IACtBA,eAAe,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,CAC7B,qBAAqB,EACrB,CAACC,IAAI,EAAEF,IAAI,EAAEG,mBAAmB,EAAEC,MAAM,EAAEC,UAAU,KAAK;MACxD;AACJ;AACA;AACA;MACI,MAAMC,YAAY,GAAGA,CAACC,QAAQ,EAAEC,eAAe,KAAK;QACnD,IAAIL,mBAAmB,CAACM,GAAG,CAACF,QAAQ,CAAC,EAAE;UACtC,MAAMT,eAAe,CAACY,KAAK,CAC1B,GAAGR,IAAI,IAAIK,QAAQ,EAAE,EACrBP,IAAI,CAACO,QAAQ,CAAC,EACd,2BAA2BA,QAAQ,6BAA6BC,eAAe,YAChF,CAAC;QACF;MACD,CAAC;MAED,IAAIL,mBAAmB,CAACM,GAAG,CAAC,KAAK,CAAC,EAAE;QACnCN,mBAAmB,CAACQ,MAAM,CAAC,KAAK,CAAC;QACjCR,mBAAmB,CAACQ,MAAM,CAAC,SAAS,CAAC;QAErCL,YAAY,CAAC,QAAQ,EAAE,KAAK,CAAC;QAC7BA,YAAY,CAAC,SAAS,EAAE,KAAK,CAAC;QAE9B,MAAMM,GAAG,GAAGZ,IAAI,CAACY,GAAG;QACpB,MAAMC,OAAO,GAAGb,IAAI,CAACa,OAAO;QAE5B,MAAMC,IAAI,GAAGD,OAAO,GAAG,OAAOA,OAAO,EAAE,GAAG,KAAK;;QAE/C;AACL;AACA;AACA;AACA;AACA;QACK,MAAME,WAAW,GAAGA,CAACb,IAAI,EAAEc,YAAY,EAAEC,IAAI,KAAK;UACjD,IAAI,OAAOA,IAAI,KAAK,UAAU,EAAE;YAC/B,OAAOC,IAAI,IAAIC,wBAAwB,CAACjB,IAAI,EAAEe,IAAI,CAACC,IAAI,CAAC,CAAC;UAC1D;UACA,OAAOE,cAAc,CAAClB,IAAI,EAAEc,YAAY,EAAEC,IAAI,CAAC;QAChD,CAAC;;QAED;AACL;AACA;AACA;AACA;AACA;QACK,MAAMG,cAAc,GAAGA,CAAClB,IAAI,EAAEc,YAAY,EAAEC,IAAI,KAAK;UACpD,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;YAC7B,OAAO;cACNH,IAAI;cACJO,KAAK,EAAE;gBACNC,MAAM,EAAEL,IAAI;gBACZM,OAAO,EAAEC,SAAS;gBAClBC,KAAK,EAAED;cACR;YACD,CAAC;UACF;UACA,MAAMF,MAAM,GAAGL,IAAI,CAACK,MAAM;UAC1B,MAAMC,OAAO,GAAGN,IAAI,CAACM,OAAO;UAC5B,IAAIE,KAAK,GAAGR,IAAI,CAACQ,KAAK;UACtB,IAAIF,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;YAC3C,IAAI,CAACE,KAAK,EAAEA,KAAK,GAAGT,YAAY;YAChCX,UAAU,CAACqB,GAAG,CAACD,KAAK,EAAEF,OAAO,CAAC;UAC/B;UACA,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;YAChC7B,IAAI,CAACiC,SAAS,CACb,MAAM,CAAC,CAAC,EACR,mDAAmDzB,IAAI,WAAW,EAClE,wCACD,CAAC,CAAC,CAAC;UACJ;UACA,OAAO;YACNY,IAAI,EAAED,OAAO,GAAG,OAAOA,OAAO,EAAE,GAAG,KAAK;YACxCQ,KAAK,EAAE;cACNC,MAAM;cACNC,OAAO;cACPE;YACD;UACD,CAAC;QACF,CAAC;;QAED;AACL;AACA;AACA;AACA;QACK,MAAMN,wBAAwB,GAAGA,CAACjB,IAAI,EAAE0B,KAAK,KAAK;UACjD,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;YACzB,OAAOA,KAAK,CACVG,MAAM,CAACC,OAAO,CAAC,CACfC,GAAG,CAAC,CAAChB,IAAI,EAAEiB,GAAG,KACdd,cAAc,CAAC,GAAGlB,IAAI,IAAIgC,GAAG,GAAG,EAAE,mBAAmB,EAAEjB,IAAI,CAC5D,CAAC;UACH;UACA,OAAO,CAACG,cAAc,CAAClB,IAAI,EAAE,mBAAmB,EAAE0B,KAAK,CAAC,CAAC;QAC1D,CAAC;;QAED;AACL;AACA;AACA;AACA;QACK,MAAMO,YAAY,GAAGA,CAACjC,IAAI,EAAE0B,KAAK,KAAK;UACrC,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;YACzB,OAAOA,KAAK,CAACG,MAAM,CAACC,OAAO,CAAC,CAACC,GAAG,CAAC,CAAChB,IAAI,EAAEiB,GAAG,KAAK;cAC/C,MAAME,OAAO,GAAG,GAAGlC,IAAI,IAAIgC,GAAG,GAAG;cACjC,OAAOnB,WAAW,CAACqB,OAAO,EAAEA,OAAO,EAAEnB,IAAI,CAAC;YAC3C,CAAC,CAAC;UACH;UACA,OAAO,CAACF,WAAW,CAACb,IAAI,EAAEA,IAAI,EAAE0B,KAAK,CAAC,CAAC;QACxC,CAAC;QAED,IAAI,OAAOhB,GAAG,KAAK,UAAU,EAAE;UAC9BR,MAAM,CAACiC,OAAO,CAACC,IAAI,CAACpB,IAAI,IACvBC,wBAAwB,CACvB,GAAGjB,IAAI,MAAM,EACbU,GAAG,CAAC,mBAAqBM,IAAK,CAC/B,CACD,CAAC;QACF,CAAC,MAAM;UACN,KAAK,MAAMqB,MAAM,IAAIJ,YAAY,CAAC,GAAGjC,IAAI,MAAM,EAAEU,GAAG,CAAC,EAAE;YACtDR,MAAM,CAACiC,OAAO,CAACC,IAAI,CAACC,MAAM,CAAC;UAC5B;QACD;MACD;MAEA,IAAIpC,mBAAmB,CAACM,GAAG,CAAC,QAAQ,CAAC,EAAE;QACtCN,mBAAmB,CAACQ,MAAM,CAAC,QAAQ,CAAC;QACpCR,mBAAmB,CAACQ,MAAM,CAAC,SAAS,CAAC;QACrCR,mBAAmB,CAACQ,MAAM,CAAC,SAAS,CAAC;QAErC,MAAMW,MAAM,GAAG,4BAA8BtB,IAAI,CAACsB,MAAO;QACzD,MAAMC,OAAO,GAAGvB,IAAI,CAACuB,OAAO;QAC5B,MAAMV,OAAO,GAAGb,IAAI,CAACa,OAAO;QAE5B,IAAIS,MAAM,CAACkB,QAAQ,CAAC,GAAG,CAAC,EAAE;UACzB,MAAM1C,eAAe,CAACY,KAAK,CAC1B,GAAGR,IAAI,SAAS,EAChBoB,MAAM,EACN,qGACD,CAAC;QACF;QAEA,IAAIA,MAAM,CAACkB,QAAQ,CAAC,GAAG,CAAC,EAAE;UACzB,MAAM1C,eAAe,CAACY,KAAK,CAC1B,GAAGR,IAAI,SAAS,EAChBoB,MAAM,EACN,iFACD,CAAC;QACF;QAEA,IAAI,OAAOC,OAAO,KAAK,QAAQ,EAAE;UAChC7B,IAAI,CAACiC,SAAS,CACb,MAAM,CAAC,CAAC,EACR,mDAAmDzB,IAAI,WAAW,EAClE,wCACD,CAAC,CAAC,CAAC;QACJ;QAEA,MAAMuB,KAAK,GACVF,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,GAAGrB,IAAI,GAAGsB,SAAS;QAC1DnB,UAAU,CAACqB,GAAG,CAACD,KAAK,EAAEF,OAAO,CAAC;QAC9BnB,MAAM,CAACiC,OAAO,CAACC,IAAI,CAAC;UACnBxB,IAAI,EAAED,OAAO,GAAG,OAAOA,OAAO,EAAE,GAAG,KAAK;UACxCQ,KAAK,EAAE;YACNC,MAAM;YACNC,OAAO;YACPE;UACD;QACD,CAAC,CAAC;MACH;IACD,CACD,CAAC;EACF;AACD;AAEAgB,MAAM,CAACC,OAAO,GAAG9C,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}