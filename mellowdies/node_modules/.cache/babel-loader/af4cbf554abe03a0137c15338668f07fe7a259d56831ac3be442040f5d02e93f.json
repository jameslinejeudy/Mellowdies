{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\james\\\\Downloads\\\\Mellowdies\\\\mellowdies\\\\src\\\\Exportpage\\\\Exportpage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport WaveSurfer from 'wavesurfer.js';\nimport './Exportpage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Exportpage() {\n  _s();\n  const location = useLocation();\n  const [mergedAudio, setMergedAudio] = useState(null);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const waveformRef = useRef(null);\n  const wavesurfer = useRef(null);\n  const progressBarRef = useRef(null);\n\n  // Initialize WaveSurfer when the audio is ready\n  useEffect(() => {\n    if (mergedAudio && waveformRef.current) {\n      wavesurfer.current = WaveSurfer.create({\n        container: waveformRef.current,\n        waveColor: '#000',\n        // Keep the wave color consistent\n        progressColor: '#000',\n        // Progress color same as wave\n        height: 100,\n        barWidth: 2,\n        barGap: 1,\n        cursorColor: 'transparent',\n        // Hide the cursor since it's not part of the waveform\n        responsive: true,\n        normalize: true\n      });\n      wavesurfer.current.on('audioprocess', () => {\n        setCurrentTime(wavesurfer.current.getCurrentTime());\n      });\n      wavesurfer.current.on('ready', () => {\n        setDuration(wavesurfer.current.getDuration());\n      });\n      wavesurfer.current.load(mergedAudio); // Load the merged audio\n    }\n  }, [mergedAudio]);\n\n  // Ensure mergedAudio is set when location.state changes\n  useEffect(() => {\n    if (location.state && location.state.mergedAudio) {\n      setMergedAudio(location.state.mergedAudio);\n    }\n  }, [location.state]);\n\n  // Play or pause the audio\n  const playPause = () => {\n    if (wavesurfer.current) {\n      if (wavesurfer.current.isPlaying()) {\n        wavesurfer.current.pause();\n      } else {\n        wavesurfer.current.play();\n      }\n    }\n  };\n\n  // Update the progress when the user interacts with the timeline\n  const handleTimelineChange = e => {\n    const newTime = e.target.value;\n    setCurrentTime(newTime);\n    if (wavesurfer.current) {\n      wavesurfer.current.setCurrentTime(newTime);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagebackground\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"circle-shape\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"waveform\",\n      ref: waveformRef,\n      className: \"waveform\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: duration,\n        value: currentTime,\n        step: \"0.01\",\n        onChange: handleTimelineChange,\n        className: \"timeline-slider\",\n        ref: progressBarRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-display\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: currentTime.toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: duration.toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: playPause,\n        className: \"play-button\",\n        children: \"Play/Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_s(Exportpage, \"Vu/AiHtN5RK1rmYTrrm8lsc/oMw=\", false, function () {\n  return [useLocation];\n});\n_c = Exportpage;\nexport default Exportpage;\nvar _c;\n$RefreshReg$(_c, \"Exportpage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useLocation","WaveSurfer","jsxDEV","_jsxDEV","Exportpage","_s","location","mergedAudio","setMergedAudio","currentTime","setCurrentTime","duration","setDuration","waveformRef","wavesurfer","progressBarRef","current","create","container","waveColor","progressColor","height","barWidth","barGap","cursorColor","responsive","normalize","on","getCurrentTime","getDuration","load","state","playPause","isPlaying","pause","play","handleTimelineChange","e","newTime","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","ref","type","min","max","step","onChange","toFixed","onClick","_c","$RefreshReg$"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/src/Exportpage/Exportpage.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport './Exportpage.css';\r\n\r\nfunction Exportpage() {\r\n    const location = useLocation();\r\n    const [mergedAudio, setMergedAudio] = useState(null);\r\n    const [currentTime, setCurrentTime] = useState(0);\r\n    const [duration, setDuration] = useState(0);\r\n    const waveformRef = useRef(null);\r\n    const wavesurfer = useRef(null);\r\n    const progressBarRef = useRef(null);\r\n\r\n    // Initialize WaveSurfer when the audio is ready\r\n    useEffect(() => {\r\n        if (mergedAudio && waveformRef.current) {\r\n            wavesurfer.current = WaveSurfer.create({\r\n                container: waveformRef.current,\r\n                waveColor: '#000', // Keep the wave color consistent\r\n                progressColor: '#000', // Progress color same as wave\r\n                height: 100,\r\n                barWidth: 2,\r\n                barGap: 1,\r\n                cursorColor: 'transparent', // Hide the cursor since it's not part of the waveform\r\n                responsive: true,\r\n                normalize: true,\r\n            });\r\n\r\n            wavesurfer.current.on('audioprocess', () => {\r\n                setCurrentTime(wavesurfer.current.getCurrentTime());\r\n            });\r\n\r\n            wavesurfer.current.on('ready', () => {\r\n                setDuration(wavesurfer.current.getDuration());\r\n            });\r\n\r\n            wavesurfer.current.load(mergedAudio); // Load the merged audio\r\n        }\r\n    }, [mergedAudio]);\r\n\r\n    // Ensure mergedAudio is set when location.state changes\r\n    useEffect(() => {\r\n        if (location.state && location.state.mergedAudio) {\r\n            setMergedAudio(location.state.mergedAudio);\r\n        }\r\n    }, [location.state]);\r\n\r\n    // Play or pause the audio\r\n    const playPause = () => {\r\n        if (wavesurfer.current) {\r\n            if (wavesurfer.current.isPlaying()) {\r\n                wavesurfer.current.pause();\r\n            } else {\r\n                wavesurfer.current.play();\r\n            }\r\n        }\r\n    };\r\n\r\n    // Update the progress when the user interacts with the timeline\r\n    const handleTimelineChange = (e) => {\r\n        const newTime = e.target.value;\r\n        setCurrentTime(newTime);\r\n        if (wavesurfer.current) {\r\n            wavesurfer.current.setCurrentTime(newTime);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"pagebackground\">\r\n            {/* Circle-shaped image */}\r\n            <div className=\"circle-shape\"></div>\r\n\r\n            {/* Waveform container */}\r\n            <div id=\"waveform\" ref={waveformRef} className=\"waveform\"></div>\r\n\r\n            {/* Custom timeline progress bar */}\r\n            <div className=\"timeline-container\">\r\n                <input\r\n                    type=\"range\"\r\n                    min=\"0\"\r\n                    max={duration}\r\n                    value={currentTime}\r\n                    step=\"0.01\"\r\n                    onChange={handleTimelineChange}\r\n                    className=\"timeline-slider\"\r\n                    ref={progressBarRef}\r\n                />\r\n                <div className=\"time-display\">\r\n                    <span>{currentTime.toFixed(2)}</span>\r\n                    <span>{duration.toFixed(2)}</span>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Audio controls */}\r\n            <div className=\"controls\">\r\n                <button onClick={playPause} className=\"play-button\">\r\n                    Play/Pause\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Exportpage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}