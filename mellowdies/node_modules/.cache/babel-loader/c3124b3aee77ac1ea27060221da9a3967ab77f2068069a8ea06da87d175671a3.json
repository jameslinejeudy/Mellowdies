{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst {\n  pathToFileURL\n} = require(\"url\");\nconst CommentCompilationWarning = require(\"../CommentCompilationWarning\");\nconst {\n  JAVASCRIPT_MODULE_TYPE_AUTO,\n  JAVASCRIPT_MODULE_TYPE_ESM\n} = require(\"../ModuleTypeConstants\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\nconst BasicEvaluatedExpression = require(\"../javascript/BasicEvaluatedExpression\");\nconst {\n  approve\n} = require(\"../javascript/JavascriptParserHelpers\");\nconst InnerGraph = require(\"../optimize/InnerGraph\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst URLDependency = require(\"./URLDependency\");\n\n/** @typedef {import(\"estree\").NewExpression} NewExpressionNode */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n\nconst PLUGIN_NAME = \"URLPlugin\";\nclass URLPlugin {\n  /**\n   * @param {Compiler} compiler compiler\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation, {\n      normalModuleFactory\n    }) => {\n      compilation.dependencyFactories.set(URLDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(URLDependency, new URLDependency.Template());\n\n      /**\n       * @param {NormalModule} module module\n       * @returns {URL} file url\n       */\n      const getUrl = module => pathToFileURL(module.resource);\n      const isMetaUrl = (parser, arg) => {\n        const chain = parser.extractMemberExpressionChain(arg);\n        if (chain.members.length !== 1 || chain.object.type !== \"MetaProperty\" || chain.object.meta.name !== \"import\" || chain.object.property.name !== \"meta\" || chain.members[0] !== \"url\") return false;\n        return true;\n      };\n\n      /**\n       * @param {Parser} parser parser parser\n       * @param {JavascriptParserOptions} parserOptions parserOptions\n       * @returns {void}\n       */\n      const parserCallback = (parser, parserOptions) => {\n        if (parserOptions.url === false) return;\n        const relative = parserOptions.url === \"relative\";\n\n        /**\n         * @param {NewExpressionNode} expr expression\n         * @returns {undefined | string} request\n         */\n        const getUrlRequest = expr => {\n          if (expr.arguments.length !== 2) return;\n          const [arg1, arg2] = expr.arguments;\n          if (arg2.type !== \"MemberExpression\" || arg1.type === \"SpreadElement\") return;\n          if (!isMetaUrl(parser, arg2)) return;\n          return parser.evaluateExpression(arg1).asString();\n        };\n        parser.hooks.canRename.for(\"URL\").tap(PLUGIN_NAME, approve);\n        parser.hooks.evaluateNewExpression.for(\"URL\").tap(PLUGIN_NAME, expr => {\n          const request = getUrlRequest(expr);\n          if (!request) return;\n          const url = new URL(request, getUrl(parser.state.module));\n          return new BasicEvaluatedExpression().setString(url.toString()).setRange(/** @type {Range} */expr.range);\n        });\n        parser.hooks.new.for(\"URL\").tap(PLUGIN_NAME, _expr => {\n          const expr = /** @type {NewExpressionNode} */_expr;\n          const {\n            options: importOptions,\n            errors: commentErrors\n          } = parser.parseCommentOptions(/** @type {Range} */expr.range);\n          if (commentErrors) {\n            for (const e of commentErrors) {\n              const {\n                comment\n              } = e;\n              parser.state.module.addWarning(new CommentCompilationWarning(`Compilation error while processing magic comment(-s): /*${comment.value}*/: ${e.message}`, comment.loc));\n            }\n          }\n          if (importOptions && importOptions.webpackIgnore !== undefined) {\n            if (typeof importOptions.webpackIgnore !== \"boolean\") {\n              parser.state.module.addWarning(new UnsupportedFeatureWarning(`\\`webpackIgnore\\` expected a boolean, but received: ${importOptions.webpackIgnore}.`, /** @type {DependencyLocation} */expr.loc));\n              return;\n            } else if (importOptions.webpackIgnore) {\n              if (expr.arguments.length !== 2) return;\n              const [, arg2] = expr.arguments;\n              if (arg2.type !== \"MemberExpression\" || !isMetaUrl(parser, arg2)) return;\n              const dep = new ConstDependency(RuntimeGlobals.baseURI, /** @type {Range} */arg2.range, [RuntimeGlobals.baseURI]);\n              dep.loc = /** @type {DependencyLocation} */expr.loc;\n              parser.state.module.addPresentationalDependency(dep);\n              return true;\n            }\n          }\n          const request = getUrlRequest(expr);\n          if (!request) return;\n          const [arg1, arg2] = expr.arguments;\n          const dep = new URLDependency(request, [/** @type {Range} */arg1.range[0], /** @type {Range} */arg2.range[1]], /** @type {Range} */expr.range, relative);\n          dep.loc = /** @type {DependencyLocation} */expr.loc;\n          parser.state.current.addDependency(dep);\n          InnerGraph.onUsage(parser.state, e => dep.usedByExports = e);\n          return true;\n        });\n        parser.hooks.isPure.for(\"NewExpression\").tap(PLUGIN_NAME, _expr => {\n          const expr = /** @type {NewExpressionNode} */_expr;\n          const {\n            callee\n          } = expr;\n          if (callee.type !== \"Identifier\") return;\n          const calleeInfo = parser.getFreeInfoFromVariable(callee.name);\n          if (!calleeInfo || calleeInfo.name !== \"URL\") return;\n          const request = getUrlRequest(expr);\n          if (request) return true;\n        });\n      };\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_AUTO).tap(PLUGIN_NAME, parserCallback);\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_ESM).tap(PLUGIN_NAME, parserCallback);\n    });\n  }\n}\nmodule.exports = URLPlugin;","map":{"version":3,"names":["pathToFileURL","require","CommentCompilationWarning","JAVASCRIPT_MODULE_TYPE_AUTO","JAVASCRIPT_MODULE_TYPE_ESM","RuntimeGlobals","UnsupportedFeatureWarning","BasicEvaluatedExpression","approve","InnerGraph","ConstDependency","URLDependency","PLUGIN_NAME","URLPlugin","apply","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","getUrl","module","resource","isMetaUrl","parser","arg","chain","extractMemberExpressionChain","members","length","object","type","meta","name","property","parserCallback","parserOptions","url","relative","getUrlRequest","expr","arguments","arg1","arg2","evaluateExpression","asString","canRename","for","evaluateNewExpression","request","URL","state","setString","toString","setRange","range","new","_expr","options","importOptions","errors","commentErrors","parseCommentOptions","e","comment","addWarning","value","message","loc","webpackIgnore","undefined","dep","baseURI","addPresentationalDependency","current","addDependency","onUsage","usedByExports","isPure","callee","calleeInfo","getFreeInfoFromVariable","exports"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/node_modules/webpack/lib/dependencies/URLPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst { pathToFileURL } = require(\"url\");\nconst CommentCompilationWarning = require(\"../CommentCompilationWarning\");\nconst {\n\tJAVASCRIPT_MODULE_TYPE_AUTO,\n\tJAVASCRIPT_MODULE_TYPE_ESM\n} = require(\"../ModuleTypeConstants\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst UnsupportedFeatureWarning = require(\"../UnsupportedFeatureWarning\");\nconst BasicEvaluatedExpression = require(\"../javascript/BasicEvaluatedExpression\");\nconst { approve } = require(\"../javascript/JavascriptParserHelpers\");\nconst InnerGraph = require(\"../optimize/InnerGraph\");\nconst ConstDependency = require(\"./ConstDependency\");\nconst URLDependency = require(\"./URLDependency\");\n\n/** @typedef {import(\"estree\").NewExpression} NewExpressionNode */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../javascript/JavascriptParser\")} JavascriptParser */\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n\nconst PLUGIN_NAME = \"URLPlugin\";\n\nclass URLPlugin {\n\t/**\n\t * @param {Compiler} compiler compiler\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\tPLUGIN_NAME,\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(URLDependency, normalModuleFactory);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tURLDependency,\n\t\t\t\t\tnew URLDependency.Template()\n\t\t\t\t);\n\n\t\t\t\t/**\n\t\t\t\t * @param {NormalModule} module module\n\t\t\t\t * @returns {URL} file url\n\t\t\t\t */\n\t\t\t\tconst getUrl = module => pathToFileURL(module.resource);\n\n\t\t\t\tconst isMetaUrl = (parser, arg) => {\n\t\t\t\t\tconst chain = parser.extractMemberExpressionChain(arg);\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tchain.members.length !== 1 ||\n\t\t\t\t\t\tchain.object.type !== \"MetaProperty\" ||\n\t\t\t\t\t\tchain.object.meta.name !== \"import\" ||\n\t\t\t\t\t\tchain.object.property.name !== \"meta\" ||\n\t\t\t\t\t\tchain.members[0] !== \"url\"\n\t\t\t\t\t)\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\treturn true;\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * @param {Parser} parser parser parser\n\t\t\t\t * @param {JavascriptParserOptions} parserOptions parserOptions\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tconst parserCallback = (parser, parserOptions) => {\n\t\t\t\t\tif (parserOptions.url === false) return;\n\t\t\t\t\tconst relative = parserOptions.url === \"relative\";\n\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {NewExpressionNode} expr expression\n\t\t\t\t\t * @returns {undefined | string} request\n\t\t\t\t\t */\n\t\t\t\t\tconst getUrlRequest = expr => {\n\t\t\t\t\t\tif (expr.arguments.length !== 2) return;\n\n\t\t\t\t\t\tconst [arg1, arg2] = expr.arguments;\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\targ2.type !== \"MemberExpression\" ||\n\t\t\t\t\t\t\targ1.type === \"SpreadElement\"\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\tif (!isMetaUrl(parser, arg2)) return;\n\n\t\t\t\t\t\treturn parser.evaluateExpression(arg1).asString();\n\t\t\t\t\t};\n\n\t\t\t\t\tparser.hooks.canRename.for(\"URL\").tap(PLUGIN_NAME, approve);\n\t\t\t\t\tparser.hooks.evaluateNewExpression\n\t\t\t\t\t\t.for(\"URL\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, expr => {\n\t\t\t\t\t\t\tconst request = getUrlRequest(expr);\n\t\t\t\t\t\t\tif (!request) return;\n\t\t\t\t\t\t\tconst url = new URL(request, getUrl(parser.state.module));\n\n\t\t\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t\t\t.setString(url.toString())\n\t\t\t\t\t\t\t\t.setRange(/** @type {Range} */ (expr.range));\n\t\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.new.for(\"URL\").tap(PLUGIN_NAME, _expr => {\n\t\t\t\t\t\tconst expr = /** @type {NewExpressionNode} */ (_expr);\n\t\t\t\t\t\tconst { options: importOptions, errors: commentErrors } =\n\t\t\t\t\t\t\tparser.parseCommentOptions(/** @type {Range} */ (expr.range));\n\n\t\t\t\t\t\tif (commentErrors) {\n\t\t\t\t\t\t\tfor (const e of commentErrors) {\n\t\t\t\t\t\t\t\tconst { comment } = e;\n\t\t\t\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\t\t\t\tnew CommentCompilationWarning(\n\t\t\t\t\t\t\t\t\t\t`Compilation error while processing magic comment(-s): /*${comment.value}*/: ${e.message}`,\n\t\t\t\t\t\t\t\t\t\tcomment.loc\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (importOptions && importOptions.webpackIgnore !== undefined) {\n\t\t\t\t\t\t\tif (typeof importOptions.webpackIgnore !== \"boolean\") {\n\t\t\t\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\t\t\t\tnew UnsupportedFeatureWarning(\n\t\t\t\t\t\t\t\t\t\t`\\`webpackIgnore\\` expected a boolean, but received: ${importOptions.webpackIgnore}.`,\n\t\t\t\t\t\t\t\t\t\t/** @type {DependencyLocation} */ (expr.loc)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t} else if (importOptions.webpackIgnore) {\n\t\t\t\t\t\t\t\tif (expr.arguments.length !== 2) return;\n\n\t\t\t\t\t\t\t\tconst [, arg2] = expr.arguments;\n\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\targ2.type !== \"MemberExpression\" ||\n\t\t\t\t\t\t\t\t\t!isMetaUrl(parser, arg2)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\t\tRuntimeGlobals.baseURI,\n\t\t\t\t\t\t\t\t\t/** @type {Range} */ (arg2.range),\n\t\t\t\t\t\t\t\t\t[RuntimeGlobals.baseURI]\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (expr.loc);\n\t\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst request = getUrlRequest(expr);\n\n\t\t\t\t\t\tif (!request) return;\n\n\t\t\t\t\t\tconst [arg1, arg2] = expr.arguments;\n\t\t\t\t\t\tconst dep = new URLDependency(\n\t\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t/** @type {Range} */ (arg1.range)[0],\n\t\t\t\t\t\t\t\t/** @type {Range} */ (arg2.range)[1]\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t/** @type {Range} */ (expr.range),\n\t\t\t\t\t\t\trelative\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (expr.loc);\n\t\t\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\t\t\tInnerGraph.onUsage(parser.state, e => (dep.usedByExports = e));\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.isPure.for(\"NewExpression\").tap(PLUGIN_NAME, _expr => {\n\t\t\t\t\t\tconst expr = /** @type {NewExpressionNode} */ (_expr);\n\t\t\t\t\t\tconst { callee } = expr;\n\t\t\t\t\t\tif (callee.type !== \"Identifier\") return;\n\t\t\t\t\t\tconst calleeInfo = parser.getFreeInfoFromVariable(callee.name);\n\t\t\t\t\t\tif (!calleeInfo || calleeInfo.name !== \"URL\") return;\n\n\t\t\t\t\t\tconst request = getUrlRequest(expr);\n\n\t\t\t\t\t\tif (request) return true;\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_AUTO)\n\t\t\t\t\t.tap(PLUGIN_NAME, parserCallback);\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_ESM)\n\t\t\t\t\t.tap(PLUGIN_NAME, parserCallback);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = URLPlugin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}