{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elect\\\\Documents\\\\CIS\\\\4914\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Menu.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Menu.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar utils = require(\"audio-buffer-utils\");\nvar blobber = require('audiobuffer-to-blob');\nvar slicer = require('audiobuffer-slice');\nlet buffers = [];\nlet copyBufs = [];\nfunction storeBuffer(buffer) {\n  buffers.push(buffer);\n}\nfunction getAudioSlice(buffer, start, end) {\n  slicer(buffer, start * 1000, end * 1000, function (error, slicedBuffer) {\n    if (error) {\n      console.error(error);\n      return;\n    } else {\n      sliceBuffer = slicedBuffer;\n    }\n  });\n  return sliceBuffer;\n}\nfunction Menu({\n  handleBack,\n  waveData\n}) {\n  _s();\n  const filters = waveData[0].filters;\n  const [isGainModalOpen, setGainModalOpen] = useState(false);\n  const [isDelayModalOpen, setDelayModalOpen] = useState(false);\n  const [isDistortionModalOpen, setDistortionModalOpen] = useState(false);\n  const [isReverbModalOpen, setReverbModalOpen] = useState(false);\n  const [isEquaModalOpen, setEquaModalOpen] = useState(false);\n  const [isEquaInit, setEquaInit] = useState(false);\n  const [gainValue, setGainValue] = useState(100);\n  const [delayTime, setDelayTime] = useState(0.00);\n  const [feedback, setFeedback] = useState(0.00);\n  const [wetness, setWetness] = useState(0.00);\n  const [dryness, setDryness] = useState(0.00);\n  const [gainDistortValue, setGainDistortValue] = useState(100);\n  const [reverbTime, setReverbTime] = useState(0.00);\n  const [decay, setDecay] = useState(0.00);\n  const [reverbWet, setReverbWet] = useState(0.00);\n  const [filter0Val, setFilter0] = useState(filters[0].gain.value);\n  const [filter1Val, setFilter1] = useState(filters[1].gain.value);\n  const [filter2Val, setFilter2] = useState(filters[2].gain.value);\n  const [filter3Val, setFilter3] = useState(filters[3].gain.value);\n  const [filter4Val, setFilter4] = useState(filters[4].gain.value);\n  const [filter5Val, setFilter5] = useState(filters[5].gain.value);\n  const [filter6Val, setFilter6] = useState(filters[6].gain.value);\n  const [filter7Val, setFilter7] = useState(filters[7].gain.value);\n  const [filter8Val, setFilter8] = useState(filters[8].gain.value);\n  const [filter9Val, setFilter9] = useState(filters[9].gain.value);\n  const [showAdvanced, setShowAdvanced] = useState(false);\n  const toggleAdvancedOptions = () => {\n    setShowAdvanced(prev => !prev);\n  };\n  if (isEquaInit === false) {\n    waveData[0].webAudioPlayer.gainNode.connect(filters[0]);\n    filters[0].connect(filters[1]);\n    filters[1].connect(filters[2]);\n    filters[2].connect(filters[3]);\n    filters[3].connect(filters[4]);\n    filters[4].connect(filters[5]);\n    filters[5].connect(filters[6]);\n    filters[6].connect(filters[7]);\n    filters[7].connect(filters[8]);\n    filters[8].connect(filters[9]);\n    filters[9].connect(waveData[0].webAudioPlayer.audioContext.destination);\n  }\n  const setFilter = () => {\n    filters[0].gain.value = filter0Val;\n    filters[1].gain.value = filter1Val;\n    filters[2].gain.value = filter2Val;\n    filters[3].gain.value = filter3Val;\n    filters[4].gain.value = filter4Val;\n    filters[5].gain.value = filter5Val;\n    filters[6].gain.value = filter6Val;\n    filters[7].gain.value = filter7Val;\n    filters[8].gain.value = filter8Val;\n    filters[9].gain.value = filter9Val;\n    console.log(\"EQ applied\");\n  };\n  const undo = () => {\n    if (buffers.length > 1) {\n      let blob = blobber(buffers.pop());\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const reset = () => {\n    if (buffers.length >= 1) {\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blobber(buffers[0])).catch(error => console.log(error));\n      buffers = [];\n    }\n  };\n  const reverse = () => {\n    if (buffers.length >= 1) {\n      let buffer = waveData[0].waveSurfer.getDecodedData();\n      let clone = utils.clone(buffer);\n      storeBuffer(clone);\n      let region = waveData[0].regions.getRegions()[0];\n      let sampleRate = buffer.sampleRate;\n      if (buffer) {\n        utils.reverse(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n        console.log(\"Reversed region.\");\n        let blob = blobber(buffer);\n        waveData[0].waveSurfer.empty();\n        waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n      } else {\n        console.error('No audio buffer loaded');\n      }\n    }\n  };\n  const invert = () => {\n    if (buffers.length >= 1) {\n      let buffer = waveData[0].waveSurfer.getDecodedData();\n      let clone = utils.clone(buffer);\n      storeBuffer(clone);\n      let region = waveData[0].regions.getRegions()[0];\n      let sampleRate = buffer.sampleRate;\n      if (buffer) {\n        utils.invert(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n        console.log(\"Inverted region.\");\n        let blob = blobber(buffer);\n        waveData[0].waveSurfer.empty();\n        waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n      } else {\n        console.error('No audio buffer loaded');\n      }\n    }\n  };\n  const normalize = () => {\n    if (buffers.length >= 1) {\n      let buffer = waveData[0].waveSurfer.getDecodedData();\n      let clone = utils.clone(buffer);\n      storeBuffer(clone);\n      let region = waveData[0].regions.getRegions()[0];\n      let sampleRate = buffer.sampleRate;\n      if (buffer) {\n        utils.normalize(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n        console.log(\"Normalized region.\");\n        let blob = blobber(buffer);\n        waveData[0].waveSurfer.empty();\n        waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n      } else {\n        console.error('No audio buffer loaded');\n      }\n    }\n  };\n  const openGainModal = () => setGainModalOpen(true);\n  const closeGainModal = () => setGainModalOpen(false);\n  const adjustGain = () => {\n    if (buffers.length >= 1) {\n      let buffer = waveData[0].waveSurfer.getDecodedData();\n      let clone = utils.clone(buffer);\n      storeBuffer(clone);\n      let region = waveData[0].regions.getRegions()[0];\n      let sampleRate = buffer.sampleRate;\n      let gain = gainValue / 100;\n      let start = Math.floor(region.start * sampleRate);\n      let end = Math.ceil(region.end * sampleRate);\n      if (buffer) {\n        for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n          let channelData = buffer.getChannelData(channel);\n          for (let sample = start; sample < end; sample += 1) {\n            channelData[sample] *= gain;\n          }\n        }\n        console.log('Gain adjusted:', gain);\n        let blob = blobber(buffer);\n        waveData[0].waveSurfer.empty();\n        waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n      }\n    }\n  };\n  const fadeIn = () => {\n    if (buffers.length >= 1) {\n      let buffer = waveData[0].waveSurfer.getDecodedData();\n      let clone = utils.clone(buffer);\n      storeBuffer(clone);\n      let region = waveData[0].regions.getRegions()[0];\n      let sampleRate = buffer.sampleRate;\n      let start = Math.floor(region.start * sampleRate);\n      let end = Math.ceil(region.end * sampleRate);\n      let stepInc = 1 / (end - start);\n      let currGain = 0;\n      let steps = 0;\n      if (buffer) {\n        for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n          let channelData = buffer.getChannelData(channel);\n          for (let sample = start; sample < end; sample += 1) {\n            channelData[sample] *= currGain + steps * stepInc;\n            steps += 1;\n          }\n          steps = 0;\n        }\n        console.log('Region Faded In');\n        let blob = blobber(buffer);\n        waveData[0].waveSurfer.empty();\n        waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n      }\n    }\n  };\n  const fadeOut = () => {\n    if (buffers.length >= 1) {\n      let buffer = waveData[0].waveSurfer.getDecodedData();\n      let clone = utils.clone(buffer);\n      storeBuffer(clone);\n      let region = waveData[0].regions.getRegions()[0];\n      let sampleRate = buffer.sampleRate;\n      let start = Math.floor(region.start * sampleRate);\n      let end = Math.ceil(region.end * sampleRate);\n      let stepInc = 1 / (end - start);\n      let currGain = 1;\n      let steps = 0;\n      if (buffer) {\n        for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n          let channelData = buffer.getChannelData(channel);\n          for (let sample = start; sample < end; sample += 1) {\n            channelData[sample] *= currGain - steps * stepInc;\n            steps += 1;\n          }\n          steps = 0;\n        }\n        console.log('Region Faded In');\n        let blob = blobber(buffer);\n        waveData[0].waveSurfer.empty();\n        waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n      }\n    }\n  };\n  const openDistortionModal = () => setDistortionModalOpen(true);\n  const closeDistortionModal = () => setDistortionModalOpen(false);\n  const distort = () => {\n    if (buffers.length >= 1) {\n      let buffer = waveData[0].waveSurfer.getDecodedData();\n      if (!buffer) return;\n      let clone = utils.clone(buffer);\n      storeBuffer(clone);\n      let region = waveData[0].regions.getRegions()[0];\n      let sampleRate = buffer.sampleRate;\n      const gain = gainDistortValue / 100;\n      const wet = 0.5;\n      const dry = 1 - wet;\n      let start = Math.floor(region.start * sampleRate);\n      let end = Math.ceil(region.end * sampleRate);\n      if (buffer) {\n        for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n          let channelData = buffer.getChannelData(channel);\n          for (let sample = start; sample < end; sample += 1) {\n            const drySample = channelData[sample];\n            const wetSample = Math.atan(gain * drySample);\n            channelData[sample] = dry * drySample + wet * wetSample;\n          }\n        }\n        console.log('Distorted Region Applied', {\n          gain,\n          wet\n        });\n        let blob = blobber(buffer);\n        waveData[0].waveSurfer.empty();\n        waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n      }\n    }\n  };\n  const openDelayModal = () => setDelayModalOpen(true);\n  const closeDelayModal = () => setDelayModalOpen(false);\n  const delay = () => {\n    if (buffers.length >= 1) {\n      let buffer = waveData[0].waveSurfer.getDecodedData();\n      if (!buffer) return;\n      let clone = utils.clone(buffer);\n      storeBuffer(clone);\n      let region = waveData[0].regions.getRegions()[0];\n      let sampleRate = buffer.sampleRate;\n      let start = Math.floor(region.start * sampleRate);\n      let end = Math.ceil(region.end * sampleRate);\n      let wet = wetness;\n      let dry = dryness;\n      let feeder = feedback;\n      let numChannels = buffer.numberOfChannels;\n      let delaySamples = Math.ceil(sampleRate * delayTime);\n      if (numChannels === 1) {\n        let channelData = buffer.getChannelData(0);\n        let delayBuffer = new Float32Array(delaySamples).fill(0);\n        for (let i = start; i < end; i++) {\n          let delayIndex = (i - start) % delaySamples;\n          let delayedSample = delayBuffer[delayIndex];\n          channelData[i] = channelData[i] * dry + delayedSample * wet;\n          delayBuffer[delayIndex] = feeder * delayedSample + channelData[i];\n        }\n      } else if (numChannels === 2) {\n        let channelLeft = buffer.getChannelData(0);\n        let channelRight = buffer.getChannelData(1);\n        let delayBufferLeft = new Float32Array(delaySamples).fill(0);\n        let delayBufferRight = new Float32Array(delaySamples).fill(0);\n        for (let i = start; i < end; i++) {\n          let delayIndex = (i - start) % delaySamples;\n          let delayedLeft = delayBufferLeft[delayIndex];\n          channelLeft[i] = channelLeft[i] * dry + delayedLeft * wet;\n          delayBufferLeft[delayIndex] = feeder * delayedLeft + channelLeft[i];\n          let delayedRight = delayBufferRight[delayIndex];\n          channelRight[i] = channelRight[i] * dry + delayedRight * wet;\n          delayBufferRight[delayIndex] = feeder * delayedRight + channelRight[i];\n        }\n      }\n      console.log(\"Region Delayed\");\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.error(error));\n    }\n  };\n  const openReverbModal = () => setReverbModalOpen(true);\n  const closeReverbModal = () => setReverbModalOpen(false);\n  const reverb = () => {\n    if (buffers.length >= 1) {\n      let buffer = waveData[0].waveSurfer.getDecodedData();\n      if (!buffer) return;\n      let clone = utils.clone(buffer);\n      storeBuffer(clone);\n      let region = waveData[0].regions.getRegions()[0];\n      let sampleRate = buffer.sampleRate;\n      let start = Math.floor(region.start * sampleRate);\n      let end = Math.ceil(region.end * sampleRate);\n      let bufferSize = end - start;\n      let channelLeft = buffer.getChannelData(0);\n      let channelRight = buffer.getChannelData(1);\n      let samplesLeft = new Float32Array(channelLeft.subarray(start, end));\n      let samplesRight = new Float32Array(channelRight.subarray(start, end));\n      const combDelays = [0.0297, 0.0371, 0.0411, 0.0437].map(t => Math.floor(t * sampleRate));\n      const combGains = [0.773, 0.802, 0.753, 0.733];\n      const allPassDelays = [0.005, 0.0017].map(t => Math.floor(t * sampleRate));\n      const decayFactor = decay || 0.5;\n      const wetLevel = reverbWet || 0.5;\n      const processCombFilters = samples => {\n        const combBuffers = combDelays.map(delay => new Float32Array(delay).fill(0));\n        let output = new Float32Array(samples.length);\n        for (let i = 0; i < samples.length; i++) {\n          let wetSample = 0;\n          for (let c = 0; c < combBuffers.length; c++) {\n            const delay = combBuffers[c];\n            const delayIndex = i % delay.length;\n            const delayedSample = delay[delayIndex];\n            wetSample += delayedSample;\n            delay[delayIndex] = samples[i] + delayedSample * combGains[c] * decayFactor;\n          }\n          output[i] = wetSample;\n        }\n        return output;\n      };\n      let combOutputLeft = processCombFilters(samplesLeft);\n      let combOutputRight = processCombFilters(samplesRight);\n      const processAllPassFilters = samples => {\n        const allPassBuffers = allPassDelays.map(delay => new Float32Array(delay).fill(0));\n        for (let i = 0; i < samples.length; i++) {\n          for (let a = 0; a < allPassBuffers.length; a++) {\n            const delay = allPassBuffers[a];\n            const delayIndex = i % delay.length;\n            const delayedSample = delay[delayIndex];\n            const allPassSample = -0.7 * samples[i] + delayedSample + 0.7 * samples[i];\n            delay[delayIndex] = samples[i] + delayedSample * 0.7;\n            samples[i] = allPassSample;\n          }\n        }\n        return samples;\n      };\n      let allPassOutputLeft = processAllPassFilters(combOutputLeft);\n      let allPassOutputRight = processAllPassFilters(combOutputRight);\n      for (let i = 0; i < bufferSize; i++) {\n        channelLeft[start + i] = (1 - wetLevel) * samplesLeft[i] + wetLevel * allPassOutputLeft[i];\n        channelRight[start + i] = (1 - wetLevel) * samplesRight[i] + wetLevel * allPassOutputRight[i];\n      }\n      console.log('Reverb Applied');\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const closeEquaModal = () => setEquaModalOpen(false);\n  const openEquaModal = () => {\n    setEquaInit(true);\n    setEquaModalOpen(true);\n  };\n  const cut = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let sampleRate = buffer.sampleRate;\n    let region = waveData[0].regions.getRegions()[0];\n    let slicedBuffer = getAudioSlice(buffer, region);\n    copyBufs[0] = slicedBuffer;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    if (start === 0 || end === buffer.length) {\n      if (start === 0) {\n        let newBuf = getAudioSlice(buffer, region.end, buffer.duration);\n        let blob = blobber(newBuf);\n        waveData[0].waveSurfer.empty();\n        waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n        return;\n      } else if (end === buffer.length) {\n        let newBuf = getAudioSlice(buffer, 0, region.start);\n        let blob = blobber(newBuf);\n        waveData[0].waveSurfer.empty();\n        waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n        return;\n      } else {\n        return;\n      }\n    } else {\n      let newBuf1 = getAudioSlice(buffer, 0, region.start);\n      let newBuf2 = getAudioSlice(buffer, region.end, buffer.duration);\n      let newBuf = utils.concat(newBuf1, newBuf2);\n      let blob = blobber(newBuf);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menubackground\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentStyle\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"navigationButtonStyle\",\n          onClick: handleBack,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"simpleButtonStyle\",\n          onClick: reverse,\n          children: \"Reverse Selected Region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"simpleButtonStyle\",\n          onClick: fadeIn,\n          children: \"Fade In Region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"simpleButtonStyle\",\n          onClick: fadeOut,\n          children: \"Fade Out Region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"simpleButtonStyle\",\n          onClick: cut,\n          children: \"Cut Region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 9\n        }, this), isGainModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlayStyle\",\n            onClick: closeGainModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalStyle\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Gain Percentage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"gains\",\n              type: \"range\",\n              min: \"0\",\n              max: \"200\",\n              step: \"0.01\",\n              value: gainValue,\n              onInput: e => setGainValue(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"gainVal\",\n              children: [gainValue, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeGainModal,\n              className: \"navigationButtonStyle\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: adjustGain,\n              className: \"navigationButtonStyle\",\n              children: \"Apply Gain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), isDelayModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlayStyle\",\n            onClick: closeDelayModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalStyle\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Delay Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"delayT\",\n              type: \"range\",\n              min: \"0\",\n              max: \"6\",\n              step: \"0.01\",\n              value: delayTime,\n              onInput: e => setDelayTime(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"delayVal\",\n              children: delayTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"feedback\",\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.01\",\n              value: feedback,\n              onInput: e => setFeedback(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"feedVal\",\n              children: feedback\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Wet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"wets\",\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.01\",\n              value: wetness,\n              onInput: e => setWetness(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"wetVal\",\n              children: wetness\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Dry\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"dryer\",\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.01\",\n              value: dryness,\n              onInput: e => setDryness(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"dryVal\",\n              children: dryness\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeDelayModal,\n              className: \"navigationButtonStyle\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: delay,\n              className: \"navigationButtonStyle\",\n              children: \"Apply Delay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), isDistortionModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlayStyle\",\n            onClick: closeDistortionModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalStyle\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Gain Percentage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"gains\",\n              type: \"range\",\n              min: \"0\",\n              max: \"200\",\n              step: \"0.01\",\n              value: gainDistortValue,\n              onInput: e => setGainDistortValue(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"gainDistortVal\",\n              children: [gainDistortValue, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeDistortionModal,\n              className: \"navigationButtonStyle\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: distort,\n              className: \"navigationButtonStyle\",\n              children: \"Apply Distortion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), isReverbModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlayStyle\",\n            onClick: closeReverbModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalStyle\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"reverbT\",\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.01\",\n              value: reverbTime,\n              onInput: e => setReverbTime(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"reverbTime\",\n              children: reverbTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Decay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"decay\",\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.01\",\n              value: decay,\n              onInput: e => setDecay(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"decayVal\",\n              children: decay\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Wet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"wetR\",\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.01\",\n              value: reverbWet,\n              onInput: e => setReverbWet(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"wetRVal\",\n              children: reverbWet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeReverbModal,\n              className: \"navigationButtonStyle\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: reverb,\n              className: \"navigationButtonStyle\",\n              children: \"Apply Reverb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), isEquaModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlayStyle\",\n            onClick: closeEquaModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalStyle\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '5px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"32Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 658,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter0\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter0Val,\n                  onInput: e => setFilter0(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 659,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"0\",\n                  children: [filter0Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 669,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"64Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 673,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter1\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter1Val,\n                  onInput: e => setFilter1(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"1\",\n                  children: [filter1Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 684,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 672,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"125Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 688,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter2\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter2Val,\n                  onInput: e => setFilter2(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 689,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"2\",\n                  children: [filter2Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 699,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"250Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 703,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter3\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter3Val,\n                  onInput: e => setFilter3(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 704,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"3\",\n                  children: [filter3Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 714,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 702,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"500Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 718,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter4\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter4Val,\n                  onInput: e => setFilter4(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 719,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"4\",\n                  children: [filter4Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"1000Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 734,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter5\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter5Val,\n                  onInput: e => setFilter5(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 735,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"5\",\n                  children: [filter5Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 745,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 733,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"2000Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 749,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter6\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter6Val,\n                  onInput: e => setFilter6(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 750,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"6\",\n                  children: [filter6Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 760,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 748,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"4000Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 764,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter7\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter7Val,\n                  onInput: e => setFilter7(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 765,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"7\",\n                  children: [filter7Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 775,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 763,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"8000Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 779,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter8\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter8Val,\n                  onInput: e => setFilter8(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 780,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"8\",\n                  children: [filter8Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 790,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"16000Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 794,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter9\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter9Val,\n                  onInput: e => setFilter9(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 795,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"9\",\n                  children: [filter9Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 805,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 793,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: closeEquaModal,\n                className: \"navigationButtonStyle\",\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: setFilter,\n                className: \"navigationButtonStyle\",\n                children: \"Apply EQ\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"resetButtonStyle\",\n          onClick: undo,\n          children: \"Undo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"resetButtonStyle\",\n          onClick: reset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"navigationButtonStyle\",\n          onClick: toggleAdvancedOptions,\n          children: showAdvanced ? 'Hide Advanced' : 'Show Advanced'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 9\n        }, this), showAdvanced && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"advancedOptions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButtonStyle\",\n            onClick: normalize,\n            children: \"Normalize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButtonStyle\",\n            onClick: invert,\n            children: \"Invert Selected Region\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButtonStyle\",\n            onClick: openGainModal,\n            children: \"Adjust Gain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButtonStyle\",\n            onClick: openDelayModal,\n            children: \"Adjust Delay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButtonStyle\",\n            onClick: openDistortionModal,\n            children: \"Apply Distortion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 839,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButtonStyle\",\n            onClick: openReverbModal,\n            children: \"Apply Reverb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButtonStyle\",\n            onClick: openEquaModal,\n            children: \"10-Band Equalizer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 477,\n    columnNumber: 5\n  }, this);\n}\n_s(Menu, \"PserJ18w0MdLzsh5j4f0UzPqt1g=\");\n_c = Menu;\nexport default Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","utils","require","blobber","slicer","buffers","copyBufs","storeBuffer","buffer","push","getAudioSlice","start","end","error","slicedBuffer","console","sliceBuffer","Menu","handleBack","waveData","_s","filters","isGainModalOpen","setGainModalOpen","isDelayModalOpen","setDelayModalOpen","isDistortionModalOpen","setDistortionModalOpen","isReverbModalOpen","setReverbModalOpen","isEquaModalOpen","setEquaModalOpen","isEquaInit","setEquaInit","gainValue","setGainValue","delayTime","setDelayTime","feedback","setFeedback","wetness","setWetness","dryness","setDryness","gainDistortValue","setGainDistortValue","reverbTime","setReverbTime","decay","setDecay","reverbWet","setReverbWet","filter0Val","setFilter0","gain","value","filter1Val","setFilter1","filter2Val","setFilter2","filter3Val","setFilter3","filter4Val","setFilter4","filter5Val","setFilter5","filter6Val","setFilter6","filter7Val","setFilter7","filter8Val","setFilter8","filter9Val","setFilter9","showAdvanced","setShowAdvanced","toggleAdvancedOptions","prev","webAudioPlayer","gainNode","connect","audioContext","destination","setFilter","log","undo","length","blob","pop","waveSurfer","empty","loadBlob","catch","reset","reverse","getDecodedData","clone","region","regions","getRegions","sampleRate","invert","normalize","openGainModal","closeGainModal","adjustGain","Math","floor","ceil","channel","numberOfChannels","channelData","getChannelData","sample","fadeIn","stepInc","currGain","steps","fadeOut","openDistortionModal","closeDistortionModal","distort","wet","dry","drySample","wetSample","atan","openDelayModal","closeDelayModal","delay","feeder","numChannels","delaySamples","delayBuffer","Float32Array","fill","i","delayIndex","delayedSample","channelLeft","channelRight","delayBufferLeft","delayBufferRight","delayedLeft","delayedRight","openReverbModal","closeReverbModal","reverb","bufferSize","samplesLeft","subarray","samplesRight","combDelays","map","t","combGains","allPassDelays","decayFactor","wetLevel","processCombFilters","samples","combBuffers","output","c","combOutputLeft","combOutputRight","processAllPassFilters","allPassBuffers","a","allPassSample","allPassOutputLeft","allPassOutputRight","closeEquaModal","openEquaModal","cut","newBuf","duration","newBuf1","newBuf2","concat","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","type","min","max","step","onInput","e","target","style","display","gap","_c","$RefreshReg$"],"sources":["C:/Users/elect/Documents/CIS/4914/Mellowdies/mellowdies/src/Landingpage/Menu.js"],"sourcesContent":["import React, {useState}  from 'react';\r\nimport './Menu.css';\r\n\r\nvar utils = require(\"audio-buffer-utils\");\r\nvar blobber = require('audiobuffer-to-blob');\r\nvar slicer = require('audiobuffer-slice');\r\n\r\nlet buffers = [];\r\nlet copyBufs = [];\r\nfunction storeBuffer (buffer) {\r\n  buffers.push(buffer);\r\n}\r\n\r\nfunction getAudioSlice(buffer, start, end) {\r\n  slicer(buffer, start * 1000, end * 1000, function(error, slicedBuffer) {\r\n      if (error) {\r\n          console.error(error);\r\n          return;\r\n      } else {\r\n          sliceBuffer = slicedBuffer;\r\n      }\r\n  })\r\n  return sliceBuffer;\r\n}\r\n\r\nfunction Menu({ handleBack, waveData}) {\r\n  const filters = waveData[0].filters;\r\n  const [isGainModalOpen, setGainModalOpen] = useState(false);\r\n  const [isDelayModalOpen, setDelayModalOpen] = useState(false);\r\n  const [isDistortionModalOpen, setDistortionModalOpen] = useState(false);\r\n  const [isReverbModalOpen, setReverbModalOpen] = useState(false);\r\n  const [isEquaModalOpen, setEquaModalOpen] = useState(false);\r\n  const [isEquaInit, setEquaInit] = useState(false);\r\n  const [gainValue, setGainValue] = useState(100);\r\n  const [delayTime, setDelayTime] = useState(0.00);\r\n  const [feedback, setFeedback] = useState(0.00);\r\n  const [wetness, setWetness] = useState(0.00);\r\n  const [dryness, setDryness] = useState(0.00);\r\n  const [gainDistortValue, setGainDistortValue] = useState(100);\r\n  const [reverbTime, setReverbTime] = useState(0.00);\r\n  const [decay, setDecay] = useState(0.00);\r\n  const [reverbWet, setReverbWet] = useState(0.00);\r\n  const [filter0Val, setFilter0] = useState(filters[0].gain.value);\r\n  const [filter1Val, setFilter1] = useState(filters[1].gain.value);\r\n  const [filter2Val, setFilter2] = useState(filters[2].gain.value);\r\n  const [filter3Val, setFilter3] = useState(filters[3].gain.value);\r\n  const [filter4Val, setFilter4] = useState(filters[4].gain.value);\r\n  const [filter5Val, setFilter5] = useState(filters[5].gain.value);\r\n  const [filter6Val, setFilter6] = useState(filters[6].gain.value);\r\n  const [filter7Val, setFilter7] = useState(filters[7].gain.value);\r\n  const [filter8Val, setFilter8] = useState(filters[8].gain.value);\r\n  const [filter9Val, setFilter9] = useState(filters[9].gain.value);\r\n  const [showAdvanced, setShowAdvanced] = useState(false);\r\n\r\n  const toggleAdvancedOptions = () => {\r\n    setShowAdvanced((prev) => !prev);\r\n  };\r\n\r\n  if (isEquaInit === false) {\r\n    waveData[0].webAudioPlayer.gainNode.connect(filters[0])\r\n    filters[0].connect(filters[1]);\r\n    filters[1].connect(filters[2]);\r\n    filters[2].connect(filters[3]);\r\n    filters[3].connect(filters[4]);\r\n    filters[4].connect(filters[5]);\r\n    filters[5].connect(filters[6]);\r\n    filters[6].connect(filters[7]);\r\n    filters[7].connect(filters[8]);\r\n    filters[8].connect(filters[9]);\r\n    filters[9].connect(waveData[0].webAudioPlayer.audioContext.destination);\r\n  }\r\n  \r\n  const setFilter = () => {\r\n      filters[0].gain.value = filter0Val;\r\n      filters[1].gain.value = filter1Val;\r\n      filters[2].gain.value = filter2Val;\r\n      filters[3].gain.value = filter3Val;\r\n      filters[4].gain.value = filter4Val;\r\n      filters[5].gain.value = filter5Val;\r\n      filters[6].gain.value = filter6Val;\r\n      filters[7].gain.value = filter7Val;\r\n      filters[8].gain.value = filter8Val;\r\n      filters[9].gain.value = filter9Val;\r\n      console.log(\"EQ applied\")\r\n  }\r\n  \r\n  const undo = () => {\r\n    if (buffers.length > 1) {\r\n      let blob = blobber(buffers.pop());\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  }\r\n\r\n  const reset = () => {\r\n    if (buffers.length >= 1) {\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blobber(buffers[0])).catch(error => console.log(error));\r\n      buffers = [];\r\n    }\r\n  }\r\n\r\n  const reverse = () => {\r\n    if (buffers.length >= 1) {\r\n      let buffer = waveData[0].waveSurfer.getDecodedData();\r\n      let clone = utils.clone(buffer)\r\n      storeBuffer(clone);\r\n      let region = (waveData[0].regions.getRegions())[0];\r\n      let sampleRate = buffer.sampleRate;\r\n      if (buffer) {\r\n        utils.reverse(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n        console.log(\"Reversed region.\");\r\n        let blob = blobber(buffer);\r\n        waveData[0].waveSurfer.empty();\r\n        waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n      } else {\r\n        console.error('No audio buffer loaded');\r\n      }\r\n    }\r\n  };\r\n\r\n  const invert = () => {\r\n    if (buffers.length >= 1) {\r\n      let buffer = waveData[0].waveSurfer.getDecodedData();\r\n      let clone = utils.clone(buffer)\r\n      storeBuffer(clone);\r\n      let region = (waveData[0].regions.getRegions())[0];\r\n      let sampleRate = buffer.sampleRate;\r\n      if (buffer) {\r\n        utils.invert(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n        console.log(\"Inverted region.\");\r\n        let blob = blobber(buffer);\r\n        waveData[0].waveSurfer.empty();\r\n        waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n      } else {\r\n        console.error('No audio buffer loaded');\r\n      }\r\n    }\r\n  };\r\n\r\n  const normalize = () => {\r\n    if (buffers.length >= 1) {\r\n      let buffer = waveData[0].waveSurfer.getDecodedData();\r\n      let clone = utils.clone(buffer)\r\n      storeBuffer(clone);\r\n      let region = (waveData[0].regions.getRegions())[0];\r\n      let sampleRate = buffer.sampleRate;\r\n      if (buffer) {\r\n        utils.normalize(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n        console.log(\"Normalized region.\");\r\n        let blob = blobber(buffer);\r\n        waveData[0].waveSurfer.empty();\r\n        waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n      } else {\r\n        console.error('No audio buffer loaded');\r\n      }\r\n    }\r\n  };\r\n\r\n  const openGainModal = () => setGainModalOpen(true);\r\n  const closeGainModal = () => setGainModalOpen(false);\r\n\r\n  const adjustGain = () => {\r\n    if (buffers.length >= 1) {\r\n      let buffer = waveData[0].waveSurfer.getDecodedData();\r\n      let clone = utils.clone(buffer)\r\n      storeBuffer(clone);\r\n      let region = (waveData[0].regions.getRegions())[0];\r\n      let sampleRate = buffer.sampleRate;\r\n      let gain = gainValue / 100;\r\n      let start = Math.floor(region.start * sampleRate);\r\n      let end = Math.ceil(region.end * sampleRate);\r\n\r\n      if (buffer) {\r\n        for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n          let channelData = buffer.getChannelData(channel);\r\n      \r\n          for (let sample = start; sample < end; sample += 1) {\r\n              channelData[sample] *= gain;\r\n          }\r\n        }\r\n        console.log('Gain adjusted:', gain);\r\n        let blob = blobber(buffer);\r\n        waveData[0].waveSurfer.empty();\r\n        waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n      }\r\n    }\r\n  };\r\n\r\n  const fadeIn = () => {\r\n    if (buffers.length >= 1) {\r\n      let buffer = waveData[0].waveSurfer.getDecodedData();\r\n      let clone = utils.clone(buffer)\r\n      storeBuffer(clone);\r\n      let region = (waveData[0].regions.getRegions())[0];\r\n      let sampleRate = buffer.sampleRate;\r\n      let start = Math.floor(region.start * sampleRate);\r\n      let end = Math.ceil(region.end * sampleRate);\r\n      let stepInc = 1 / (end-start);\r\n      let currGain = 0;\r\n      let steps = 0;\r\n\r\n      if (buffer) {\r\n        for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n          let channelData = buffer.getChannelData(channel);\r\n      \r\n          for (let sample = start; sample < end; sample += 1) {\r\n              channelData[sample] *= (currGain + (steps * stepInc));\r\n              steps += 1;\r\n          }\r\n          steps = 0;\r\n        }\r\n        console.log('Region Faded In');\r\n        let blob = blobber(buffer);\r\n        waveData[0].waveSurfer.empty();\r\n        waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n      }\r\n    }\r\n  };\r\n\r\n  const fadeOut = () => {\r\n    if (buffers.length >= 1) {\r\n      let buffer = waveData[0].waveSurfer.getDecodedData();\r\n      let clone = utils.clone(buffer)\r\n      storeBuffer(clone);\r\n      let region = (waveData[0].regions.getRegions())[0];\r\n      let sampleRate = buffer.sampleRate;\r\n      let start = Math.floor(region.start * sampleRate);\r\n      let end = Math.ceil(region.end * sampleRate);\r\n      let stepInc = 1 / (end-start);\r\n      let currGain = 1;\r\n      let steps = 0;\r\n\r\n      if (buffer) {\r\n        for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n          let channelData = buffer.getChannelData(channel);\r\n      \r\n          for (let sample = start; sample < end; sample += 1) {\r\n              channelData[sample] *= (currGain - (steps * stepInc));\r\n              steps += 1;\r\n          }\r\n          steps = 0;\r\n        }\r\n        console.log('Region Faded In');\r\n        let blob = blobber(buffer);\r\n        waveData[0].waveSurfer.empty();\r\n        waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n      }\r\n    }\r\n  };\r\n\r\n  const openDistortionModal = () => setDistortionModalOpen(true);\r\n  const closeDistortionModal = () => setDistortionModalOpen(false);\r\n\r\n  const distort = () => {\r\n    if (buffers.length >= 1) {\r\n      let buffer = waveData[0].waveSurfer.getDecodedData();\r\n      if (!buffer) return;\r\n\r\n      let clone = utils.clone(buffer);\r\n      storeBuffer(clone);\r\n\r\n      let region = waveData[0].regions.getRegions()[0];\r\n      let sampleRate = buffer.sampleRate;\r\n\r\n      const gain = gainDistortValue / 100; \r\n      const wet = 0.5;\r\n      const dry = 1 - wet; \r\n\r\n      let start = Math.floor(region.start * sampleRate);\r\n      let end = Math.ceil(region.end * sampleRate);\r\n\r\n      if (buffer) {\r\n          for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n              let channelData = buffer.getChannelData(channel);\r\n\r\n              for (let sample = start; sample < end; sample += 1) {\r\n                  const drySample = channelData[sample];\r\n                  const wetSample = Math.atan(gain * drySample);\r\n                  channelData[sample] = (dry * drySample) + (wet * wetSample);\r\n              }\r\n          }\r\n\r\n          console.log('Distorted Region Applied', { gain, wet });\r\n          let blob = blobber(buffer);\r\n          waveData[0].waveSurfer.empty();\r\n          waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n      }\r\n    }\r\n};\r\n\r\n\r\n  const openDelayModal = () => setDelayModalOpen(true);\r\n  const closeDelayModal = () => setDelayModalOpen(false);\r\n\r\n  const delay = () => {\r\n    if (buffers.length >= 1) {\r\n      let buffer = waveData[0].waveSurfer.getDecodedData();\r\n      if (!buffer) return;\r\n\r\n      let clone = utils.clone(buffer);\r\n      storeBuffer(clone);\r\n\r\n      let region = waveData[0].regions.getRegions()[0];\r\n      let sampleRate = buffer.sampleRate;\r\n      let start = Math.floor(region.start * sampleRate);\r\n      let end = Math.ceil(region.end * sampleRate);\r\n      let wet = wetness;\r\n      let dry = dryness;\r\n      let feeder = feedback;\r\n\r\n      let numChannels = buffer.numberOfChannels;\r\n      let delaySamples = Math.ceil(sampleRate * delayTime);\r\n\r\n      if (numChannels === 1) {\r\n          let channelData = buffer.getChannelData(0);\r\n          let delayBuffer = new Float32Array(delaySamples).fill(0);\r\n\r\n          for (let i = start; i < end; i++) {\r\n              let delayIndex = (i - start) % delaySamples;\r\n              let delayedSample = delayBuffer[delayIndex];\r\n              channelData[i] = (channelData[i] * dry) + (delayedSample * wet);\r\n              delayBuffer[delayIndex] = (feeder * delayedSample) + channelData[i];\r\n          }\r\n      } else if (numChannels === 2) {\r\n          let channelLeft = buffer.getChannelData(0);\r\n          let channelRight = buffer.getChannelData(1);\r\n          let delayBufferLeft = new Float32Array(delaySamples).fill(0);\r\n          let delayBufferRight = new Float32Array(delaySamples).fill(0);\r\n\r\n          for (let i = start; i < end; i++) {\r\n              let delayIndex = (i - start) % delaySamples;\r\n              let delayedLeft = delayBufferLeft[delayIndex];\r\n              channelLeft[i] = (channelLeft[i] * dry) + (delayedLeft * wet);\r\n              delayBufferLeft[delayIndex] = (feeder * delayedLeft) + channelLeft[i];\r\n              let delayedRight = delayBufferRight[delayIndex];\r\n              channelRight[i] = (channelRight[i] * dry) + (delayedRight * wet);\r\n              delayBufferRight[delayIndex] = (feeder * delayedRight) + channelRight[i];\r\n          }\r\n      }\r\n      console.log(\"Region Delayed\");\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.error(error));\r\n    }\r\n};\r\n\r\n\r\n  const openReverbModal = () => setReverbModalOpen(true);\r\n  const closeReverbModal = () => setReverbModalOpen(false);\r\n\r\n  const reverb = () => {\r\n    if (buffers.length >= 1) {\r\n      let buffer = waveData[0].waveSurfer.getDecodedData();\r\n      if (!buffer) return;\r\n\r\n      let clone = utils.clone(buffer);\r\n      storeBuffer(clone);\r\n\r\n      let region = waveData[0].regions.getRegions()[0];\r\n      let sampleRate = buffer.sampleRate;\r\n      let start = Math.floor(region.start * sampleRate);\r\n      let end = Math.ceil(region.end * sampleRate);\r\n      let bufferSize = end - start;\r\n\r\n      let channelLeft = buffer.getChannelData(0);\r\n      let channelRight = buffer.getChannelData(1);\r\n      let samplesLeft = new Float32Array(channelLeft.subarray(start, end));\r\n      let samplesRight = new Float32Array(channelRight.subarray(start, end));\r\n\r\n      const combDelays = [0.0297, 0.0371, 0.0411, 0.0437].map(t => Math.floor(t * sampleRate));\r\n      const combGains = [0.773, 0.802, 0.753, 0.733];\r\n      const allPassDelays = [0.005, 0.0017].map(t => Math.floor(t * sampleRate));\r\n      const decayFactor = decay || 0.5;\r\n      const wetLevel = reverbWet || 0.5;\r\n\r\n      const processCombFilters = (samples) => {\r\n          const combBuffers = combDelays.map(delay => new Float32Array(delay).fill(0));\r\n          let output = new Float32Array(samples.length);\r\n\r\n          for (let i = 0; i < samples.length; i++) {\r\n              let wetSample = 0;\r\n              for (let c = 0; c < combBuffers.length; c++) {\r\n                  const delay = combBuffers[c];\r\n                  const delayIndex = i % delay.length;\r\n                  const delayedSample = delay[delayIndex];\r\n                  wetSample += delayedSample;\r\n                  delay[delayIndex] = samples[i] + delayedSample * combGains[c] * decayFactor;\r\n              }\r\n              output[i] = wetSample;\r\n          }\r\n          return output;\r\n      };\r\n\r\n      let combOutputLeft = processCombFilters(samplesLeft);\r\n      let combOutputRight = processCombFilters(samplesRight);\r\n\r\n      const processAllPassFilters = (samples) => {\r\n          const allPassBuffers = allPassDelays.map(delay => new Float32Array(delay).fill(0));\r\n\r\n          for (let i = 0; i < samples.length; i++) {\r\n              for (let a = 0; a < allPassBuffers.length; a++) {\r\n                  const delay = allPassBuffers[a];\r\n                  const delayIndex = i % delay.length;\r\n                  const delayedSample = delay[delayIndex];\r\n\r\n                  const allPassSample = -0.7 * samples[i] + delayedSample + 0.7 * samples[i];\r\n                  delay[delayIndex] = samples[i] + delayedSample * 0.7;\r\n                  samples[i] = allPassSample;\r\n              }\r\n          }\r\n          return samples;\r\n      };\r\n\r\n      let allPassOutputLeft = processAllPassFilters(combOutputLeft);\r\n      let allPassOutputRight = processAllPassFilters(combOutputRight);\r\n\r\n      for (let i = 0; i < bufferSize; i++) {\r\n          channelLeft[start + i] = ((1 - wetLevel) * samplesLeft[i]) + (wetLevel * allPassOutputLeft[i]);\r\n          channelRight[start + i] = ((1 - wetLevel) * samplesRight[i]) + (wetLevel * allPassOutputRight[i]);\r\n      }\r\n\r\n      console.log('Reverb Applied');\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n};\r\n\r\n\r\n  const closeEquaModal = () => setEquaModalOpen(false);\r\n  const openEquaModal = () => {\r\n    setEquaInit(true);\r\n    setEquaModalOpen(true);\r\n  }\r\n\r\n  const cut = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let sampleRate = buffer.sampleRate;\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let slicedBuffer = getAudioSlice(buffer, region);\r\n    copyBufs[0] = slicedBuffer;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    if (start === 0 || end === buffer.length) {\r\n      if (start === 0) {\r\n        let newBuf = getAudioSlice(buffer, region.end, buffer.duration);\r\n        let blob = blobber(newBuf);\r\n        waveData[0].waveSurfer.empty();\r\n        waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n        return;\r\n      }\r\n      else if (end === buffer.length) {\r\n        let newBuf = getAudioSlice(buffer, 0, region.start);\r\n        let blob = blobber(newBuf);\r\n        waveData[0].waveSurfer.empty();\r\n        waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n        return;\r\n      }\r\n      else {\r\n        return;\r\n      }\r\n    }\r\n    else {\r\n      let newBuf1 = getAudioSlice(buffer, 0, region.start);\r\n      let newBuf2 = getAudioSlice(buffer, region.end, buffer.duration);\r\n      let newBuf = utils.concat(newBuf1, newBuf2);\r\n      let blob = blobber(newBuf);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n      return;\r\n    }\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className=\"menubackground\">\r\n      <div className=\"contentStyle\">\r\n        <div className='buttonContainer'>\r\n        <button className=\"navigationButtonStyle\" onClick={handleBack}>Back</button>\r\n\r\n        <button  className=\"simpleButtonStyle\" onClick={reverse}>\r\n          Reverse Selected Region\r\n        </button>\r\n\r\n        <button  className=\"simpleButtonStyle\" onClick={fadeIn}>\r\n          Fade In Region\r\n        </button>\r\n\r\n        <button  className=\"simpleButtonStyle\" onClick={fadeOut}>\r\n          Fade Out Region\r\n        </button>\r\n\r\n        <button  className=\"simpleButtonStyle\" onClick={cut}>\r\n          Cut Region\r\n        </button>\r\n\r\n        {isGainModalOpen && (\r\n          <>\r\n             <div className=\"overlayStyle\" onClick={closeGainModal} />\r\n              <div className=\"modalStyle\">\r\n                <h2>Gain Percentage</h2>\r\n                <input\r\n                  id=\"gains\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"200\"\r\n                  step=\"0.01\"\r\n                  value={gainValue}\r\n                  onInput={(e) => setGainValue(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"gainVal\">{gainValue}%</output>\r\n              <button onClick={closeGainModal} className=\"navigationButtonStyle\">Close</button>\r\n              <button onClick={adjustGain} className=\"navigationButtonStyle\">Apply Gain</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {isDelayModalOpen && (\r\n          <>\r\n             <div className=\"overlayStyle\" onClick={closeDelayModal} />\r\n              <div className=\"modalStyle\">\r\n                <h2>Delay Time</h2>\r\n                <input\r\n                  id=\"delayT\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"6\"\r\n                  step=\"0.01\"\r\n                  value={delayTime}\r\n                  onInput={(e) => setDelayTime(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"delayVal\">{delayTime}</output>\r\n\r\n                <h2>Feedback</h2>\r\n                <input\r\n                  id=\"feedback\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={feedback}\r\n                  onInput={(e) => setFeedback(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"feedVal\">{feedback}</output>\r\n\r\n                <h2>Wet</h2>\r\n                <input\r\n                  id=\"wets\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={wetness}\r\n                  onInput={(e) => setWetness(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"wetVal\">{wetness}</output>\r\n\r\n                <h2>Dry</h2>\r\n                <input\r\n                  id=\"dryer\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={dryness}\r\n                  onInput={(e) => setDryness(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"dryVal\">{dryness}</output>\r\n              <button onClick={closeDelayModal} className=\"navigationButtonStyle\">Close</button>\r\n              <button onClick={delay} className=\"navigationButtonStyle\">Apply Delay</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {isDistortionModalOpen && (\r\n          <>\r\n             <div className=\"overlayStyle\" onClick={closeDistortionModal} />\r\n              <div className=\"modalStyle\">\r\n                <h2>Gain Percentage</h2>\r\n                <input\r\n                  id=\"gains\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"200\"\r\n                  step=\"0.01\"\r\n                  value={gainDistortValue}\r\n                  onInput={(e) => setGainDistortValue(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"gainDistortVal\">{gainDistortValue}%</output>\r\n              <button onClick={closeDistortionModal} className=\"navigationButtonStyle\">Close</button>\r\n              <button onClick={distort} className=\"navigationButtonStyle\">Apply Distortion</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {isReverbModalOpen && (\r\n          <>\r\n             <div className=\"overlayStyle\" onClick={closeReverbModal} />\r\n              <div className=\"modalStyle\">\r\n                <h2>Time</h2>\r\n                <input\r\n                  id=\"reverbT\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={reverbTime}\r\n                  onInput={(e) => setReverbTime(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"reverbTime\">{reverbTime}</output>\r\n\r\n                <h2>Decay</h2>\r\n                <input\r\n                  id=\"decay\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={decay}\r\n                  onInput={(e) => setDecay(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"decayVal\">{decay}</output>\r\n\r\n                <h2>Wet</h2>\r\n                <input\r\n                  id=\"wetR\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={reverbWet}\r\n                  onInput={(e) => setReverbWet(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"wetRVal\">{reverbWet}</output>\r\n\r\n              <button onClick={closeReverbModal} className=\"navigationButtonStyle\">Close</button>\r\n              <button onClick={reverb} className=\"navigationButtonStyle\">Apply Reverb</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {isEquaModalOpen && (\r\n          <>\r\n             <div className=\"overlayStyle\" onClick={closeEquaModal} />\r\n              <div className=\"modalStyle\">\r\n              <div style={{ display: 'flex', gap: '5px' }}>\r\n                <div className=\"sliderContainerStyle\">\r\n                  <h2>32Hz</h2>\r\n                    <input\r\n                      id=\"filter0\"\r\n                      type=\"range\"\r\n                      min=\"-40\"\r\n                      max=\"40\"\r\n                      step=\"0.1\"\r\n                      value={filter0Val}\r\n                      onInput={(e) => setFilter0(e.target.value)}\r\n                      className=\"verticalSliderStyle\"\r\n                    />\r\n                    <output id=\"0\">{filter0Val} dB</output>\r\n                </div>\r\n                \r\n                <div className=\"sliderContainerStyle\">\r\n                  <h2>64Hz</h2>\r\n                    <input\r\n                      id=\"filter1\"\r\n                      type=\"range\"\r\n                      min=\"-40\"\r\n                      max=\"40\"\r\n                      step=\"0.1\"\r\n                      value={filter1Val}\r\n                      onInput={(e) => setFilter1(e.target.value)}\r\n                      className=\"verticalSliderStyle\"\r\n                    />\r\n                    <output id=\"1\">{filter1Val} dB</output>\r\n                </div>\r\n\r\n                <div className=\"sliderContainerStyle\">\r\n                  <h2>125Hz</h2>\r\n                  <input\r\n                    id=\"filter2\"\r\n                    type=\"range\"\r\n                    min=\"-40\"\r\n                    max=\"40\"\r\n                    step=\"0.1\"\r\n                    value={filter2Val}\r\n                    onInput={(e) => setFilter2(e.target.value)}\r\n                    className=\"verticalSliderStyle\"\r\n                  />\r\n                  <output id=\"2\">{filter2Val} dB</output>\r\n                  </div>\r\n\r\n                <div className=\"sliderContainerStyle\"> \r\n                <h2>250Hz</h2>\r\n                <input\r\n                  id=\"filter3\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter3Val}\r\n                  onInput={(e) => setFilter3(e.target.value)}\r\n                  className=\"verticalSliderStyle\"\r\n                />\r\n                <output id=\"3\">{filter3Val} dB</output>\r\n                </div>\r\n                 \r\n                <div className=\"sliderContainerStyle\">\r\n                <h2>500Hz</h2>\r\n                <input\r\n                  id=\"filter4\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter4Val}\r\n                  onInput={(e) => setFilter4(e.target.value)}\r\n                  className=\"verticalSliderStyle\"\r\n                />\r\n                <output id=\"4\">{filter4Val} dB</output>\r\n                </div>\r\n                 \r\n\r\n                <div className=\"sliderContainerStyle\">\r\n                <h2>1000Hz</h2>\r\n                <input\r\n                  id=\"filter5\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter5Val}\r\n                  onInput={(e) => setFilter5(e.target.value)}\r\n                  className=\"verticalSliderStyle\"\r\n                />\r\n                <output id=\"5\">{filter5Val} dB</output>\r\n                </div>\r\n                 \r\n                <div className=\"sliderContainerStyle\">\r\n                <h2>2000Hz</h2>\r\n                <input\r\n                  id=\"filter6\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter6Val}\r\n                  onInput={(e) => setFilter6(e.target.value)}\r\n                  className=\"verticalSliderStyle\"\r\n                />\r\n                <output id=\"6\">{filter6Val} dB</output>\r\n                </div>\r\n                 \r\n                <div className=\"sliderContainerStyle\">\r\n                <h2>4000Hz</h2>\r\n                <input\r\n                  id=\"filter7\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter7Val}\r\n                  onInput={(e) => setFilter7(e.target.value)}\r\n                  className=\"verticalSliderStyle\"\r\n                />\r\n                <output id=\"7\">{filter7Val} dB</output>\r\n                </div>\r\n                 \r\n                <div className=\"sliderContainerStyle\">\r\n                <h2>8000Hz</h2>\r\n                <input\r\n                  id=\"filter8\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter8Val}\r\n                  onInput={(e) => setFilter8(e.target.value)}\r\n                  className=\"verticalSliderStyle\"\r\n                />\r\n                <output id=\"8\">{filter8Val} dB</output>\r\n                </div>\r\n                 \r\n                <div className=\"sliderContainerStyle\">\r\n                <h2>16000Hz</h2>\r\n                <input\r\n                  id=\"filter9\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter9Val}\r\n                  onInput={(e) => setFilter9(e.target.value)}\r\n                  className=\"verticalSliderStyle\"\r\n                />\r\n                <output id=\"9\">{filter9Val} dB</output>\r\n                </div>\r\n\r\n              <button onClick={closeEquaModal} className=\"navigationButtonStyle\">Close</button>\r\n              <button onClick={setFilter} className=\"navigationButtonStyle\">Apply EQ</button>\r\n\r\n            </div>\r\n            </div>\r\n          </>\r\n        )}\r\n        <button  className=\"resetButtonStyle\" onClick={undo}>\r\n          Undo\r\n        </button>\r\n\r\n        <button  className=\"resetButtonStyle\" onClick={reset}>\r\n          Reset\r\n        </button>\r\n        <button className=\"navigationButtonStyle\" onClick={toggleAdvancedOptions}>\r\n            {showAdvanced ? 'Hide Advanced' : 'Show Advanced'}\r\n          </button>\r\n          {showAdvanced && (\r\n            <div className=\"advancedOptions\">\r\n              <button className=\"modalButtonStyle\" onClick={normalize}>\r\n                Normalize\r\n              </button>\r\n              <button  className=\"modalButtonStyle\" onClick={invert}>\r\n                Invert Selected Region\r\n              </button>\r\n              <button  className=\"modalButtonStyle\" onClick={openGainModal}>\r\n                Adjust Gain\r\n              </button>\r\n              <button  className=\"modalButtonStyle\" onClick={openDelayModal}>\r\n                Adjust Delay\r\n              </button>\r\n              <button  className=\"modalButtonStyle\" onClick={openDistortionModal}>\r\n                Apply Distortion\r\n              </button>\r\n              <button  className=\"modalButtonStyle\" onClick={openReverbModal}>\r\n          Apply Reverb\r\n        </button>\r\n        <button  className=\"modalButtonStyle\" onClick={openEquaModal}>\r\n          10-Band Equalizer\r\n        </button>\r\n              {/* Add other advanced buttons here as needed */}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}