{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elect\\\\Documents\\\\CIS\\\\4914\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Menu.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst menubackground = {\n  width: '25%',\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'flex-start',\n  alignItems: 'left',\n  border: '2px solid #ffffff',\n  backgroundColor: '#ffffff',\n  fontFamily: \"'Concert One', cursive\",\n  fontSize: '1.2rem',\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\n  border: 'none',\n  position: 'fixed',\n  top: '0',\n  left: '0',\n  zIndex: '1000',\n  paddingTop: '20px',\n  overflowY: 'auto',\n  // Enable vertical scrolling\n  maxHeight: '100%' // Set a maximum height for the menu\n};\nconst backButtonStyle = {\n  marginTop: '10px',\n  background: '#007bff',\n  color: '#fff',\n  border: 'none',\n  padding: '10px 20px',\n  borderRadius: '5px',\n  cursor: 'pointer',\n  fontSize: '16px',\n  textAlign: 'center',\n  width: 'auto',\n  display: 'inline-block',\n  transition: 'background 0.3s ease'\n};\nconst reverseButtonStyle = {\n  ...backButtonStyle,\n  background: '#ff5722' // Different color for reverse button\n};\nconst sliderStyle = {\n  width: '80%',\n  margin: '10px auto'\n};\nconst adjustGainButtonStyle = {\n  ...backButtonStyle,\n  background: '#4caf50' // Different color for adjust gain button\n};\nconst modalStyle = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: '300px',\n  backgroundColor: '#fff',\n  padding: '20px',\n  borderRadius: '10px',\n  boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.3)',\n  zIndex: '1001'\n};\nconst overlayStyle = {\n  position: 'fixed',\n  top: '0',\n  left: '0',\n  right: '0',\n  bottom: '0',\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  zIndex: '1000'\n};\nconst contentStyle = {\n  flexGrow: 1,\n  paddingTop: '20px'\n};\nvar utils = require(\"audio-buffer-utils\");\nvar blobber = require('audiobuffer-to-blob');\nfunction Menu({\n  handleBack,\n  waveData\n}) {\n  _s();\n  const [isGainModalOpen, setGainModalOpen] = useState(false);\n  const [isDelayModalOpen, setDelayModalOpen] = useState(false);\n  const [gainValue, setGainValue] = useState(100);\n  const [delayTime, setDelayTime] = useState(0.00);\n  const [feedback, setFeedback] = useState(0.00);\n  const [wetness, setWetness] = useState(0.00);\n  const [dryness, setDryness] = useState(0.00);\n  const reverse = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    if (buffer) {\n      utils.reverse(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n      console.log(\"Reversed region.\");\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    } else {\n      console.error('No audio buffer loaded');\n    }\n  };\n  const invert = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    if (buffer) {\n      utils.invert(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n      console.log(\"Inverted region.\");\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    } else {\n      console.error('No audio buffer loaded');\n    }\n  };\n  const normalize = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    if (buffer) {\n      utils.normalize(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n      console.log(\"Normalized region.\");\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    } else {\n      console.error('No audio buffer loaded');\n    }\n  };\n  const openGainModal = () => setGainModalOpen(true);\n  const closeGainModal = () => setGainModalOpen(false);\n  const adjustGain = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let gain = gainValue / 100;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] *= gain;\n        }\n      }\n      console.log('Gain adjusted:', gain);\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const fadeIn = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let stepInc = 1 / (end - start);\n    let currGain = 0;\n    let steps = 0;\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] *= currGain + steps * stepInc;\n          steps += 1;\n        }\n        steps = 0;\n      }\n      console.log('Region Faded In');\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const fadeOut = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let stepInc = 1 / (end - start);\n    let currGain = 1;\n    let steps = 0;\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] *= currGain - steps * stepInc;\n          steps += 1;\n        }\n        steps = 0;\n      }\n      console.log('Region Faded In');\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const distort = () => {\n    const deg = Math.PI / 180;\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let steps = 0;\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          const x = steps * 2 / (end - start) - 1;\n          channelData[sample] = channelData[sample] * ((3 + (end - start)) * x * 20 * deg / (Math.PI + (end - start) * Math.abs(x)));\n          steps += 1;\n        }\n        steps = 0;\n      }\n      console.log('Region Distorted');\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const openDelayModal = () => setDelayModalOpen(true);\n  const closeDelayModal = () => setDelayModalOpen(false);\n  const delay = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let delayLen = delayTime;\n    let delaySamples = Math.ceil(delayLen * sampleRate);\n    let wet = wetness;\n    let dry = dryness;\n    let feeder = feedback;\n    let index = 0;\n    if (buffer) {\n      let numChannels = buffer.numberOfChannels;\n      if (numChannels === 1) {\n        let delayBuffer = new Float32Array(delaySamples);\n        let channelData = buffer.getChannelData(0);\n        delayBuffer = channelData;\n        for (let sample = start; sample < end; sample += 1) {\n          let delayed = delayBuffer[index];\n          channelData[sample] = channelData[sample] * dry + delayed * wet;\n          delayBuffer[index] = feeder * (delayed + channelData[sample]);\n          index += 1;\n          if (index >= delaySamples) {\n            index = 0;\n          }\n        }\n      } else if (numChannels === 2) {\n        let delayLeft = new Float32Array(delaySamples);\n        let delayRight = new Float32Array(delaySamples);\n        let channelLeft = buffer.getChannelData(0);\n        let channelRight = buffer.getChannelData(1);\n        delayLeft = channelLeft;\n        delayRight = channelRight;\n        for (let sample = start; sample < end; sample += 1) {\n          let delayed_left = delayLeft[index];\n          let delayed_right = delayRight[index];\n          channelLeft[sample] = channelLeft[sample] * dry + delayed_left * wet;\n          channelRight[sample] = channelRight[sample] * dry + delayed_right * wet;\n          delayLeft[index] = feeder * (delayed_left + channelLeft[sample]);\n          delayRight[index] = feeder * (delayed_right + channelRight[sample]);\n          index += 1;\n          if (index >= delaySamples) {\n            index = 0;\n          }\n        }\n      }\n      console.log('Region Delayed');\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: menubackground,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: contentStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: backButtonStyle,\n        onClick: handleBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: reverse,\n        children: \"Reverse Selected Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: invert,\n        children: \"Invert Selected Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: normalize,\n        children: \"Normalize Selected Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: fadeIn,\n        children: \"Fade In Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: fadeOut,\n        children: \"Fade Out Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: distort,\n        children: \"Distort Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: openGainModal,\n        children: \"Adjust Gain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), isGainModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: overlayStyle,\n          onClick: closeGainModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Gain Percentage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"gains\",\n            type: \"range\",\n            min: \"0\",\n            max: \"200\",\n            step: \"0.01\",\n            value: gainValue,\n            onInput: e => setGainValue(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"gainVal\",\n            children: [gainValue, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeGainModal,\n            style: backButtonStyle,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: adjustGain,\n            style: backButtonStyle,\n            children: \"Apply Gain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: openDelayModal,\n        children: \"Adjust Delay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), isDelayModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: overlayStyle,\n          onClick: closeDelayModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Delay Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"delayT\",\n            type: \"range\",\n            min: \"0\",\n            max: \"6\",\n            step: \"0.01\",\n            value: delayTime,\n            onInput: e => setDelayTime(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"delayVal\",\n            children: delayTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"feedback\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: feedback,\n            onInput: e => setFeedback(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"feedVal\",\n            children: feedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Wet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"wets\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: wetness,\n            onInput: e => setWetness(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"wetVal\",\n            children: wetness\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Dry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"dryer\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: dryness,\n            onInput: e => setDryness(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"dryVal\",\n            children: dryness\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeDelayModal,\n            style: backButtonStyle,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: delay,\n            style: backButtonStyle,\n            children: \"Apply Delay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n}\n_s(Menu, \"4iojscY2hZuX/Va6IRgQxJlIctg=\");\n_c = Menu;\nexport default Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","menubackground","width","height","display","flexDirection","justifyContent","alignItems","border","backgroundColor","fontFamily","fontSize","boxShadow","position","top","left","zIndex","paddingTop","overflowY","maxHeight","backButtonStyle","marginTop","background","color","padding","borderRadius","cursor","textAlign","transition","reverseButtonStyle","sliderStyle","margin","adjustGainButtonStyle","modalStyle","transform","overlayStyle","right","bottom","contentStyle","flexGrow","utils","require","blobber","Menu","handleBack","waveData","_s","isGainModalOpen","setGainModalOpen","isDelayModalOpen","setDelayModalOpen","gainValue","setGainValue","delayTime","setDelayTime","feedback","setFeedback","wetness","setWetness","dryness","setDryness","reverse","buffer","waveSurfer","getDecodedData","region","regions","getRegions","sampleRate","start","end","console","log","blob","empty","loadBlob","catch","error","invert","normalize","openGainModal","closeGainModal","adjustGain","gain","Math","floor","ceil","channel","numberOfChannels","channelData","getChannelData","sample","fadeIn","stepInc","currGain","steps","fadeOut","distort","deg","PI","x","abs","openDelayModal","closeDelayModal","delay","delayLen","delaySamples","wet","dry","feeder","index","numChannels","delayBuffer","Float32Array","delayed","delayLeft","delayRight","channelLeft","channelRight","delayed_left","delayed_right","style","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","type","min","max","step","value","onInput","e","target","_c","$RefreshReg$"],"sources":["C:/Users/elect/Documents/CIS/4914/Mellowdies/mellowdies/src/Landingpage/Menu.js"],"sourcesContent":["import React, {useState}  from 'react';\r\n\r\nconst menubackground = {\r\n  width: '25%',\r\n  height: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'flex-start',\r\n  alignItems: 'left',\r\n  border: '2px solid #ffffff',\r\n  backgroundColor: '#ffffff',\r\n  fontFamily: \"'Concert One', cursive\",\r\n  fontSize: '1.2rem',\r\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\r\n  border: 'none',\r\n  position: 'fixed',\r\n  top: '0',\r\n  left: '0',\r\n  zIndex: '1000',\r\n  paddingTop: '20px',\r\n  overflowY: 'auto', // Enable vertical scrolling\r\n  maxHeight: '100%', // Set a maximum height for the menu\r\n};\r\n\r\nconst backButtonStyle = {\r\n  marginTop: '10px',\r\n  background: '#007bff',\r\n  color: '#fff',\r\n  border: 'none',\r\n  padding: '10px 20px',\r\n  borderRadius: '5px',\r\n  cursor: 'pointer',\r\n  fontSize: '16px',\r\n  textAlign: 'center',\r\n  width: 'auto',\r\n  display: 'inline-block',\r\n  transition: 'background 0.3s ease',\r\n};\r\n\r\nconst reverseButtonStyle = {\r\n  ...backButtonStyle,\r\n  background: '#ff5722', // Different color for reverse button\r\n};\r\n\r\nconst sliderStyle = {\r\n  width: '80%',\r\n  margin: '10px auto',\r\n};\r\n\r\nconst adjustGainButtonStyle = {\r\n  ...backButtonStyle,\r\n  background: '#4caf50', // Different color for adjust gain button\r\n};\r\n\r\n\r\nconst modalStyle = {\r\n  position: 'fixed',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: '300px',\r\n  backgroundColor: '#fff',\r\n  padding: '20px',\r\n  borderRadius: '10px',\r\n  boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.3)',\r\n  zIndex: '1001',\r\n};\r\n\r\nconst overlayStyle = {\r\n  position: 'fixed',\r\n  top: '0',\r\n  left: '0',\r\n  right: '0',\r\n  bottom: '0',\r\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  zIndex: '1000',\r\n};\r\n\r\nconst contentStyle = {\r\n  flexGrow: 1,\r\n  paddingTop: '20px',\r\n};\r\n\r\nvar utils = require(\"audio-buffer-utils\");\r\nvar blobber = require('audiobuffer-to-blob');\r\n\r\n\r\nfunction Menu({ handleBack, waveData }) {\r\n  const [isGainModalOpen, setGainModalOpen] = useState(false);\r\n  const [isDelayModalOpen, setDelayModalOpen] = useState(false);\r\n  const [gainValue, setGainValue] = useState(100);\r\n  const [delayTime, setDelayTime] = useState(0.00);\r\n  const [feedback, setFeedback] = useState(0.00);\r\n  const [wetness, setWetness] = useState(0.00);\r\n  const [dryness, setDryness] = useState(0.00);\r\n  \r\n  const reverse = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    if (buffer) {\r\n      utils.reverse(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n      console.log(\"Reversed region.\");\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    } else {\r\n      console.error('No audio buffer loaded');\r\n    }\r\n  };\r\n\r\n  const invert = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    if (buffer) {\r\n      utils.invert(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n      console.log(\"Inverted region.\");\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    } else {\r\n      console.error('No audio buffer loaded');\r\n    }\r\n  };\r\n\r\n  const normalize = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    if (buffer) {\r\n      utils.normalize(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n      console.log(\"Normalized region.\");\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    } else {\r\n      console.error('No audio buffer loaded');\r\n    }\r\n  };\r\n\r\n  const openGainModal = () => setGainModalOpen(true);\r\n  const closeGainModal = () => setGainModalOpen(false);\r\n\r\n  const adjustGain = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let gain = gainValue / 100;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] *= gain;\r\n        }\r\n      }\r\n      console.log('Gain adjusted:', gain);\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const fadeIn = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let stepInc = 1 / (end-start);\r\n    let currGain = 0;\r\n    let steps = 0;\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] *= (currGain + (steps * stepInc));\r\n            steps += 1;\r\n        }\r\n        steps = 0;\r\n      }\r\n      console.log('Region Faded In');\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const fadeOut = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let stepInc = 1 / (end-start);\r\n    let currGain = 1;\r\n    let steps = 0;\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] *= (currGain - (steps * stepInc));\r\n            steps += 1;\r\n        }\r\n        steps = 0;\r\n      }\r\n      console.log('Region Faded In');\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const distort = () => {\r\n    const deg = Math.PI / 180;\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let steps = 0;\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            const x = (steps * 2) / (end - start) - 1;\r\n            channelData[sample] = channelData[sample] * (((3 + (end - start)) * x * 20 * deg) / (Math.PI + (end - start) * Math.abs(x))) ;\r\n            steps += 1;\r\n        }\r\n        steps = 0;\r\n      }\r\n      console.log('Region Distorted');\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const openDelayModal = () => setDelayModalOpen(true);\r\n  const closeDelayModal = () => setDelayModalOpen(false);\r\n\r\n  const delay = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let delayLen = delayTime;\r\n    let delaySamples = Math.ceil(delayLen * sampleRate);\r\n    let wet = wetness;\r\n    let dry = dryness;\r\n    let feeder = feedback;\r\n    let index = 0;\r\n\r\n    if (buffer) {\r\n      let numChannels = buffer.numberOfChannels;\r\n      if (numChannels === 1) {\r\n        let delayBuffer = new Float32Array(delaySamples);\r\n        let channelData = buffer.getChannelData(0);\r\n        delayBuffer = channelData;\r\n        for (let sample = start; sample < end; sample += 1) {\r\n          let delayed = delayBuffer[index];\r\n          channelData[sample] = (channelData[sample] * dry) + (delayed * wet) ;\r\n          delayBuffer[index] = feeder * (delayed + channelData[sample]);\r\n          index += 1;\r\n          if (index >= delaySamples) {\r\n            index = 0\r\n          }\r\n        }\r\n      } else if (numChannels === 2) {\r\n        let delayLeft = new Float32Array(delaySamples);\r\n        let delayRight = new Float32Array(delaySamples);\r\n        let channelLeft = buffer.getChannelData(0);\r\n        let channelRight = buffer.getChannelData(1);\r\n        delayLeft = channelLeft;\r\n        delayRight = channelRight;\r\n        for (let sample = start; sample < end; sample += 1) {\r\n          let delayed_left = delayLeft[index];\r\n          let delayed_right = delayRight[index];\r\n          channelLeft[sample] = (channelLeft[sample] * dry) + (delayed_left * wet) ;\r\n          channelRight[sample] = (channelRight[sample] * dry) + (delayed_right * wet) ;\r\n          delayLeft[index] = feeder * (delayed_left + channelLeft[sample]);\r\n          delayRight[index] = feeder * (delayed_right + channelRight[sample]);\r\n          index += 1;\r\n          if (index >= delaySamples) {\r\n            index = 0\r\n          }\r\n        }\r\n      }\r\n      console.log('Region Delayed');\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={menubackground}>\r\n      <div style={contentStyle}>\r\n        <button style={backButtonStyle} onClick={handleBack}>Back</button>\r\n\r\n        <button style={reverseButtonStyle} onClick={reverse}>\r\n          Reverse Selected Region\r\n        </button>\r\n\r\n        <button style={reverseButtonStyle} onClick={invert}>\r\n          Invert Selected Region\r\n        </button>\r\n\r\n        <button style={reverseButtonStyle} onClick={normalize}>\r\n          Normalize Selected Region\r\n        </button>\r\n\r\n        <button style={reverseButtonStyle} onClick={fadeIn}>\r\n          Fade In Region\r\n        </button>\r\n\r\n        <button style={reverseButtonStyle} onClick={fadeOut}>\r\n          Fade Out Region\r\n        </button>\r\n\r\n        <button style={reverseButtonStyle} onClick={distort}>\r\n          Distort Region\r\n        </button>\r\n        \r\n        <button style={adjustGainButtonStyle} onClick={openGainModal}>\r\n          Adjust Gain\r\n        </button>\r\n\r\n        {isGainModalOpen && (\r\n          <>\r\n             <div style={overlayStyle} onClick={closeGainModal} />\r\n              <div style={modalStyle}>\r\n                <h2>Gain Percentage</h2>\r\n                <input\r\n                  id=\"gains\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"200\"\r\n                  step=\"0.01\"\r\n                  value={gainValue}\r\n                  onInput={(e) => setGainValue(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"gainVal\">{gainValue}%</output>\r\n              <button onClick={closeGainModal} style={backButtonStyle}>Close</button>\r\n              <button onClick={adjustGain} style={backButtonStyle}>Apply Gain</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <button style={adjustGainButtonStyle} onClick={openDelayModal}>\r\n          Adjust Delay\r\n        </button>\r\n\r\n        {isDelayModalOpen && (\r\n          <>\r\n             <div style={overlayStyle} onClick={closeDelayModal} />\r\n              <div style={modalStyle}>\r\n                <h2>Delay Time</h2>\r\n                <input\r\n                  id=\"delayT\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"6\"\r\n                  step=\"0.01\"\r\n                  value={delayTime}\r\n                  onInput={(e) => setDelayTime(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"delayVal\">{delayTime}</output>\r\n\r\n                <h2>Feedback</h2>\r\n                <input\r\n                  id=\"feedback\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={feedback}\r\n                  onInput={(e) => setFeedback(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"feedVal\">{feedback}</output>\r\n\r\n                <h2>Wet</h2>\r\n                <input\r\n                  id=\"wets\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={wetness}\r\n                  onInput={(e) => setWetness(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"wetVal\">{wetness}</output>\r\n\r\n                <h2>Dry</h2>\r\n                <input\r\n                  id=\"dryer\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={dryness}\r\n                  onInput={(e) => setDryness(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"dryVal\">{dryness}</output>\r\n              <button onClick={closeDelayModal} style={backButtonStyle}>Close</button>\r\n              <button onClick={delay} style={backButtonStyle}>Apply Delay</button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}