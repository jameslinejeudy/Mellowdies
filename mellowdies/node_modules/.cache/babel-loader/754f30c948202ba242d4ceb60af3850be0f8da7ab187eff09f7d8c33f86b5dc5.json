{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\james\\\\Downloads\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Landingpage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport { useLocation } from 'react-router-dom';\nimport Sidebar from './Sidebar.js';\nimport cloud from '../images/cloud.png'; // Adjust the path if needed\nimport PlayButton from './PlayButton.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pagebackground = {\n  backgroundSize: 'cover',\n  backgroundImage: `url(${cloud})`,\n  // Set the image as the background\n  backgroundPosition: 'center',\n  // Centers the background\n  padding: '10px',\n  // Adjust the padding\n  height: '100vh',\n  // Full viewport height\n  margin: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  // Arrange children in a column\n  fontFamily: 'Concert One' // Use Concert One font\n};\nconst musicbackground = {\n  width: '75%',\n  height: '80%',\n  position: 'fixed',\n  top: '0',\n  // Position the box at the top of the screen\n  right: '0',\n  // Align the box to the right side of the screen\n  display: 'flex',\n  flexDirection: 'column',\n  // Stack waveforms vertically\n  justifyContent: 'flex-start',\n  alignItems: 'flex-start',\n  backgroundColor: 'rgba(255, 255, 255, 0.3)',\n  // Slightly transparent white background\n  marginTop: '5px',\n  // Space between the box and the top of the screen\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\n  // Soft, glowy white shadow\n  overflowY: 'auto',\n  // Enable vertical scrolling if needed\n  padding: '10px' // Add padding inside the music box\n};\nconst trackNameStyle = {\n  position: 'relative',\n  bottom: '10px',\n  // Position it 10px from the bottom\n  left: '10px',\n  // Position it 10px from the left\n  color: '#000000',\n  // Black text color for visibility\n  fontSize: '0.8rem',\n  // Adjust the font size\n  zIndex: '1002',\n  // Ensure it stays above other elements\n  padding: '5px',\n  // Optional: Add some padding around the text\n  borderRadius: '5px',\n  // Optional: Round the corners of the background\n  backgroundColor: 'rgba(255, 255, 255, 0.7)' // Background color for better readability\n};\nconst waveformStyle = {\n  width: '100%',\n  // Ensure waveform takes the full width of the container\n  height: '75px',\n  // Fixed height for each waveform\n  position: 'relative',\n  marginBottom: '20px' // Space between waveforms\n};\nfunction Landingpage() {\n  _s();\n  const wavesurferRefs = useRef([]); // Array to hold refs for each WaveSurfer instance\n  const location = useLocation();\n  const {\n    audioFiles\n  } = location.state || {\n    audioFiles: []\n  };\n  const [isReady, setIsReady] = useState(false); // State to track if WaveSurfer is ready\n  const [speed, setSpeed] = useState(1); // State for playback speed\n\n  useEffect(() => {\n    if (audioFiles && audioFiles.length > 0) {\n      wavesurferRefs.current = audioFiles.map(() => /*#__PURE__*/React.createRef());\n      audioFiles.forEach((file, index) => {\n        const container = wavesurferRefs.current[index].current;\n        if (container) {\n          const waveSurfer = WaveSurfer.create({\n            container,\n            waveColor: 'blue',\n            progressColor: '#00FFFF',\n            // The color of the progress bar\n            height: 75,\n            // Height of the waveform\n            autoCenter: true,\n            // Ensures the progress bar stays centered\n            interact: true,\n            // Enable user interaction (clicking, dragging)\n            backend: 'MediaElement',\n            // Use the MediaElement backend to support interaction\n            cursorWidth: 2,\n            // Visual indication of the cursor\n            cursorColor: '#FF0000',\n            backgroundColor: 'rgba(255, 255, 255, 0)',\n            // Transparent background\n            minPxPerSec: 100 // Zoom in on the waveform\n          });\n          waveSurfer.load(file.url);\n          waveSurfer.on('ready', () => {\n            setIsReady(true);\n          });\n          wavesurferRefs.current[index].waveSurfer = waveSurfer;\n        }\n      });\n\n      // Cleanup function to properly handle the destruction of WaveSurfer\n      return () => {\n        wavesurferRefs.current.forEach(ref => {\n          if (ref.waveSurfer) {\n            ref.waveSurfer.destroy();\n          }\n        });\n      };\n    } else {\n      console.log('No audio files available to display or waveformRef is not ready.');\n    }\n  }, [audioFiles]);\n  const playAllTracks = () => {\n    wavesurferRefs.current.forEach(ref => {\n      if (ref.waveSurfer) {\n        ref.waveSurfer.play();\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: pagebackground,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: musicbackground,\n      children: audioFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: waveformStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ref: wavesurferRefs.current[index],\n          style: {\n            width: '100%',\n            height: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: trackNameStyle,\n          children: file.name ? file.name : \"Track Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), audioFiles && audioFiles.length > 0 ? /*#__PURE__*/_jsxDEV(PlayButton, {\n      onClick: playAllTracks,\n      isReady: isReady,\n      speed: speed,\n      setSpeed: setSpeed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No audio tracks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n}\n_s(Landingpage, \"l0nJZ0HPLof0q4lA3/1oiywQ1rs=\", false, function () {\n  return [useLocation];\n});\n_c = Landingpage;\nexport default Landingpage;\nvar _c;\n$RefreshReg$(_c, \"Landingpage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","WaveSurfer","useLocation","Sidebar","cloud","PlayButton","jsxDEV","_jsxDEV","pagebackground","backgroundSize","backgroundImage","backgroundPosition","padding","height","margin","display","flexDirection","fontFamily","musicbackground","width","position","top","right","justifyContent","alignItems","backgroundColor","marginTop","boxShadow","overflowY","trackNameStyle","bottom","left","color","fontSize","zIndex","borderRadius","waveformStyle","marginBottom","Landingpage","_s","wavesurferRefs","location","audioFiles","state","isReady","setIsReady","speed","setSpeed","length","current","map","createRef","forEach","file","index","container","waveSurfer","create","waveColor","progressColor","autoCenter","interact","backend","cursorWidth","cursorColor","minPxPerSec","load","url","on","ref","destroy","console","log","playAllTracks","play","style","children","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/src/Landingpage/Landingpage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Sidebar from './Sidebar.js';\r\nimport cloud from '../images/cloud.png';  // Adjust the path if needed\r\nimport PlayButton from './PlayButton.js';\r\n\r\nconst pagebackground = {\r\n    backgroundSize: 'cover',\r\n    backgroundImage: `url(${cloud})`,  // Set the image as the background\r\n    backgroundPosition: 'center',  // Centers the background\r\n    padding: '10px',  // Adjust the padding\r\n    height: '100vh',  // Full viewport height\r\n    margin: 0,\r\n    display: 'flex',\r\n    flexDirection: 'column',  // Arrange children in a column\r\n    fontFamily: 'Concert One',  // Use Concert One font\r\n};\r\n\r\nconst musicbackground = {\r\n    width: '75%',\r\n    height: '80%',\r\n    position: 'fixed',\r\n    top: '0',  // Position the box at the top of the screen\r\n    right: '0',  // Align the box to the right side of the screen\r\n    display: 'flex',\r\n    flexDirection: 'column',  // Stack waveforms vertically\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'flex-start',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.3)',  // Slightly transparent white background\r\n    marginTop: '5px',  // Space between the box and the top of the screen\r\n    boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',  // Soft, glowy white shadow\r\n    overflowY: 'auto',  // Enable vertical scrolling if needed\r\n    padding: '10px', // Add padding inside the music box\r\n};\r\n\r\nconst trackNameStyle = {\r\n    position: 'relative',\r\n    bottom: '10px',  // Position it 10px from the bottom\r\n    left: '10px',  // Position it 10px from the left\r\n    color: '#000000',  // Black text color for visibility\r\n    fontSize: '0.8rem',  // Adjust the font size\r\n    zIndex: '1002',  // Ensure it stays above other elements\r\n    padding: '5px',  // Optional: Add some padding around the text\r\n    borderRadius: '5px',  // Optional: Round the corners of the background\r\n    backgroundColor: 'rgba(255, 255, 255, 0.7)',  // Background color for better readability\r\n};\r\n\r\nconst waveformStyle = {\r\n    width: '100%',  // Ensure waveform takes the full width of the container\r\n    height: '75px',  // Fixed height for each waveform\r\n    position: 'relative',\r\n    marginBottom: '20px',  // Space between waveforms\r\n};\r\n\r\nfunction Landingpage() {\r\n    const wavesurferRefs = useRef([]);  // Array to hold refs for each WaveSurfer instance\r\n    const location = useLocation();\r\n    const { audioFiles } = location.state || { audioFiles: [] };\r\n    const [isReady, setIsReady] = useState(false);  // State to track if WaveSurfer is ready\r\n    const [speed, setSpeed] = useState(1); // State for playback speed\r\n\r\n    useEffect(() => {\r\n        if (audioFiles && audioFiles.length > 0) {\r\n            wavesurferRefs.current = audioFiles.map(() => React.createRef());\r\n\r\n            audioFiles.forEach((file, index) => {\r\n                const container = wavesurferRefs.current[index].current;\r\n                if (container) {\r\n                    const waveSurfer = WaveSurfer.create({\r\n                        container,\r\n                        waveColor: 'blue',\r\n                        progressColor: '#00FFFF',  // The color of the progress bar\r\n                        height: 75,  // Height of the waveform\r\n                        autoCenter: true,  // Ensures the progress bar stays centered\r\n                        interact: true,  // Enable user interaction (clicking, dragging)\r\n                        backend: 'MediaElement',  // Use the MediaElement backend to support interaction\r\n                        cursorWidth: 2,  // Visual indication of the cursor\r\n                        cursorColor: '#FF0000',\r\n                        backgroundColor: 'rgba(255, 255, 255, 0)',  // Transparent background\r\n                        minPxPerSec: 100,  // Zoom in on the waveform\r\n                    });\r\n\r\n                    waveSurfer.load(file.url);\r\n\r\n                    waveSurfer.on('ready', () => {\r\n                        setIsReady(true);\r\n                    });\r\n\r\n                    wavesurferRefs.current[index].waveSurfer = waveSurfer;\r\n                }\r\n            });\r\n\r\n            // Cleanup function to properly handle the destruction of WaveSurfer\r\n            return () => {\r\n                wavesurferRefs.current.forEach(ref => {\r\n                    if (ref.waveSurfer) {\r\n                        ref.waveSurfer.destroy();\r\n                    }\r\n                });\r\n            };\r\n        } else {\r\n            console.log('No audio files available to display or waveformRef is not ready.');\r\n        }\r\n    }, [audioFiles]);\r\n\r\n    const playAllTracks = () => {\r\n        wavesurferRefs.current.forEach(ref => {\r\n            if (ref.waveSurfer) {\r\n                ref.waveSurfer.play();\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div style={pagebackground}>\r\n            <div style={musicbackground}>\r\n                {audioFiles.map((file, index) => (\r\n                    <div key={index} style={waveformStyle}>\r\n                        <div ref={wavesurferRefs.current[index]} style={{ width: '100%', height: '100%' }}></div>\r\n                        <div style={trackNameStyle}>\r\n                            {file.name ? file.name : \"Track Name\"}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <Sidebar/>\r\n\r\n            {audioFiles && audioFiles.length > 0 ? (\r\n                <PlayButton\r\n                    onClick={playAllTracks}\r\n                    isReady={isReady}\r\n                    speed={speed}\r\n                    setSpeed={setSpeed}\r\n                />\r\n            ) : (\r\n                <p>No audio tracks available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Landingpage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}