{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elect\\\\Documents\\\\CIS\\\\4914\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Menu.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Menu.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar utils = require(\"audio-buffer-utils\");\nvar blobber = require('audiobuffer-to-blob');\nlet buffers = [];\nfunction storeBuffer(buffer) {\n  buffers.push(buffer);\n}\nfunction combFilter(samples, sampleLength, delay, decay, sampleRate) {\n  let delaySamples = Math.ceil(delay * (sampleRate / 1000));\n  let combFilterSamples = samples;\n  for (let i = 0; i < sampleLength - delaySamples; i++) {\n    combFilterSamples[i + delaySamples] += combFilterSamples[i] * decay;\n  }\n  return combFilterSamples;\n}\nfunction allPassFilter(samples, sampleLength, sampleRate) {\n  let delaySamples = Math.ceil(88.69 * (sampleRate / 1000));\n  let allPassFilterSamples = new Float32Array(sampleLength);\n  let decayFactor = 0.131;\n  for (let i = 0; i < sampleLength; i++) {\n    allPassFilterSamples[i] = samples[i];\n    if (i - delaySamples >= 0) {\n      allPassFilterSamples[i] += allPassFilterSamples[i - delaySamples] * -decayFactor;\n    }\n    if (i - delaySamples >= 1) {\n      allPassFilterSamples[i] += allPassFilterSamples[i + 20 - delaySamples] * decayFactor;\n    }\n  }\n  let val = allPassFilterSamples[0];\n  let max = 0.0;\n  for (let i = 0; i < sampleLength; i++) {\n    if (Math.abs(allPassFilterSamples[i]) > max) {\n      max = Math.abs(allPassFilterSamples[i]);\n    }\n  }\n  for (let i = 0; i < allPassFilterSamples.length; i++) {\n    let currVal = allPassFilterSamples[i];\n    val = (val + (currVal - val)) / max;\n    allPassFilterSamples[i] = val;\n  }\n  return allPassFilterSamples;\n}\nfunction Menu({\n  handleBack,\n  waveData\n}) {\n  _s();\n  if (waveData[0].fileLoaded) {\n    const filters = waveData[0].filters;\n    const [isGainModalOpen, setGainModalOpen] = useState(false);\n    const [isDelayModalOpen, setDelayModalOpen] = useState(false);\n    const [isDistortionModalOpen, setDistortionModalOpen] = useState(false);\n    const [isReverbModalOpen, setReverbModalOpen] = useState(false);\n    const [isEquaModalOpen, setEquaModalOpen] = useState(false);\n    const [isEquaInit, setEquaInit] = useState(false);\n    const [gainValue, setGainValue] = useState(100);\n    const [delayTime, setDelayTime] = useState(0.00);\n    const [feedback, setFeedback] = useState(0.00);\n    const [wetness, setWetness] = useState(0.00);\n    const [dryness, setDryness] = useState(0.00);\n    const [gainDistortValue, setGainDistortValue] = useState(100);\n    const [reverbTime, setReverbTime] = useState(0.00);\n    const [decay, setDecay] = useState(0.00);\n    const [reverbWet, setReverbWet] = useState(0.00);\n    const [filter0Val, setFilter0] = useState(filters[0].gain.value);\n    const [filter1Val, setFilter1] = useState(filters[1].gain.value);\n    const [filter2Val, setFilter2] = useState(filters[2].gain.value);\n    const [filter3Val, setFilter3] = useState(filters[3].gain.value);\n    const [filter4Val, setFilter4] = useState(filters[4].gain.value);\n    const [filter5Val, setFilter5] = useState(filters[5].gain.value);\n    const [filter6Val, setFilter6] = useState(filters[6].gain.value);\n    const [filter7Val, setFilter7] = useState(filters[7].gain.value);\n    const [filter8Val, setFilter8] = useState(filters[8].gain.value);\n    const [filter9Val, setFilter9] = useState(filters[9].gain.value);\n    const [showAdvanced, setShowAdvanced] = useState(false);\n  }\n  const toggleAdvancedOptions = () => {\n    setShowAdvanced(prev => !prev);\n  };\n  if (isEquaInit === false) {\n    waveData[0].webAudioPlayer.gainNode.connect(filters[0]);\n    filters[0].connect(filters[1]);\n    filters[1].connect(filters[2]);\n    filters[2].connect(filters[3]);\n    filters[3].connect(filters[4]);\n    filters[4].connect(filters[5]);\n    filters[5].connect(filters[6]);\n    filters[6].connect(filters[7]);\n    filters[7].connect(filters[8]);\n    filters[8].connect(filters[9]);\n    filters[9].connect(waveData[0].webAudioPlayer.audioContext.destination);\n  }\n  const setFilter = () => {\n    filters[0].gain.value = filter0Val;\n    filters[1].gain.value = filter1Val;\n    filters[2].gain.value = filter2Val;\n    filters[3].gain.value = filter3Val;\n    filters[4].gain.value = filter4Val;\n    filters[5].gain.value = filter5Val;\n    filters[6].gain.value = filter6Val;\n    filters[7].gain.value = filter7Val;\n    filters[8].gain.value = filter8Val;\n    filters[9].gain.value = filter9Val;\n    console.log(\"EQ applied\");\n  };\n  const undo = () => {\n    if (buffers.length >= 1) {\n      let blob = blobber(buffers.pop());\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const reset = () => {\n    if (buffers.length >= 1) {\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blobber(buffers[0])).catch(error => console.log(error));\n      buffers = [];\n    }\n  };\n  const reverse = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    if (buffer) {\n      utils.reverse(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n      console.log(\"Reversed region.\");\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    } else {\n      console.error('No audio buffer loaded');\n    }\n  };\n  const invert = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    if (buffer) {\n      utils.invert(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n      console.log(\"Inverted region.\");\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    } else {\n      console.error('No audio buffer loaded');\n    }\n  };\n  const normalize = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    if (buffer) {\n      utils.normalize(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n      console.log(\"Normalized region.\");\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    } else {\n      console.error('No audio buffer loaded');\n    }\n  };\n  const openGainModal = () => setGainModalOpen(true);\n  const closeGainModal = () => setGainModalOpen(false);\n  const adjustGain = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let gain = gainValue / 100;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] *= gain;\n        }\n      }\n      console.log('Gain adjusted:', gain);\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const fadeIn = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let stepInc = 1 / (end - start);\n    let currGain = 0;\n    let steps = 0;\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] *= currGain + steps * stepInc;\n          steps += 1;\n        }\n        steps = 0;\n      }\n      console.log('Region Faded In');\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const fadeOut = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let stepInc = 1 / (end - start);\n    let currGain = 1;\n    let steps = 0;\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] *= currGain - steps * stepInc;\n          steps += 1;\n        }\n        steps = 0;\n      }\n      console.log('Region Faded In');\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const openDistortionModal = () => setDistortionModalOpen(true);\n  const closeDistortionModal = () => setDistortionModalOpen(false);\n  const distort = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let gain = gainDistortValue / 100;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] = Math.atan(gain * channelData[sample]);\n        }\n      }\n      console.log('Distorted Region', gain);\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const openDelayModal = () => setDelayModalOpen(true);\n  const closeDelayModal = () => setDelayModalOpen(false);\n  const delay = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let wet = wetness;\n    let dry = dryness;\n    let feeder = feedback;\n    let index = 0;\n    if (buffer) {\n      let numChannels = buffer.numberOfChannels;\n      if (numChannels === 1) {\n        let channelData = buffer.getChannelData(0);\n        let delayBuffer = new Float32Array(channelData.subarray(start, end + 1));\n        for (let sample = start; sample < end; sample += 1) {\n          let delayed = delayBuffer[index];\n          channelData[sample] = channelData[sample] * dry + delayed * wet;\n          delayBuffer[index] = feeder * (delayed + channelData[sample]);\n          index += 1;\n        }\n      } else if (numChannels === 2) {\n        let channelLeft = buffer.getChannelData(0);\n        let channelRight = buffer.getChannelData(1);\n        let delayLeft = new Float32Array(channelLeft.subarray(start, end + 1));\n        let delayRight = new Float32Array(channelRight.subarray(start, end + 1));\n        delayLeft = channelLeft;\n        delayRight = channelRight;\n        for (let sample = start; sample < end; sample += 1) {\n          let delayed_left = delayLeft[index];\n          let delayed_right = delayRight[index];\n          channelLeft[sample] = channelLeft[sample] * dry + delayed_left * wet;\n          channelRight[sample] = channelRight[sample] * dry + delayed_right * wet;\n          delayLeft[index] = feeder * (delayed_left + channelLeft[sample]);\n          delayRight[index] = feeder * (delayed_right + channelRight[sample]);\n          index += 1;\n        }\n      }\n      console.log('Region Delayed');\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const openReverbModal = () => setReverbModalOpen(true);\n  const closeReverbModal = () => setReverbModalOpen(false);\n  const reverb = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let clone = utils.clone(buffer);\n    storeBuffer(clone);\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let bufferSize = end - start;\n    let channelLeft = buffer.getChannelData(0);\n    let channelRight = buffer.getChannelData(1);\n    let samplesLeft = new Float32Array(channelLeft.subarray(start, end + 1));\n    let samplesRight = new Float32Array(channelRight.subarray(start, end + 1));\n    let delayinMilliSeconds = reverbTime * 1000;\n    let decayFactor = decay;\n    let combFilterSamplesLeft1 = combFilter(samplesLeft, bufferSize, delayinMilliSeconds, decayFactor, sampleRate);\n    let combFilterSamplesLeft2 = combFilter(samplesLeft, bufferSize, delayinMilliSeconds - 11.73, decayFactor - 0.1313, sampleRate);\n    let combFilterSamplesRight1 = combFilter(samplesRight, bufferSize, delayinMilliSeconds, decayFactor, sampleRate);\n    let combFilterSamplesRight2 = combFilter(samplesRight, bufferSize, delayinMilliSeconds - 11.73, decayFactor - 0.1313, sampleRate);\n    let outputCombLeft = new Float32Array(bufferSize);\n    let outputCombRight = new Float32Array(bufferSize);\n    for (let i = 0; i < bufferSize; i++) {\n      outputCombLeft[i] = combFilterSamplesLeft1[i] + combFilterSamplesLeft2[i];\n    }\n    for (let i = 0; i < bufferSize; i++) {\n      outputCombRight[i] = combFilterSamplesRight1[i] + combFilterSamplesRight2[i];\n    }\n    let audioMixLeft = new Float32Array(bufferSize);\n    let audioMixRight = new Float32Array(bufferSize);\n    for (let i = 0; i < bufferSize; i++) {\n      audioMixLeft[i] = (1 - reverbWet) * samplesLeft[i] + reverbWet * outputCombLeft[i];\n    }\n    for (let i = 0; i < bufferSize; i++) {\n      audioMixRight[i] = (1 - reverbWet) * samplesRight[i] + reverbWet * outputCombRight[i];\n    }\n    let allPassFilterSamplesLeft1 = allPassFilter(audioMixLeft, bufferSize, sampleRate);\n    let allPassFilterSamplesLeft2 = allPassFilter(allPassFilterSamplesLeft1, bufferSize, sampleRate);\n    let allPassFilterSamplesRight1 = allPassFilter(audioMixRight, bufferSize, sampleRate);\n    let allPassFilterSamplesRight2 = allPassFilter(allPassFilterSamplesRight1, bufferSize, sampleRate);\n    for (let i = 0; i < bufferSize; i++) {\n      channelLeft[start + i] = allPassFilterSamplesLeft2[i];\n      channelRight[start + i] = allPassFilterSamplesRight2[i];\n    }\n    console.log('Reverb Applied');\n    let blob = blobber(buffer);\n    waveData[0].waveSurfer.empty();\n    waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n  };\n  const closeEquaModal = () => setEquaModalOpen(false);\n  const openEquaModal = () => {\n    setEquaInit(true);\n    setEquaModalOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menubackground\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentStyle\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"navigationButtonStyle\",\n          onClick: handleBack,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"simpleButtonStyle\",\n          onClick: reverse,\n          children: \"Reverse Selected Region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"simpleButtonStyle\",\n          onClick: fadeIn,\n          children: \"Fade In Region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"simpleButtonStyle\",\n          onClick: fadeOut,\n          children: \"Fade Out Region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 9\n        }, this), isGainModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlayStyle\",\n            onClick: closeGainModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalStyle\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Gain Percentage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"gains\",\n              type: \"range\",\n              min: \"0\",\n              max: \"200\",\n              step: \"0.01\",\n              value: gainValue,\n              onInput: e => setGainValue(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"gainVal\",\n              children: [gainValue, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeGainModal,\n              className: \"navigationButtonStyle\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: adjustGain,\n              className: \"navigationButtonStyle\",\n              children: \"Apply Gain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), isDelayModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlayStyle\",\n            onClick: closeDelayModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalStyle\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Delay Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"delayT\",\n              type: \"range\",\n              min: \"0\",\n              max: \"6\",\n              step: \"0.01\",\n              value: delayTime,\n              onInput: e => setDelayTime(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"delayVal\",\n              children: delayTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Feedback\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"feedback\",\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.01\",\n              value: feedback,\n              onInput: e => setFeedback(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"feedVal\",\n              children: feedback\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Wet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"wets\",\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.01\",\n              value: wetness,\n              onInput: e => setWetness(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"wetVal\",\n              children: wetness\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Dry\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"dryer\",\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.01\",\n              value: dryness,\n              onInput: e => setDryness(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"dryVal\",\n              children: dryness\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeDelayModal,\n              className: \"navigationButtonStyle\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: delay,\n              className: \"navigationButtonStyle\",\n              children: \"Apply Delay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), isDistortionModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlayStyle\",\n            onClick: closeDistortionModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalStyle\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Gain Percentage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"gains\",\n              type: \"range\",\n              min: \"0\",\n              max: \"200\",\n              step: \"0.01\",\n              value: gainDistortValue,\n              onInput: e => setGainDistortValue(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"gainDistortVal\",\n              children: [gainDistortValue, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeDistortionModal,\n              className: \"navigationButtonStyle\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: distort,\n              className: \"navigationButtonStyle\",\n              children: \"Apply Distortion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), isReverbModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlayStyle\",\n            onClick: closeReverbModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalStyle\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"reverbT\",\n              type: \"range\",\n              min: \"0\",\n              max: \"3\",\n              step: \"0.01\",\n              value: reverbTime,\n              onInput: e => setReverbTime(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"reverbTime\",\n              children: reverbTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Decay\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"decay\",\n              type: \"range\",\n              min: \"0\",\n              max: \"3\",\n              step: \"0.01\",\n              value: decay,\n              onInput: e => setDecay(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"decayVal\",\n              children: decay\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Wet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"wetR\",\n              type: \"range\",\n              min: \"0\",\n              max: \"1\",\n              step: \"0.01\",\n              value: reverbWet,\n              onInput: e => setReverbWet(e.target.value),\n              className: \"sliderStyle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n              id: \"wetRVal\",\n              children: reverbWet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeReverbModal,\n              className: \"navigationButtonStyle\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: reverb,\n              className: \"navigationButtonStyle\",\n              children: \"Apply Reverb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), isEquaModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlayStyle\",\n            onClick: closeEquaModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modalStyle\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '5px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"32Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter0\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter0Val,\n                  onInput: e => setFilter0(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"0\",\n                  children: [filter0Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"64Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter1\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter1Val,\n                  onInput: e => setFilter1(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 597,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"1\",\n                  children: [filter1Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"125Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter2\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter2Val,\n                  onInput: e => setFilter2(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 612,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"2\",\n                  children: [filter2Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"250Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 626,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter3\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter3Val,\n                  onInput: e => setFilter3(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"3\",\n                  children: [filter3Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"500Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 641,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter4\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter4Val,\n                  onInput: e => setFilter4(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 642,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"4\",\n                  children: [filter4Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 652,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"1000Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 657,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter5\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter5Val,\n                  onInput: e => setFilter5(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 658,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"5\",\n                  children: [filter5Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 668,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 656,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"2000Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 672,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter6\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter6Val,\n                  onInput: e => setFilter6(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 673,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"6\",\n                  children: [filter6Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 683,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 671,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"4000Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter7\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter7Val,\n                  onInput: e => setFilter7(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 688,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"7\",\n                  children: [filter7Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 698,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"8000Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 702,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter8\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter8Val,\n                  onInput: e => setFilter8(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 703,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"8\",\n                  children: [filter8Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 713,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 701,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sliderContainerStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"16000Hz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 717,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"filter9\",\n                  type: \"range\",\n                  min: \"-40\",\n                  max: \"40\",\n                  step: \"0.1\",\n                  value: filter9Val,\n                  onInput: e => setFilter9(e.target.value),\n                  className: \"verticalSliderStyle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 718,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n                  id: \"9\",\n                  children: [filter9Val, \" dB\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 728,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: closeEquaModal,\n                className: \"navigationButtonStyle\",\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: setFilter,\n                className: \"navigationButtonStyle\",\n                children: \"Apply EQ\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"resetButtonStyle\",\n          onClick: undo,\n          children: \"Undo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"resetButtonStyle\",\n          onClick: reset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"navigationButtonStyle\",\n          onClick: toggleAdvancedOptions,\n          children: showAdvanced ? 'Hide Advanced' : 'Show Advanced'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 9\n        }, this), showAdvanced && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"advancedOptions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButtonStyle\",\n            onClick: normalize,\n            children: \"Normalize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButtonStyle\",\n            onClick: invert,\n            children: \"Invert Selected Region\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButtonStyle\",\n            onClick: openGainModal,\n            children: \"Adjust Gain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButtonStyle\",\n            onClick: openDelayModal,\n            children: \"Adjust Delay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButtonStyle\",\n            onClick: openDistortionModal,\n            children: \"Apply Distortion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButtonStyle\",\n            onClick: openReverbModal,\n            children: \"Apply Reverb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalButtonStyle\",\n            onClick: openEquaModal,\n            children: \"10-Band Equalizer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 404,\n    columnNumber: 5\n  }, this);\n}\n_s(Menu, \"PserJ18w0MdLzsh5j4f0UzPqt1g=\");\n_c = Menu;\nexport default Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","utils","require","blobber","buffers","storeBuffer","buffer","push","combFilter","samples","sampleLength","delay","decay","sampleRate","delaySamples","Math","ceil","combFilterSamples","i","allPassFilter","allPassFilterSamples","Float32Array","decayFactor","val","max","abs","length","currVal","Menu","handleBack","waveData","_s","fileLoaded","filters","isGainModalOpen","setGainModalOpen","isDelayModalOpen","setDelayModalOpen","isDistortionModalOpen","setDistortionModalOpen","isReverbModalOpen","setReverbModalOpen","isEquaModalOpen","setEquaModalOpen","isEquaInit","setEquaInit","gainValue","setGainValue","delayTime","setDelayTime","feedback","setFeedback","wetness","setWetness","dryness","setDryness","gainDistortValue","setGainDistortValue","reverbTime","setReverbTime","setDecay","reverbWet","setReverbWet","filter0Val","setFilter0","gain","value","filter1Val","setFilter1","filter2Val","setFilter2","filter3Val","setFilter3","filter4Val","setFilter4","filter5Val","setFilter5","filter6Val","setFilter6","filter7Val","setFilter7","filter8Val","setFilter8","filter9Val","setFilter9","showAdvanced","setShowAdvanced","toggleAdvancedOptions","prev","webAudioPlayer","gainNode","connect","audioContext","destination","setFilter","console","log","undo","blob","pop","waveSurfer","empty","loadBlob","catch","error","reset","reverse","getDecodedData","clone","region","regions","getRegions","start","end","invert","normalize","openGainModal","closeGainModal","adjustGain","floor","channel","numberOfChannels","channelData","getChannelData","sample","fadeIn","stepInc","currGain","steps","fadeOut","openDistortionModal","closeDistortionModal","distort","atan","openDelayModal","closeDelayModal","wet","dry","feeder","index","numChannels","delayBuffer","subarray","delayed","channelLeft","channelRight","delayLeft","delayRight","delayed_left","delayed_right","openReverbModal","closeReverbModal","reverb","bufferSize","samplesLeft","samplesRight","delayinMilliSeconds","combFilterSamplesLeft1","combFilterSamplesLeft2","combFilterSamplesRight1","combFilterSamplesRight2","outputCombLeft","outputCombRight","audioMixLeft","audioMixRight","allPassFilterSamplesLeft1","allPassFilterSamplesLeft2","allPassFilterSamplesRight1","allPassFilterSamplesRight2","closeEquaModal","openEquaModal","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","type","min","step","onInput","e","target","style","display","gap","_c","$RefreshReg$"],"sources":["C:/Users/elect/Documents/CIS/4914/Mellowdies/mellowdies/src/Landingpage/Menu.js"],"sourcesContent":["import React, {useState}  from 'react';\r\nimport './Menu.css';\r\n\r\nvar utils = require(\"audio-buffer-utils\");\r\nvar blobber = require('audiobuffer-to-blob');\r\n\r\nlet buffers = [];\r\nfunction storeBuffer (buffer) {\r\n  buffers.push(buffer);\r\n}\r\n\r\nfunction combFilter (samples, sampleLength, delay, decay, sampleRate) {\r\n  let delaySamples = Math.ceil(delay * (sampleRate / 1000));\r\n  let combFilterSamples = samples;\r\n  for (let i = 0; i < sampleLength - delaySamples; i++) {\r\n    combFilterSamples[i+delaySamples] += combFilterSamples[i] * decay;\r\n  }\r\n  return combFilterSamples;\r\n}\r\n\r\nfunction allPassFilter (samples, sampleLength, sampleRate) {\r\n  let delaySamples = Math.ceil(88.69 * (sampleRate/1000));\r\n  let allPassFilterSamples = new Float32Array(sampleLength);\r\n  let decayFactor = 0.131;\r\n  for (let i = 0; i < sampleLength; i++) {\r\n    allPassFilterSamples[i] = samples[i];\r\n    if (i - delaySamples >= 0) {\r\n      allPassFilterSamples[i] += allPassFilterSamples[i-delaySamples] * (-decayFactor);\r\n    }\r\n    if (i - delaySamples >= 1) {\r\n      allPassFilterSamples[i] += allPassFilterSamples[i+20-delaySamples] * decayFactor;\r\n    }\r\n  }\r\n  let val = allPassFilterSamples[0];\r\n  let max = 0.0;\r\n  for (let i = 0; i < sampleLength; i++) {\r\n    if(Math.abs(allPassFilterSamples[i]) > max) {\r\n      max = Math.abs(allPassFilterSamples[i]);\r\n    }\r\n  }\r\n  for (let i = 0; i < allPassFilterSamples.length; i++) {\r\n    let currVal = allPassFilterSamples[i];\r\n    val = (val + (currVal - val)) / max;\r\n    allPassFilterSamples[i] = val;\r\n  }\r\n  return allPassFilterSamples;\r\n}\r\n\r\nfunction Menu({ handleBack, waveData}) {\r\n  if (waveData[0].fileLoaded) {\r\n    const filters = waveData[0].filters;\r\n    const [isGainModalOpen, setGainModalOpen] = useState(false);\r\n    const [isDelayModalOpen, setDelayModalOpen] = useState(false);\r\n    const [isDistortionModalOpen, setDistortionModalOpen] = useState(false);\r\n    const [isReverbModalOpen, setReverbModalOpen] = useState(false);\r\n    const [isEquaModalOpen, setEquaModalOpen] = useState(false);\r\n    const [isEquaInit, setEquaInit] = useState(false);\r\n    const [gainValue, setGainValue] = useState(100);\r\n    const [delayTime, setDelayTime] = useState(0.00);\r\n    const [feedback, setFeedback] = useState(0.00);\r\n    const [wetness, setWetness] = useState(0.00);\r\n    const [dryness, setDryness] = useState(0.00);\r\n    const [gainDistortValue, setGainDistortValue] = useState(100);\r\n    const [reverbTime, setReverbTime] = useState(0.00);\r\n    const [decay, setDecay] = useState(0.00);\r\n    const [reverbWet, setReverbWet] = useState(0.00);\r\n    const [filter0Val, setFilter0] = useState(filters[0].gain.value);\r\n    const [filter1Val, setFilter1] = useState(filters[1].gain.value);\r\n    const [filter2Val, setFilter2] = useState(filters[2].gain.value);\r\n    const [filter3Val, setFilter3] = useState(filters[3].gain.value);\r\n    const [filter4Val, setFilter4] = useState(filters[4].gain.value);\r\n    const [filter5Val, setFilter5] = useState(filters[5].gain.value);\r\n    const [filter6Val, setFilter6] = useState(filters[6].gain.value);\r\n    const [filter7Val, setFilter7] = useState(filters[7].gain.value);\r\n    const [filter8Val, setFilter8] = useState(filters[8].gain.value);\r\n    const [filter9Val, setFilter9] = useState(filters[9].gain.value);\r\n    const [showAdvanced, setShowAdvanced] = useState(false);\r\n  }\r\n\r\n  const toggleAdvancedOptions = () => {\r\n    setShowAdvanced((prev) => !prev);\r\n  };\r\n\r\n  if (isEquaInit === false) {\r\n    waveData[0].webAudioPlayer.gainNode.connect(filters[0])\r\n    filters[0].connect(filters[1]);\r\n    filters[1].connect(filters[2]);\r\n    filters[2].connect(filters[3]);\r\n    filters[3].connect(filters[4]);\r\n    filters[4].connect(filters[5]);\r\n    filters[5].connect(filters[6]);\r\n    filters[6].connect(filters[7]);\r\n    filters[7].connect(filters[8]);\r\n    filters[8].connect(filters[9]);\r\n    filters[9].connect(waveData[0].webAudioPlayer.audioContext.destination);\r\n  }\r\n  \r\n  const setFilter = () => {\r\n      filters[0].gain.value = filter0Val;\r\n      filters[1].gain.value = filter1Val;\r\n      filters[2].gain.value = filter2Val;\r\n      filters[3].gain.value = filter3Val;\r\n      filters[4].gain.value = filter4Val;\r\n      filters[5].gain.value = filter5Val;\r\n      filters[6].gain.value = filter6Val;\r\n      filters[7].gain.value = filter7Val;\r\n      filters[8].gain.value = filter8Val;\r\n      filters[9].gain.value = filter9Val;\r\n      console.log(\"EQ applied\")\r\n  }\r\n  \r\n  const undo = () => {\r\n    if (buffers.length >= 1) {\r\n      let blob = blobber(buffers.pop());\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  }\r\n\r\n  const reset = () => {\r\n    if (buffers.length >= 1) {\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blobber(buffers[0])).catch(error => console.log(error));\r\n      buffers = [];\r\n    }\r\n  }\r\n\r\n  const reverse = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer)\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    if (buffer) {\r\n      utils.reverse(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n      console.log(\"Reversed region.\");\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    } else {\r\n      console.error('No audio buffer loaded');\r\n    }\r\n  };\r\n\r\n  const invert = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer)\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    if (buffer) {\r\n      utils.invert(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n      console.log(\"Inverted region.\");\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    } else {\r\n      console.error('No audio buffer loaded');\r\n    }\r\n  };\r\n\r\n  const normalize = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer)\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    if (buffer) {\r\n      utils.normalize(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n      console.log(\"Normalized region.\");\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    } else {\r\n      console.error('No audio buffer loaded');\r\n    }\r\n  };\r\n\r\n  const openGainModal = () => setGainModalOpen(true);\r\n  const closeGainModal = () => setGainModalOpen(false);\r\n\r\n  const adjustGain = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer)\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let gain = gainValue / 100;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] *= gain;\r\n        }\r\n      }\r\n      console.log('Gain adjusted:', gain);\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const fadeIn = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer)\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let stepInc = 1 / (end-start);\r\n    let currGain = 0;\r\n    let steps = 0;\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] *= (currGain + (steps * stepInc));\r\n            steps += 1;\r\n        }\r\n        steps = 0;\r\n      }\r\n      console.log('Region Faded In');\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const fadeOut = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer)\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let stepInc = 1 / (end-start);\r\n    let currGain = 1;\r\n    let steps = 0;\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] *= (currGain - (steps * stepInc));\r\n            steps += 1;\r\n        }\r\n        steps = 0;\r\n      }\r\n      console.log('Region Faded In');\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const openDistortionModal = () => setDistortionModalOpen(true);\r\n  const closeDistortionModal = () => setDistortionModalOpen(false);\r\n\r\n  const distort = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer)\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let gain = gainDistortValue / 100;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] = Math.atan(gain*channelData[sample]);\r\n        }\r\n      }\r\n      console.log('Distorted Region', gain);\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const openDelayModal = () => setDelayModalOpen(true);\r\n  const closeDelayModal = () => setDelayModalOpen(false);\r\n\r\n  const delay = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer)\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let wet = wetness;\r\n    let dry = dryness;\r\n    let feeder = feedback;\r\n    let index = 0;\r\n\r\n    if (buffer) {\r\n      let numChannels = buffer.numberOfChannels;\r\n      if (numChannels === 1) {\r\n        let channelData = buffer.getChannelData(0);\r\n        let delayBuffer = new Float32Array(channelData.subarray(start, end + 1));\r\n        for (let sample = start; sample < end; sample += 1) {\r\n          let delayed = delayBuffer[index];\r\n          channelData[sample] = (channelData[sample] * dry) + (delayed * wet) ;\r\n          delayBuffer[index] = feeder * (delayed + channelData[sample]);\r\n          index += 1;\r\n        }\r\n      } else if (numChannels === 2) {\r\n        let channelLeft = buffer.getChannelData(0);\r\n        let channelRight = buffer.getChannelData(1);\r\n        let delayLeft = new Float32Array(channelLeft.subarray(start, end + 1));\r\n        let delayRight = new Float32Array(channelRight.subarray(start, end + 1));\r\n        delayLeft = channelLeft;\r\n        delayRight = channelRight;\r\n        for (let sample = start; sample < end; sample += 1) {\r\n          let delayed_left = delayLeft[index];\r\n          let delayed_right = delayRight[index];\r\n          channelLeft[sample] = (channelLeft[sample] * dry) + (delayed_left * wet) ;\r\n          channelRight[sample] = (channelRight[sample] * dry) + (delayed_right * wet) ;\r\n          delayLeft[index] = feeder * (delayed_left + channelLeft[sample]);\r\n          delayRight[index] = feeder * (delayed_right + channelRight[sample]);\r\n          index += 1;\r\n        }\r\n      }\r\n      console.log('Region Delayed');\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const openReverbModal = () => setReverbModalOpen(true);\r\n  const closeReverbModal = () => setReverbModalOpen(false);\r\n\r\n  const reverb = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let clone = utils.clone(buffer)\r\n    storeBuffer(clone);\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let bufferSize = end - start;\r\n    let channelLeft = buffer.getChannelData(0);\r\n    let channelRight = buffer.getChannelData(1);\r\n    let samplesLeft = new Float32Array(channelLeft.subarray(start, end + 1));\r\n    let samplesRight = new Float32Array(channelRight.subarray(start, end + 1));\r\n    let delayinMilliSeconds = reverbTime * 1000;\r\n    let decayFactor = decay;\r\n    let combFilterSamplesLeft1 = combFilter(samplesLeft, bufferSize, delayinMilliSeconds, decayFactor, sampleRate);\r\n    let combFilterSamplesLeft2 = combFilter(samplesLeft, bufferSize, (delayinMilliSeconds - 11.73), (decayFactor - 0.1313), sampleRate);\r\n    let combFilterSamplesRight1 = combFilter(samplesRight, bufferSize, delayinMilliSeconds, decayFactor, sampleRate);\r\n    let combFilterSamplesRight2 = combFilter(samplesRight, bufferSize, (delayinMilliSeconds - 11.73), (decayFactor - 0.1313), sampleRate);\r\n    let outputCombLeft = new Float32Array(bufferSize);\r\n    let outputCombRight = new Float32Array(bufferSize);\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      outputCombLeft[i] = ((combFilterSamplesLeft1[i] + combFilterSamplesLeft2[i])) ;\r\n    }\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      outputCombRight[i] = ((combFilterSamplesRight1[i] + combFilterSamplesRight2[i])) ;\r\n    }\r\n    let audioMixLeft = new Float32Array(bufferSize);\r\n    let audioMixRight = new Float32Array(bufferSize);\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      audioMixLeft[i] = ((1 - reverbWet) * samplesLeft[i]) + (reverbWet * outputCombLeft[i]);\r\n    }\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      audioMixRight[i] = ((1 - reverbWet) * samplesRight[i]) + (reverbWet * outputCombRight[i]);\r\n    }\r\n    let allPassFilterSamplesLeft1 = allPassFilter(audioMixLeft, bufferSize, sampleRate);\r\n    let allPassFilterSamplesLeft2 = allPassFilter(allPassFilterSamplesLeft1, bufferSize, sampleRate);\r\n    let allPassFilterSamplesRight1 = allPassFilter(audioMixRight, bufferSize, sampleRate);\r\n    let allPassFilterSamplesRight2 = allPassFilter(allPassFilterSamplesRight1, bufferSize, sampleRate);\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      channelLeft[start + i] = allPassFilterSamplesLeft2[i];\r\n      channelRight[start + i] = allPassFilterSamplesRight2[i];\r\n    }\r\n    console.log('Reverb Applied');\r\n    let blob = blobber(buffer);\r\n    waveData[0].waveSurfer.empty();\r\n    waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n  }\r\n\r\n  const closeEquaModal = () => setEquaModalOpen(false);\r\n  const openEquaModal = () => {\r\n    setEquaInit(true);\r\n    setEquaModalOpen(true);\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className=\"menubackground\">\r\n      <div className=\"contentStyle\">\r\n        <div className='buttonContainer'>\r\n        <button className=\"navigationButtonStyle\" onClick={handleBack}>Back</button>\r\n\r\n        <button  className=\"simpleButtonStyle\" onClick={reverse}>\r\n          Reverse Selected Region\r\n        </button>\r\n\r\n        <button  className=\"simpleButtonStyle\" onClick={fadeIn}>\r\n          Fade In Region\r\n        </button>\r\n\r\n        <button  className=\"simpleButtonStyle\" onClick={fadeOut}>\r\n          Fade Out Region\r\n        </button>\r\n\r\n        {isGainModalOpen && (\r\n          <>\r\n             <div className=\"overlayStyle\" onClick={closeGainModal} />\r\n              <div className=\"modalStyle\">\r\n                <h2>Gain Percentage</h2>\r\n                <input\r\n                  id=\"gains\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"200\"\r\n                  step=\"0.01\"\r\n                  value={gainValue}\r\n                  onInput={(e) => setGainValue(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"gainVal\">{gainValue}%</output>\r\n              <button onClick={closeGainModal} className=\"navigationButtonStyle\">Close</button>\r\n              <button onClick={adjustGain} className=\"navigationButtonStyle\">Apply Gain</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {isDelayModalOpen && (\r\n          <>\r\n             <div className=\"overlayStyle\" onClick={closeDelayModal} />\r\n              <div className=\"modalStyle\">\r\n                <h2>Delay Time</h2>\r\n                <input\r\n                  id=\"delayT\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"6\"\r\n                  step=\"0.01\"\r\n                  value={delayTime}\r\n                  onInput={(e) => setDelayTime(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"delayVal\">{delayTime}</output>\r\n\r\n                <h2>Feedback</h2>\r\n                <input\r\n                  id=\"feedback\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={feedback}\r\n                  onInput={(e) => setFeedback(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"feedVal\">{feedback}</output>\r\n\r\n                <h2>Wet</h2>\r\n                <input\r\n                  id=\"wets\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={wetness}\r\n                  onInput={(e) => setWetness(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"wetVal\">{wetness}</output>\r\n\r\n                <h2>Dry</h2>\r\n                <input\r\n                  id=\"dryer\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={dryness}\r\n                  onInput={(e) => setDryness(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"dryVal\">{dryness}</output>\r\n              <button onClick={closeDelayModal} className=\"navigationButtonStyle\">Close</button>\r\n              <button onClick={delay} className=\"navigationButtonStyle\">Apply Delay</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {isDistortionModalOpen && (\r\n          <>\r\n             <div className=\"overlayStyle\" onClick={closeDistortionModal} />\r\n              <div className=\"modalStyle\">\r\n                <h2>Gain Percentage</h2>\r\n                <input\r\n                  id=\"gains\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"200\"\r\n                  step=\"0.01\"\r\n                  value={gainDistortValue}\r\n                  onInput={(e) => setGainDistortValue(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"gainDistortVal\">{gainDistortValue}%</output>\r\n              <button onClick={closeDistortionModal} className=\"navigationButtonStyle\">Close</button>\r\n              <button onClick={distort} className=\"navigationButtonStyle\">Apply Distortion</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {isReverbModalOpen && (\r\n          <>\r\n             <div className=\"overlayStyle\" onClick={closeReverbModal} />\r\n              <div className=\"modalStyle\">\r\n                <h2>Time</h2>\r\n                <input\r\n                  id=\"reverbT\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"3\"\r\n                  step=\"0.01\"\r\n                  value={reverbTime}\r\n                  onInput={(e) => setReverbTime(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"reverbTime\">{reverbTime}</output>\r\n\r\n                <h2>Decay</h2>\r\n                <input\r\n                  id=\"decay\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"3\"\r\n                  step=\"0.01\"\r\n                  value={decay}\r\n                  onInput={(e) => setDecay(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"decayVal\">{decay}</output>\r\n\r\n                <h2>Wet</h2>\r\n                <input\r\n                  id=\"wetR\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={reverbWet}\r\n                  onInput={(e) => setReverbWet(e.target.value)}\r\n                  className=\"sliderStyle\"\r\n                />\r\n                <output id=\"wetRVal\">{reverbWet}</output>\r\n\r\n              <button onClick={closeReverbModal} className=\"navigationButtonStyle\">Close</button>\r\n              <button onClick={reverb} className=\"navigationButtonStyle\">Apply Reverb</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {isEquaModalOpen && (\r\n          <>\r\n             <div className=\"overlayStyle\" onClick={closeEquaModal} />\r\n              <div className=\"modalStyle\">\r\n              <div style={{ display: 'flex', gap: '5px' }}>\r\n                <div className=\"sliderContainerStyle\">\r\n                  <h2>32Hz</h2>\r\n                    <input\r\n                      id=\"filter0\"\r\n                      type=\"range\"\r\n                      min=\"-40\"\r\n                      max=\"40\"\r\n                      step=\"0.1\"\r\n                      value={filter0Val}\r\n                      onInput={(e) => setFilter0(e.target.value)}\r\n                      className=\"verticalSliderStyle\"\r\n                    />\r\n                    <output id=\"0\">{filter0Val} dB</output>\r\n                </div>\r\n                \r\n                <div className=\"sliderContainerStyle\">\r\n                  <h2>64Hz</h2>\r\n                    <input\r\n                      id=\"filter1\"\r\n                      type=\"range\"\r\n                      min=\"-40\"\r\n                      max=\"40\"\r\n                      step=\"0.1\"\r\n                      value={filter1Val}\r\n                      onInput={(e) => setFilter1(e.target.value)}\r\n                      className=\"verticalSliderStyle\"\r\n                    />\r\n                    <output id=\"1\">{filter1Val} dB</output>\r\n                </div>\r\n\r\n                <div className=\"sliderContainerStyle\">\r\n                  <h2>125Hz</h2>\r\n                  <input\r\n                    id=\"filter2\"\r\n                    type=\"range\"\r\n                    min=\"-40\"\r\n                    max=\"40\"\r\n                    step=\"0.1\"\r\n                    value={filter2Val}\r\n                    onInput={(e) => setFilter2(e.target.value)}\r\n                    className=\"verticalSliderStyle\"\r\n                  />\r\n                  <output id=\"2\">{filter2Val} dB</output>\r\n                  </div>\r\n\r\n                <div className=\"sliderContainerStyle\"> \r\n                <h2>250Hz</h2>\r\n                <input\r\n                  id=\"filter3\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter3Val}\r\n                  onInput={(e) => setFilter3(e.target.value)}\r\n                  className=\"verticalSliderStyle\"\r\n                />\r\n                <output id=\"3\">{filter3Val} dB</output>\r\n                </div>\r\n                 \r\n                <div className=\"sliderContainerStyle\">\r\n                <h2>500Hz</h2>\r\n                <input\r\n                  id=\"filter4\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter4Val}\r\n                  onInput={(e) => setFilter4(e.target.value)}\r\n                  className=\"verticalSliderStyle\"\r\n                />\r\n                <output id=\"4\">{filter4Val} dB</output>\r\n                </div>\r\n                 \r\n\r\n                <div className=\"sliderContainerStyle\">\r\n                <h2>1000Hz</h2>\r\n                <input\r\n                  id=\"filter5\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter5Val}\r\n                  onInput={(e) => setFilter5(e.target.value)}\r\n                  className=\"verticalSliderStyle\"\r\n                />\r\n                <output id=\"5\">{filter5Val} dB</output>\r\n                </div>\r\n                 \r\n                <div className=\"sliderContainerStyle\">\r\n                <h2>2000Hz</h2>\r\n                <input\r\n                  id=\"filter6\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter6Val}\r\n                  onInput={(e) => setFilter6(e.target.value)}\r\n                  className=\"verticalSliderStyle\"\r\n                />\r\n                <output id=\"6\">{filter6Val} dB</output>\r\n                </div>\r\n                 \r\n                <div className=\"sliderContainerStyle\">\r\n                <h2>4000Hz</h2>\r\n                <input\r\n                  id=\"filter7\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter7Val}\r\n                  onInput={(e) => setFilter7(e.target.value)}\r\n                  className=\"verticalSliderStyle\"\r\n                />\r\n                <output id=\"7\">{filter7Val} dB</output>\r\n                </div>\r\n                 \r\n                <div className=\"sliderContainerStyle\">\r\n                <h2>8000Hz</h2>\r\n                <input\r\n                  id=\"filter8\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter8Val}\r\n                  onInput={(e) => setFilter8(e.target.value)}\r\n                  className=\"verticalSliderStyle\"\r\n                />\r\n                <output id=\"8\">{filter8Val} dB</output>\r\n                </div>\r\n                 \r\n                <div className=\"sliderContainerStyle\">\r\n                <h2>16000Hz</h2>\r\n                <input\r\n                  id=\"filter9\"\r\n                  type=\"range\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filter9Val}\r\n                  onInput={(e) => setFilter9(e.target.value)}\r\n                  className=\"verticalSliderStyle\"\r\n                />\r\n                <output id=\"9\">{filter9Val} dB</output>\r\n                </div>\r\n\r\n              <button onClick={closeEquaModal} className=\"navigationButtonStyle\">Close</button>\r\n              <button onClick={setFilter} className=\"navigationButtonStyle\">Apply EQ</button>\r\n\r\n            </div>\r\n            </div>\r\n          </>\r\n        )}\r\n        <button  className=\"resetButtonStyle\" onClick={undo}>\r\n          Undo\r\n        </button>\r\n\r\n        <button  className=\"resetButtonStyle\" onClick={reset}>\r\n          Reset\r\n        </button>\r\n        <button className=\"navigationButtonStyle\" onClick={toggleAdvancedOptions}>\r\n            {showAdvanced ? 'Hide Advanced' : 'Show Advanced'}\r\n          </button>\r\n          {showAdvanced && (\r\n            <div className=\"advancedOptions\">\r\n              <button className=\"modalButtonStyle\" onClick={normalize}>\r\n                Normalize\r\n              </button>\r\n              <button  className=\"modalButtonStyle\" onClick={invert}>\r\n                Invert Selected Region\r\n              </button>\r\n              <button  className=\"modalButtonStyle\" onClick={openGainModal}>\r\n                Adjust Gain\r\n              </button>\r\n              <button  className=\"modalButtonStyle\" onClick={openDelayModal}>\r\n                Adjust Delay\r\n              </button>\r\n              <button  className=\"modalButtonStyle\" onClick={openDistortionModal}>\r\n                Apply Distortion\r\n              </button>\r\n              <button  className=\"modalButtonStyle\" onClick={openReverbModal}>\r\n          Apply Reverb\r\n        </button>\r\n        <button  className=\"modalButtonStyle\" onClick={openEquaModal}>\r\n          10-Band Equalizer\r\n        </button>\r\n              {/* Add other advanced buttons here as needed */}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}