{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\james\\\\Downloads\\\\Mellowdies\\\\mellowdies\\\\src\\\\Homepage.js\",\n  _s = $RefreshSig$();\nimport gifBackground from './images/backgrounds/yea.png';\nimport { useEffect } from 'react';\nimport useDrivePicker from 'react-google-drive-picker';\nimport { useNavigate } from 'react-router-dom';\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pageStyle = {\n  backgroundImage: `url(${gifBackground})`,\n  backgroundSize: 'cover',\n  backgroundPosition: 'center',\n  textAlign: 'center',\n  padding: '20px',\n  height: '100vh',\n  margin: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  fontFamily: 'Concert One'\n};\nconst headingStyle = {\n  color: '#000000',\n  fontSize: '3.5rem',\n  textShadow: '6px 6px 10px pink, -6px -6px 10px pink, 6px -6px 10px pink, -6px 6px 10px pink',\n  marginBottom: '10px',\n  marginTop: '0'\n};\nconst paragraphStyle = {\n  color: '#111111',\n  fontSize: '2rem',\n  margin: '5px 0'\n};\nconst containerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'flex-start',\n  width: '100%',\n  paddingTop: '50px'\n};\nconst buttonStyle = {\n  padding: '10px 20px',\n  borderRadius: '30px',\n  border: '2px solid #ffffff',\n  backgroundColor: 'rgba(255, 255, 255, 0.5)',\n  color: '#000',\n  fontFamily: \"'Concert One', cursive\",\n  cursor: 'pointer',\n  marginTop: '15px',\n  width: '300px',\n  textAlign: 'center',\n  fontSize: '1.2rem',\n  boxShadow: '3px 3px 5px white, -3px -3px 5px white, 3px -3px 5px white, -3px 3px 5px white'\n};\nfunction HomePage() {\n  _s();\n  const navigate = useNavigate();\n  const fileInputRef = useRef(null);\n  const handleFileUpload = event => {\n    const files = event.target.files;\n    if (!files || files.length === 0) {\n      alert('No files selected. Please choose audio files to proceed.');\n      return;\n    }\n    const audioFiles = Array.from(files).reduce((accumulator, file) => {\n      if (file.type.startsWith('audio/')) {\n        accumulator.push({\n          name: file.name,\n          url: URL.createObjectURL(file),\n          mimeType: file.type,\n          size: `${(file.size / 1024 / 1024).toFixed(2)} MB`,\n          lastModified: new Date(file.lastModified).toLocaleString()\n        });\n      } else {\n        console.warn(`Skipped non-audio file: ${file.name}`);\n      }\n      return accumulator;\n    }, []);\n    if (audioFiles.length > 0) {\n      console.log('Audio files prepared for navigation:', audioFiles);\n      navigate('/Landingpage', {\n        state: {\n          audioFiles,\n          uploadTime: new Date().toISOString()\n        }\n      });\n    } else {\n      alert('No valid audio files found. Please ensure the files are audio.');\n    }\n  };\n  const [openPicker, authResponse] = useDrivePicker();\n  const handleGoogleDrive = () => {\n    openPicker({\n      clientId: \"473620447998-mljs5baieqfr2bfk9berae2suhb7fqag.apps.googleusercontent.com\",\n      developerKey: \"AIzaSyApSN-CVcrcURGIUIAS3wtNgIlOszHwk2k\",\n      showUploadView: true,\n      showUploadFolders: true,\n      supportDrives: true,\n      multiselect: true,\n      viewId: \"AUDIO\",\n      mimeTypes: ['audio/mpeg', 'audio/wav', 'audio/mp3', 'audio/x-wav', 'audio/x-m4a', 'audio/flac'],\n      callbackFunction: data => {\n        console.log('Google Drive callback data:', data);\n        if (data.action === 'picked') {\n          const audioFiles = data.docs.map(doc => ({\n            name: doc.name,\n            url: doc.url,\n            mimeType: doc.mimeType\n          }));\n          if (audioFiles.length > 0) {\n            navigate('/Landingpage', {\n              state: {\n                audioFiles\n              }\n            });\n          } else {\n            alert('Please select only audio files.');\n          }\n        }\n      }\n    });\n    console.log('Google Drive clicked');\n  };\n  const handleNoFile = () => {\n    navigate('/Landingpage');\n  };\n  const handleFilesButtonClick = () => {\n    fileInputRef.current.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: pageStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: headingStyle,\n        children: \"MELLOWDIES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: handleFilesButtonClick,\n        children: \"FILES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: handleGoogleDrive,\n        children: \"GOOGLE DRIVE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: handleNoFile,\n        children: \"CONTINUE WITHOUT UPLOAD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        ref: fileInputRef,\n        accept: \"audio/*\",\n        style: {\n          display: 'none'\n        },\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"8PeR9o0Yz+XyMMF1iHnjpwR2BCA=\", false, function () {\n  return [useNavigate, useDrivePicker];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["gifBackground","useEffect","useDrivePicker","useNavigate","React","useRef","useState","jsxDEV","_jsxDEV","pageStyle","backgroundImage","backgroundSize","backgroundPosition","textAlign","padding","height","margin","display","flexDirection","alignItems","fontFamily","headingStyle","color","fontSize","textShadow","marginBottom","marginTop","paragraphStyle","containerStyle","justifyContent","width","paddingTop","buttonStyle","borderRadius","border","backgroundColor","cursor","boxShadow","HomePage","_s","navigate","fileInputRef","handleFileUpload","event","files","target","length","alert","audioFiles","Array","from","reduce","accumulator","file","type","startsWith","push","name","url","URL","createObjectURL","mimeType","size","toFixed","lastModified","Date","toLocaleString","console","warn","log","state","uploadTime","toISOString","openPicker","authResponse","handleGoogleDrive","clientId","developerKey","showUploadView","showUploadFolders","supportDrives","multiselect","viewId","mimeTypes","callbackFunction","data","action","docs","map","doc","handleNoFile","handleFilesButtonClick","current","click","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","multiple","ref","accept","onChange","_c","$RefreshReg$"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/src/Homepage.js"],"sourcesContent":["import gifBackground from './images/backgrounds/yea.png';  \r\nimport  { useEffect } from 'react';\r\nimport useDrivePicker from 'react-google-drive-picker';\r\nimport { useNavigate } from 'react-router-dom';  \r\nimport React, { useRef, useState } from 'react';\r\n\r\n\r\n\r\nconst pageStyle = {\r\n  backgroundImage: `url(${gifBackground})`,  \r\n  backgroundSize: 'cover',  \r\n  backgroundPosition: 'center',  \r\n  textAlign: 'center',\r\n  padding: '20px',  \r\n  height: '100vh',  \r\n  margin: 0,\r\n  display: 'flex',\r\n  flexDirection: 'column',  \r\n  alignItems: 'center',\r\n  fontFamily: 'Concert One',  \r\n};\r\n\r\nconst headingStyle = {\r\n    color: '#000000',  \r\n    fontSize: '3.5rem',\r\n    textShadow: '6px 6px 10px pink, -6px -6px 10px pink, 6px -6px 10px pink, -6px 6px 10px pink',  \r\n    marginBottom: '10px',  \r\n    marginTop: '0',  \r\n  };\r\n  \r\n\r\nconst paragraphStyle = {\r\n  color: '#111111',\r\n  fontSize: '2rem',\r\n  margin: '5px 0',  \r\n};\r\n\r\nconst containerStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-start',  \r\n  width: '100%',  \r\n  paddingTop: '50px',  \r\n};\r\n\r\n  const buttonStyle = {\r\n    padding: '10px 20px',\r\n    borderRadius: '30px',  \r\n    border: '2px solid #ffffff',  \r\n    backgroundColor: 'rgba(255, 255, 255, 0.5)',  \r\n    color: '#000',  \r\n    fontFamily: \"'Concert One', cursive\",  \r\n    cursor: 'pointer',\r\n    marginTop: '15px',  \r\n    width: '300px',  \r\n    textAlign: 'center',\r\n    fontSize: '1.2rem',\r\n    boxShadow: '3px 3px 5px white, -3px -3px 5px white, 3px -3px 5px white, -3px 3px 5px white',  \r\n  };\r\n  \r\n  \r\n\r\nfunction HomePage() {\r\n    const navigate = useNavigate();  \r\n\r\n    const fileInputRef = useRef(null);\r\n\r\n    const handleFileUpload = (event) => {\r\n      const files = event.target.files;\r\n  \r\n      if (!files || files.length === 0) {\r\n          alert('No files selected. Please choose audio files to proceed.');\r\n          return;\r\n      }\r\n  \r\n      const audioFiles = Array.from(files).reduce((accumulator, file) => {\r\n          if (file.type.startsWith('audio/')) {\r\n              accumulator.push({\r\n                  name: file.name,\r\n                  url: URL.createObjectURL(file),\r\n                  mimeType: file.type,\r\n                  size: `${(file.size / 1024 / 1024).toFixed(2)} MB`, \r\n                  lastModified: new Date(file.lastModified).toLocaleString(), \r\n              });\r\n          } else {\r\n              console.warn(`Skipped non-audio file: ${file.name}`);\r\n          }\r\n          return accumulator;\r\n      }, []);\r\n  \r\n      if (audioFiles.length > 0) {\r\n          console.log('Audio files prepared for navigation:', audioFiles);\r\n              navigate('/Landingpage', { \r\n                  state: { \r\n                      audioFiles,\r\n                      uploadTime: new Date().toISOString() \r\n                  } \r\n              });\r\n          }\r\n      else {\r\n          alert('No valid audio files found. Please ensure the files are audio.');\r\n      }\r\n  };\r\n  \r\n    \r\n    \r\n      \r\n      const [openPicker, authResponse] = useDrivePicker();\r\n      const handleGoogleDrive = () => {\r\n        openPicker({\r\n            clientId: \"473620447998-mljs5baieqfr2bfk9berae2suhb7fqag.apps.googleusercontent.com\",\r\n            developerKey: \"AIzaSyApSN-CVcrcURGIUIAS3wtNgIlOszHwk2k\",\r\n            showUploadView: true,\r\n            showUploadFolders: true,\r\n            supportDrives: true,\r\n            multiselect: true,\r\n            viewId: \"AUDIO\", \r\n            mimeTypes: ['audio/mpeg', 'audio/wav', 'audio/mp3', 'audio/x-wav', 'audio/x-m4a', 'audio/flac'], \r\n            callbackFunction: (data) => {\r\n                console.log('Google Drive callback data:', data);\r\n    \r\n                if (data.action === 'picked') {\r\n                    const audioFiles = data.docs.map(doc => ({\r\n                        name: doc.name,\r\n                        url: doc.url, \r\n                        mimeType: doc.mimeType\r\n                    }));\r\n\r\n                    if (audioFiles.length > 0) {\r\n                        navigate('/Landingpage', { state: { audioFiles } });  \r\n                    } else {\r\n                        alert('Please select only audio files.');\r\n                    }\r\n                }\r\n            },\r\n        });\r\n        console.log('Google Drive clicked');\r\n    };\r\n\r\n    const handleNoFile = () => {\r\n      navigate('/Landingpage');\r\n    }\r\n    \r\n    const handleFilesButtonClick = () => {\r\n      fileInputRef.current.click();\r\n    };\r\n    \r\n  return (\r\n    <div style={pageStyle}>\r\n      <div style={containerStyle}> \r\n        <h1 style={headingStyle}>MELLOWDIES</h1>\r\n        \r\n\r\n        <button style={buttonStyle} onClick={handleFilesButtonClick}> \r\n             FILES\r\n         </button>\r\n\r\n         <button style={buttonStyle} onClick={handleGoogleDrive}> \r\n             GOOGLE DRIVE\r\n         </button>\r\n\r\n         <button style={buttonStyle} onClick={handleNoFile}> \r\n             CONTINUE WITHOUT UPLOAD\r\n         </button>\r\n\r\n         <input\r\n                type=\"file\"\r\n                multiple\r\n                ref={fileInputRef}\r\n                accept='audio/*'\r\n                style={{ display: 'none' }}\r\n                onChange={handleFileUpload} \r\n            />\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}