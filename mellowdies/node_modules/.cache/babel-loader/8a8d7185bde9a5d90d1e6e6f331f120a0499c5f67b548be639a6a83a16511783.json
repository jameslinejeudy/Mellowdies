{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\james\\\\Downloads\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Landingpage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport { useLocation } from 'react-router-dom';\nimport Sidebar from './Sidebar.js';\nimport cloud from '../images/cloud.png'; // Adjust the path if needed\nimport PlayButton from './PlayButton.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pagebackground = {\n  backgroundSize: 'cover',\n  backgroundImage: `url(${cloud})`,\n  // Set the image as the background\n  backgroundPosition: 'center',\n  // Centers the background\n  padding: '10px',\n  // Adjust the padding\n  height: '100vh',\n  // Full viewport height\n  margin: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  // Arrange children in a column\n  fontFamily: 'Concert One' // Use Concert One font\n};\nconst musicbackground = {\n  width: '75%',\n  height: '80%',\n  position: 'fixed',\n  top: '0',\n  // Position the box at the top of the screen\n  right: '0',\n  // Align the box to the right side of the screen\n  display: 'flex',\n  justifyContent: 'left',\n  alignItems: 'left',\n  backgroundColor: 'rgba(255, 255, 255, 0.3)',\n  // Slightly transparent white background\n  marginTop: '5px',\n  // Space between the box and the top of the screen\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)' // Soft, glowy white shadow\n};\nconst trackNameStyle = {\n  position: 'absolute',\n  bottom: '10px',\n  // Position it 10px from the bottom\n  left: '10px',\n  // Position it 10px from the left\n  color: '#000000',\n  // White text color for visibility\n  fontSize: '0.8rem',\n  // Adjust the font size\n  zIndex: '1002',\n  // Ensure it stays above other elements\n  padding: '5px',\n  // Optional: Add some padding around the text\n  borderRadius: '5px' // Optional: Round the corners of the background\n};\nconst waveformStyle = {\n  width: '100%',\n  // Ensure waveform takes the full width of the container\n  height: '100%',\n  // Subtract 30px to make space for the scrollbar\n  position: 'absolute',\n  // Ensure the waveform is positioned absolutely to allow movement\n  left: 0,\n  // Start the waveform from the left\n  marginBottom: '10px' // Space between waveforms\n};\nconst playAllTracks = () => {\n  wavesurferRefs.current.forEach(ref => {\n    if (ref.waveSurfer && ref.waveSurfer.isReady) {\n      ref.waveSurfer.play();\n    }\n  });\n};\nfunction Landingpage() {\n  _s();\n  const waveformRef = useRef(null);\n  const wavesurferRef = useRef(null);\n  const location = useLocation();\n  const {\n    audioFiles\n  } = location.state || {\n    audioFiles: []\n  };\n  const [isReady, setIsReady] = useState(false); // State to track if WaveSurfer is ready\n  const [speed, setSpeed] = useState(1); // State for playback speed\n  const [progress, setProgress] = useState(0); // State for progress bar\n\n  useEffect(() => {\n    if (audioFiles && audioFiles.length > 0) {\n      wavesurferRefs.current = audioFiles.map(() => /*#__PURE__*/React.createRef());\n      audioFiles.forEach((file, index) => {\n        const container = wavesurferRefs.current[index].current;\n        if (container) {\n          const waveSurfer = WaveSurfer.create({\n            container,\n            waveColor: 'blue',\n            progressColor: '#00FFFF',\n            // The color of the progress bar\n            height: 75,\n            // Height of the waveform\n            autoCenter: true,\n            // Ensures the progress bar stays centered\n            interact: true,\n            // Enable user interaction (clicking, dragging)\n            backend: 'MediaElement',\n            // Use the MediaElement backend to support interaction\n            cursorWidth: 2,\n            // Visual indication of the cursor\n            cursorColor: '#FF0000',\n            backgroundColor: 'rgba(255, 255, 255, 0)',\n            // Transparent background\n            minPxPerSec: 100 // Zoom in on the waveform\n          });\n          waveSurfer.load(file.url);\n          waveSurfer.on('ready', () => {\n            setIsReady(true);\n          });\n          wavesurferRefs.current[index].waveSurfer = waveSurfer;\n        }\n      });\n      if (wavesurferRef.current) {\n        console.log('Loading audio file:', audioFiles[0].url);\n        wavesurferRef.current.load(audioFiles[0].url);\n\n        // Listen for the ready event to ensure the WaveSurfer instance is fully loaded\n        wavesurferRef.current.on('ready', () => {\n          setIsReady(true);\n          // Adjust this to match your trackbackground height\n        });\n        // Update the progress state\n        wavesurferRef.current.on('audioprocess', () => {\n          setProgress(wavesurferRef.current.getCurrentTime() / wavesurferRef.current.getDuration() * 100);\n        });\n        wavesurferRef.current.on('seek', progress => {\n          setProgress(progress * 100);\n        });\n      }\n\n      // Cleanup function to properly handle the destruction of WaveSurfer\n      return () => {\n        if (wavesurferRef.current) {\n          // Ensure that no operations are in progress before destroying\n          wavesurferRef.current.destroy();\n          wavesurferRef.current = null; // Reset the ref to prevent future access\n        }\n      };\n    } else {\n      console.log('No audio files available to display or waveformRef is not ready.');\n    }\n  }, [audioFiles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: pagebackground,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: musicbackground,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: waveformRef,\n        style: waveformStyle,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: trackNameStyle,\n          children: audioFiles.length > 0 && audioFiles[0].name ? audioFiles[0].name : \"Track Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 12\n    }, this), audioFiles && audioFiles.length > 0 ? /*#__PURE__*/_jsxDEV(PlayButton, {\n      wavesurferRef: wavesurferRef,\n      isReady: isReady,\n      speed: speed,\n      setSpeed: setSpeed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No audio tracks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n_s(Landingpage, \"5fa37r6AUoGUt7KGd2kUwNvSt5A=\", false, function () {\n  return [useLocation];\n});\n_c = Landingpage;\nexport default Landingpage;\nvar _c;\n$RefreshReg$(_c, \"Landingpage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","WaveSurfer","useLocation","Sidebar","cloud","PlayButton","jsxDEV","_jsxDEV","pagebackground","backgroundSize","backgroundImage","backgroundPosition","padding","height","margin","display","flexDirection","fontFamily","musicbackground","width","position","top","right","justifyContent","alignItems","backgroundColor","marginTop","boxShadow","trackNameStyle","bottom","left","color","fontSize","zIndex","borderRadius","waveformStyle","marginBottom","playAllTracks","wavesurferRefs","current","forEach","ref","waveSurfer","isReady","play","Landingpage","_s","waveformRef","wavesurferRef","location","audioFiles","state","setIsReady","speed","setSpeed","progress","setProgress","length","map","createRef","file","index","container","create","waveColor","progressColor","autoCenter","interact","backend","cursorWidth","cursorColor","minPxPerSec","load","url","on","console","log","getCurrentTime","getDuration","destroy","style","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/src/Landingpage/Landingpage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Sidebar from './Sidebar.js';\r\nimport cloud from '../images/cloud.png';  // Adjust the path if needed\r\nimport PlayButton from './PlayButton.js';\r\n\r\n\r\nconst pagebackground = {\r\n    backgroundSize: 'cover',\r\n    backgroundImage: `url(${cloud})`,  // Set the image as the background\r\n    backgroundPosition: 'center',  // Centers the background\r\n    padding: '10px',  // Adjust the padding\r\n    height: '100vh',  // Full viewport height\r\n    margin: 0,\r\n    display: 'flex',\r\n    flexDirection: 'column',  // Arrange children in a column\r\n    fontFamily: 'Concert One',  // Use Concert One font\r\n};\r\n\r\n\r\nconst musicbackground = {\r\n    width: '75%',\r\n    height: '80%',\r\n    position: 'fixed',\r\n    top: '0',  // Position the box at the top of the screen\r\n    right: '0',  // Align the box to the right side of the screen\r\n    display: 'flex',\r\n    justifyContent: 'left',\r\n    alignItems: 'left',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.3)',  // Slightly transparent white background\r\n    marginTop: '5px',  // Space between the box and the top of the screen\r\n    boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',  // Soft, glowy white shadow\r\n};\r\n\r\n\r\n\r\nconst trackNameStyle = {\r\n    position: 'absolute',\r\n    bottom: '10px',  // Position it 10px from the bottom\r\n    left: '10px',  // Position it 10px from the left\r\n    color: '#000000',  // White text color for visibility\r\n    fontSize: '0.8rem',  // Adjust the font size\r\n    zIndex: '1002',  // Ensure it stays above other elements\r\n    padding: '5px',  // Optional: Add some padding around the text\r\n    borderRadius: '5px',  // Optional: Round the corners of the background\r\n};\r\n\r\nconst waveformStyle = {\r\n    width: '100%',  // Ensure waveform takes the full width of the container\r\n    height: '100%',  // Subtract 30px to make space for the scrollbar\r\n    position: 'absolute',  // Ensure the waveform is positioned absolutely to allow movement\r\n    left: 0,  // Start the waveform from the left\r\n    marginBottom: '10px',  // Space between waveforms\r\n\r\n};\r\n\r\nconst playAllTracks = () => {\r\n        wavesurferRefs.current.forEach(ref => {\r\n            if (ref.waveSurfer && ref.waveSurfer.isReady) {\r\n                ref.waveSurfer.play();\r\n            }\r\n        });\r\n    };\r\n\r\n\r\nfunction Landingpage() {\r\n    const waveformRef = useRef(null);\r\n    const wavesurferRef = useRef(null);\r\n    const location = useLocation();\r\n    const { audioFiles } = location.state || { audioFiles: [] };\r\n    const [isReady, setIsReady] = useState(false);  // State to track if WaveSurfer is ready\r\n    const [speed, setSpeed] = useState(1); // State for playback speed\r\n    const [progress, setProgress] = useState(0); // State for progress bar\r\n\r\n    useEffect(() => {\r\n        if (audioFiles && audioFiles.length > 0) {\r\n            wavesurferRefs.current = audioFiles.map(() => React.createRef());\r\n\r\n            audioFiles.forEach((file, index) => {\r\n                const container = wavesurferRefs.current[index].current;\r\n                if (container) {\r\n                    const waveSurfer = WaveSurfer.create({\r\n                        container,\r\n                        waveColor: 'blue',\r\n                        progressColor: '#00FFFF',  // The color of the progress bar\r\n                        height: 75,  // Height of the waveform\r\n                        autoCenter: true,  // Ensures the progress bar stays centered\r\n                        interact: true,  // Enable user interaction (clicking, dragging)\r\n                        backend: 'MediaElement',  // Use the MediaElement backend to support interaction\r\n                        cursorWidth: 2,  // Visual indication of the cursor\r\n                        cursorColor: '#FF0000',\r\n                        backgroundColor: 'rgba(255, 255, 255, 0)',  // Transparent background\r\n                        minPxPerSec: 100,  // Zoom in on the waveform\r\n                    });\r\n\r\n                    waveSurfer.load(file.url);\r\n\r\n                    waveSurfer.on('ready', () => {\r\n                        setIsReady(true);\r\n                    });\r\n\r\n                    wavesurferRefs.current[index].waveSurfer = waveSurfer;\r\n                }\r\n            });\r\n\r\n            if (wavesurferRef.current) {\r\n                console.log('Loading audio file:', audioFiles[0].url);\r\n                wavesurferRef.current.load(audioFiles[0].url);\r\n\r\n                // Listen for the ready event to ensure the WaveSurfer instance is fully loaded\r\n                wavesurferRef.current.on('ready', () => {\r\n                    setIsReady(true); \r\n                    // Adjust this to match your trackbackground height\r\n                });\r\n                // Update the progress state\r\n                wavesurferRef.current.on('audioprocess', () => {\r\n                    setProgress(wavesurferRef.current.getCurrentTime() / wavesurferRef.current.getDuration() * 100);\r\n                });\r\n\r\n                wavesurferRef.current.on('seek', (progress) => {\r\n                    setProgress(progress * 100);\r\n                });\r\n            }\r\n\r\n            // Cleanup function to properly handle the destruction of WaveSurfer\r\n            return () => {\r\n                if (wavesurferRef.current) {\r\n                    // Ensure that no operations are in progress before destroying\r\n                    wavesurferRef.current.destroy();\r\n                    wavesurferRef.current = null;  // Reset the ref to prevent future access\r\n                }\r\n            };\r\n        } else {\r\n            console.log('No audio files available to display or waveformRef is not ready.');\r\n        }\r\n    }, [audioFiles]);\r\n\r\n    return (\r\n        <div style={pagebackground}>\r\n            <div style={musicbackground}>\r\n                <div ref={waveformRef} style={waveformStyle}>\r\n                <div style={trackNameStyle}>\r\n            {audioFiles.length > 0 && audioFiles[0].name ? audioFiles[0].name : \"Track Name\"}\r\n        </div>\r\n                </div>\r\n            </div>\r\n\r\n           <Sidebar/>\r\n\r\n            {audioFiles && audioFiles.length > 0 ? (\r\n                <PlayButton\r\n                    wavesurferRef={wavesurferRef}\r\n                    isReady={isReady}\r\n                    speed={speed}\r\n                    setSpeed={setSpeed}\r\n                />\r\n            ) : (\r\n                <p>No audio tracks available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Landingpage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}