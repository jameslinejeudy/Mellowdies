{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\james\\\\Downloads\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst trackbackground = {\n  width: '75%',\n  height: '75%',\n  backgroundColor: 'pink',\n  position: 'fixed',\n  top: '50%',\n  right: '0',\n  transform: 'translateY(-50%)',\n  display: 'flex',\n  justifyContent: 'left',\n  alignItems: 'left'\n};\nconst headingStyle = {\n  color: '#000000',\n  // Black text color\n  fontSize: '3.5rem',\n  marginBottom: '10px',\n  // Space below the heading\n  marginTop: '0',\n  // Space above the heading\n  textAlign: 'center'\n};\nfunction Landingpage() {\n  _s();\n  const waveformRef = useRef(null);\n  const wavesurferRef = useRef(null);\n  const location = useLocation();\n  const {\n    audioFiles\n  } = location.state || {\n    audioFiles: []\n  };\n  const [isReady, setIsReady] = useState(false); // State to track if WaveSurfer is ready\n\n  useEffect(() => {\n    if (audioFiles && audioFiles.length > 0 && waveformRef.current) {\n      console.log('Creating WaveSurfer instance...');\n      wavesurferRef.current = WaveSurfer.create({\n        container: waveformRef.current,\n        waveColor: 'blue',\n        progressColor: '#00FFFF',\n        // The color of the progress bar\n        height: 100,\n        autoCenter: true // Ensures the progress bar stays centered\n      });\n      if (wavesurferRef.current) {\n        console.log('Loading audio file:', audioFiles[0].url);\n        wavesurferRef.current.load(audioFiles[0].url);\n\n        // Listen for the ready event to ensure the WaveSurfer instance is fully loaded\n        wavesurferRef.current.on('ready', () => {\n          setIsReady(true); // Set the state to true when ready\n        });\n      }\n\n      // Cleanup function to properly handle the destruction of WaveSurfer\n      return () => {\n        if (wavesurferRef.current) {\n          // Ensure that no operations are in progress before destroying\n          wavesurferRef.current.destroy();\n          wavesurferRef.current = null; // Reset the ref to prevent future access\n        }\n      };\n    } else {\n      console.log('No audio files available to display or waveformRef is not ready.');\n    }\n  }, [audioFiles]);\n  const handlePlayPause = () => {\n    if (wavesurferRef.current && isReady) {\n      wavesurferRef.current.playPause(); // Toggle play/pause\n    } else {\n      console.log('WaveSurfer is not ready yet.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: headingStyle,\n      children: \"Mellowdies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: trackbackground,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: waveformRef,\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), audioFiles && audioFiles.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        textAlign: 'left'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePlayPause,\n        style: {\n          padding: '10px 20px',\n          fontSize: '16px'\n        },\n        disabled: !isReady // Disable button until WaveSurfer is ready\n        ,\n        children: \"Play/Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No audio tracks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(Landingpage, \"wNlYvXpvZMOV3enExxmypSJngQs=\", false, function () {\n  return [useLocation];\n});\n_c = Landingpage;\nexport default Landingpage;\nvar _c;\n$RefreshReg$(_c, \"Landingpage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","WaveSurfer","useLocation","jsxDEV","_jsxDEV","trackbackground","width","height","backgroundColor","position","top","right","transform","display","justifyContent","alignItems","headingStyle","color","fontSize","marginBottom","marginTop","textAlign","Landingpage","_s","waveformRef","wavesurferRef","location","audioFiles","state","isReady","setIsReady","length","current","console","log","create","container","waveColor","progressColor","autoCenter","url","load","on","destroy","handlePlayPause","playPause","children","style","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","padding","disabled","_c","$RefreshReg$"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/src/Landingpage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst trackbackground = {\r\n    width: '75%',\r\n    height: '75%',\r\n    backgroundColor: 'pink',\r\n    position: 'fixed',\r\n    top: '50%',\r\n    right: '0',\r\n    transform: 'translateY(-50%)',\r\n    display: 'flex',\r\n    justifyContent: 'left',\r\n    alignItems: 'left',\r\n};\r\n\r\nconst headingStyle = {\r\n    color: '#000000',  // Black text color\r\n    fontSize: '3.5rem',\r\n    marginBottom: '10px',  // Space below the heading\r\n    marginTop: '0',  // Space above the heading\r\n    textAlign: 'center',\r\n\r\n};\r\n\r\nfunction Landingpage() {\r\n    const waveformRef = useRef(null);\r\n    const wavesurferRef = useRef(null);\r\n    const location = useLocation();\r\n    const { audioFiles } = location.state || { audioFiles: [] };\r\n    const [isReady, setIsReady] = useState(false);  // State to track if WaveSurfer is ready\r\n\r\n    useEffect(() => {\r\n        if (audioFiles && audioFiles.length > 0 && waveformRef.current) {\r\n            console.log('Creating WaveSurfer instance...');\r\n            wavesurferRef.current = WaveSurfer.create({\r\n                container: waveformRef.current,\r\n                waveColor: 'blue',\r\n                progressColor: '#00FFFF',  // The color of the progress bar\r\n                height: 100,\r\n                autoCenter: true,  // Ensures the progress bar stays centered\r\n            });\r\n\r\n            if (wavesurferRef.current) {\r\n                console.log('Loading audio file:', audioFiles[0].url);\r\n                wavesurferRef.current.load(audioFiles[0].url);\r\n\r\n                // Listen for the ready event to ensure the WaveSurfer instance is fully loaded\r\n                wavesurferRef.current.on('ready', () => {\r\n                    setIsReady(true);  // Set the state to true when ready\r\n                });\r\n            }\r\n\r\n            // Cleanup function to properly handle the destruction of WaveSurfer\r\n            return () => {\r\n                if (wavesurferRef.current) {\r\n                    // Ensure that no operations are in progress before destroying\r\n                    wavesurferRef.current.destroy();\r\n                    wavesurferRef.current = null;  // Reset the ref to prevent future access\r\n                }\r\n            };\r\n        } else {\r\n            console.log('No audio files available to display or waveformRef is not ready.');\r\n        }\r\n    }, [audioFiles]);\r\n\r\n    const handlePlayPause = () => {\r\n        if (wavesurferRef.current && isReady) {\r\n            wavesurferRef.current.playPause();  // Toggle play/pause\r\n        } else {\r\n            console.log('WaveSurfer is not ready yet.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1 style={headingStyle}>Mellowdies</h1>\r\n            <div style={trackbackground}>\r\n                <div ref={waveformRef} style={{ width: '100%' }}></div> {/* Waveform will be displayed here */}\r\n            </div>\r\n\r\n            {audioFiles && audioFiles.length > 0 ? (\r\n                <div style={{ marginTop: '20px', textAlign: 'left' }}>\r\n                    <button\r\n                        onClick={handlePlayPause}\r\n                        style={{ padding: '10px 20px', fontSize: '16px' }}\r\n                        disabled={!isReady}  // Disable button until WaveSurfer is ready\r\n                    >\r\n                        Play/Pause\r\n                    </button>\r\n                </div>\r\n            ) : (\r\n                <p>No audio tracks available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Landingpage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}