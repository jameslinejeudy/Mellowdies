{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\james\\\\Downloads\\\\Mellowdies\\\\mellowdies\\\\src\\\\Exportpage\\\\Exportpage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './Exportpage.css'; // Assuming the background CSS is in this file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Exportpage() {\n  _s();\n  const location = useLocation();\n  const [mergedAudio, setMergedAudio] = useState(null);\n\n  // Use useEffect to ensure mergedAudio is set when location.state changes\n  useEffect(() => {\n    if (location.state && location.state.mergedAudio) {\n      setMergedAudio(location.state.mergedAudio);\n    }\n  }, [location.state]); // This will trigger whenever location.state changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagebackground\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Exported Audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), mergedAudio ? /*#__PURE__*/_jsxDEV(\"audio\", {\n      controls: true,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: mergedAudio,\n        type: \"audio/wav\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), \"Your browser does not support the audio element.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading audio...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this) // Display a loading message until mergedAudio is available\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(Exportpage, \"+NGDSUbnlfwNx1xZB+HnlZs+tk0=\", false, function () {\n  return [useLocation];\n});\n_c = Exportpage;\nexport default Exportpage;\nvar _c;\n$RefreshReg$(_c, \"Exportpage\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","jsxDEV","_jsxDEV","Exportpage","_s","location","mergedAudio","setMergedAudio","state","className","children","fileName","_jsxFileName","lineNumber","columnNumber","controls","src","type","_c","$RefreshReg$"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/src/Exportpage/Exportpage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './Exportpage.css';  // Assuming the background CSS is in this file\r\n\r\nfunction Exportpage() {\r\n    const location = useLocation();\r\n    const [mergedAudio, setMergedAudio] = useState(null);\r\n\r\n    // Use useEffect to ensure mergedAudio is set when location.state changes\r\n    useEffect(() => {\r\n        if (location.state && location.state.mergedAudio) {\r\n            setMergedAudio(location.state.mergedAudio);\r\n        }\r\n    }, [location.state]);  // This will trigger whenever location.state changes\r\n\r\n    return (\r\n        <div className=\"pagebackground\">\r\n            <h1>Exported Audio</h1>\r\n            {mergedAudio ? (\r\n                <audio controls>\r\n                    <source src={mergedAudio} type=\"audio/wav\" />\r\n                    Your browser does not support the audio element.\r\n                </audio>\r\n            ) : (\r\n                <p>Loading audio...</p>  // Display a loading message until mergedAudio is available\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Exportpage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,kBAAkB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACAD,SAAS,CAAC,MAAM;IACZ,IAAIO,QAAQ,CAACG,KAAK,IAAIH,QAAQ,CAACG,KAAK,CAACF,WAAW,EAAE;MAC9CC,cAAc,CAACF,QAAQ,CAACG,KAAK,CAACF,WAAW,CAAC;IAC9C;EACJ,CAAC,EAAE,CAACD,QAAQ,CAACG,KAAK,CAAC,CAAC,CAAC,CAAE;;EAEvB,oBACIN,OAAA;IAAKO,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BR,OAAA;MAAAQ,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBR,WAAW,gBACRJ,OAAA;MAAOa,QAAQ;MAAAL,QAAA,gBACXR,OAAA;QAAQc,GAAG,EAAEV,WAAY;QAACW,IAAI,EAAC;MAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,oDAEjD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,gBAERZ,OAAA;MAAAQ,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAE;IAC5B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACV,EAAA,CAxBQD,UAAU;EAAA,QACEH,WAAW;AAAA;AAAAkB,EAAA,GADvBf,UAAU;AA0BnB,eAAeA,UAAU;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}