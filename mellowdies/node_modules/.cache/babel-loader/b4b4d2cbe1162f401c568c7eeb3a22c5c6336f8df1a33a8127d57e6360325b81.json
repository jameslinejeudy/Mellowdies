{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elect\\\\Documents\\\\CIS\\\\4914\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Menu.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { WEQ8Runtime } from \"weq8\";\nimport \"weq8/ui\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst menubackground = {\n  width: '25%',\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'flex-start',\n  alignItems: 'left',\n  border: '2px solid #ffffff',\n  backgroundColor: '#ffffff',\n  fontFamily: \"'Concert One', cursive\",\n  fontSize: '1.2rem',\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\n  border: 'none',\n  position: 'fixed',\n  top: '0',\n  left: '0',\n  zIndex: '1000',\n  paddingTop: '20px',\n  overflowY: 'auto',\n  // Enable vertical scrolling\n  maxHeight: '100%' // Set a maximum height for the menu\n};\nconst backButtonStyle = {\n  marginTop: '10px',\n  background: '#007bff',\n  color: '#fff',\n  border: 'none',\n  padding: '10px 20px',\n  borderRadius: '5px',\n  cursor: 'pointer',\n  fontSize: '16px',\n  textAlign: 'center',\n  width: 'auto',\n  display: 'inline-block',\n  transition: 'background 0.3s ease'\n};\nconst reverseButtonStyle = {\n  ...backButtonStyle,\n  background: '#ff5722' // Different color for reverse button\n};\nconst sliderStyle = {\n  width: '80%',\n  margin: '10px auto'\n};\nconst adjustGainButtonStyle = {\n  ...backButtonStyle,\n  background: '#4caf50' // Different color for adjust gain button\n};\nconst modalStyle = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 'auto',\n  height: 'auto',\n  backgroundColor: '#fff',\n  padding: '20px',\n  borderRadius: '10px',\n  boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.3)',\n  zIndex: '1001'\n};\nconst overlayStyle = {\n  position: 'fixed',\n  top: '0',\n  left: '0',\n  right: '0',\n  bottom: '0',\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  zIndex: '1000'\n};\nconst contentStyle = {\n  flexGrow: 1,\n  paddingTop: '20px'\n};\nvar utils = require(\"audio-buffer-utils\");\nvar blobber = require('audiobuffer-to-blob');\nfunction combFilter(samples, sampleLength, delay, decay, sampleRate) {\n  let delaySamples = Math.ceil(delay * (sampleRate / 1000));\n  let combFilterSamples = samples;\n  for (let i = 0; i < sampleLength - delaySamples; i++) {\n    combFilterSamples[i + delaySamples] += combFilterSamples[i] * decay;\n  }\n  return combFilterSamples;\n}\nfunction allPassFilter(samples, sampleLength, sampleRate) {\n  let delaySamples = Math.ceil(88.69 * (sampleRate / 1000));\n  let allPassFilterSamples = new Float32Array(sampleLength);\n  let decayFactor = 0.131;\n  for (let i = 0; i < sampleLength; i++) {\n    allPassFilterSamples[i] = samples[i];\n    if (i - delaySamples >= 0) {\n      allPassFilterSamples[i] += allPassFilterSamples[i - delaySamples] * -decayFactor;\n    }\n    if (i - delaySamples >= 1) {\n      allPassFilterSamples[i] += allPassFilterSamples[i + 20 - delaySamples] * decayFactor;\n    }\n  }\n  let val = allPassFilterSamples[0];\n  let max = 0.0;\n  for (let i = 0; i < sampleLength; i++) {\n    if (Math.abs(allPassFilterSamples[i]) > max) {\n      max = Math.abs(allPassFilterSamples[i]);\n    }\n  }\n  for (let i = 0; i < allPassFilterSamples.length; i++) {\n    let currVal = allPassFilterSamples[i];\n    val = (val + (currVal - val)) / max;\n    allPassFilterSamples[i] = val;\n  }\n  return allPassFilterSamples;\n}\nfunction Menu({\n  handleBack,\n  waveData\n}) {\n  _s();\n  const [isGainModalOpen, setGainModalOpen] = useState(false);\n  const [isDelayModalOpen, setDelayModalOpen] = useState(false);\n  const [isDistortionModalOpen, setDistortionModalOpen] = useState(false);\n  const [isReverbModalOpen, setReverbModalOpen] = useState(false);\n  const [isEquaModalOpen, setEquaModalOpen] = useState(false);\n  const [gainValue, setGainValue] = useState(100);\n  const [delayTime, setDelayTime] = useState(0.00);\n  const [feedback, setFeedback] = useState(0.00);\n  const [wetness, setWetness] = useState(0.00);\n  const [dryness, setDryness] = useState(0.00);\n  const [gainDistortValue, setGainDistortValue] = useState(100);\n  const [reverbTime, setReverbTime] = useState(0.00);\n  const [decay, setDecay] = useState(0.00);\n  const [reverbWet, setReverbWet] = useState(0.00);\n  let weq8 = new WEQ8Runtime(waveData[0].webAudioPlayer.audioContext);\n  weq8.connect(waveData[0].webAudioPlayer.audioContext.destination);\n  waveData[0].webAudioPlayer.currentSrc.connect(weq8.input);\n  const reverse = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    if (buffer) {\n      utils.reverse(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n      console.log(\"Reversed region.\");\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    } else {\n      console.error('No audio buffer loaded');\n    }\n  };\n  const invert = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    if (buffer) {\n      utils.invert(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n      console.log(\"Inverted region.\");\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    } else {\n      console.error('No audio buffer loaded');\n    }\n  };\n  const normalize = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    if (buffer) {\n      utils.normalize(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n      console.log(\"Normalized region.\");\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    } else {\n      console.error('No audio buffer loaded');\n    }\n  };\n  const openGainModal = () => setGainModalOpen(true);\n  const closeGainModal = () => setGainModalOpen(false);\n  const adjustGain = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let gain = gainValue / 100;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] *= gain;\n        }\n      }\n      console.log('Gain adjusted:', gain);\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const fadeIn = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let stepInc = 1 / (end - start);\n    let currGain = 0;\n    let steps = 0;\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] *= currGain + steps * stepInc;\n          steps += 1;\n        }\n        steps = 0;\n      }\n      console.log('Region Faded In');\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const fadeOut = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let stepInc = 1 / (end - start);\n    let currGain = 1;\n    let steps = 0;\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] *= currGain - steps * stepInc;\n          steps += 1;\n        }\n        steps = 0;\n      }\n      console.log('Region Faded In');\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const openDistortionModal = () => setDistortionModalOpen(true);\n  const closeDistortionModal = () => setDistortionModalOpen(false);\n  const distort = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let gain = gainDistortValue / 100;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] = Math.atan(gain * channelData[sample]);\n        }\n      }\n      console.log('Distorted Region', gain);\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const openDelayModal = () => setDelayModalOpen(true);\n  const closeDelayModal = () => setDelayModalOpen(false);\n  const delay = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let delayLen = delayTime;\n    let delaySamples = Math.ceil(delayLen * sampleRate);\n    let wet = wetness;\n    let dry = dryness;\n    let feeder = feedback;\n    let index = 0;\n    if (buffer) {\n      let numChannels = buffer.numberOfChannels;\n      if (numChannels === 1) {\n        let channelData = buffer.getChannelData(0);\n        let delayBuffer = new Float32Array(channelData.subarray(start, end + 1));\n        for (let sample = start; sample < end; sample += 1) {\n          let delayed = delayBuffer[index];\n          channelData[sample] = channelData[sample] * dry + delayed * wet;\n          delayBuffer[index] = feeder * (delayed + channelData[sample]);\n          index += 1;\n        }\n      } else if (numChannels === 2) {\n        let channelLeft = buffer.getChannelData(0);\n        let channelRight = buffer.getChannelData(1);\n        let delayLeft = new Float32Array(channelLeft.subarray(start, end + 1));\n        let delayRight = new Float32Array(channelRight.subarray(start, end + 1));\n        delayLeft = channelLeft;\n        delayRight = channelRight;\n        for (let sample = start; sample < end; sample += 1) {\n          let delayed_left = delayLeft[index];\n          let delayed_right = delayRight[index];\n          channelLeft[sample] = channelLeft[sample] * dry + delayed_left * wet;\n          channelRight[sample] = channelRight[sample] * dry + delayed_right * wet;\n          delayLeft[index] = feeder * (delayed_left + channelLeft[sample]);\n          delayRight[index] = feeder * (delayed_right + channelRight[sample]);\n          index += 1;\n        }\n      }\n      console.log('Region Delayed');\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const openReverbModal = () => setReverbModalOpen(true);\n  const closeReverbModal = () => setReverbModalOpen(false);\n  const reverb = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let bufferSize = end - start;\n    let channelLeft = buffer.getChannelData(0);\n    let channelRight = buffer.getChannelData(1);\n    let samplesLeft = new Float32Array(channelLeft.subarray(start, end + 1));\n    let samplesRight = new Float32Array(channelRight.subarray(start, end + 1));\n    let delayinMilliSeconds = reverbTime * 1000;\n    let decayFactor = decay;\n    let combFilterSamplesLeft1 = combFilter(samplesLeft, bufferSize, delayinMilliSeconds, decayFactor, sampleRate);\n    let combFilterSamplesLeft2 = combFilter(samplesLeft, bufferSize, delayinMilliSeconds - 11.73, decayFactor - 0.1313, sampleRate);\n    let combFilterSamplesRight1 = combFilter(samplesRight, bufferSize, delayinMilliSeconds, decayFactor, sampleRate);\n    let combFilterSamplesRight2 = combFilter(samplesRight, bufferSize, delayinMilliSeconds - 11.73, decayFactor - 0.1313, sampleRate);\n    let outputCombLeft = new Float32Array(bufferSize);\n    let outputCombRight = new Float32Array(bufferSize);\n    for (let i = 0; i < bufferSize; i++) {\n      outputCombLeft[i] = combFilterSamplesLeft1[i] + combFilterSamplesLeft2[i];\n    }\n    for (let i = 0; i < bufferSize; i++) {\n      outputCombRight[i] = combFilterSamplesRight1[i] + combFilterSamplesRight2[i];\n    }\n    let audioMixLeft = new Float32Array(bufferSize);\n    let audioMixRight = new Float32Array(bufferSize);\n    for (let i = 0; i < bufferSize; i++) {\n      audioMixLeft[i] = (1 - reverbWet) * samplesLeft[i] + reverbWet * outputCombLeft[i];\n    }\n    for (let i = 0; i < bufferSize; i++) {\n      audioMixRight[i] = (1 - reverbWet) * samplesRight[i] + reverbWet * outputCombRight[i];\n    }\n    let allPassFilterSamplesLeft1 = allPassFilter(audioMixLeft, bufferSize, sampleRate);\n    let allPassFilterSamplesLeft2 = allPassFilter(allPassFilterSamplesLeft1, bufferSize, sampleRate);\n    let allPassFilterSamplesRight1 = allPassFilter(audioMixRight, bufferSize, sampleRate);\n    let allPassFilterSamplesRight2 = allPassFilter(allPassFilterSamplesRight1, bufferSize, sampleRate);\n    for (let i = 0; i < bufferSize; i++) {\n      channelLeft[start + i] = allPassFilterSamplesLeft2[i];\n      channelRight[start + i] = allPassFilterSamplesRight2[i];\n    }\n    console.log('Reverb Applied');\n    let blob = blobber(buffer);\n    waveData[0].waveSurfer.empty();\n    waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n  };\n  const closeEquaModal = () => setEquaModalOpen(false);\n  const openEquaModal = () => setEquaModalOpen(true);\n  const connectEqual = () => {\n    document.querySelector(\"weq8-ui\").runtime = weq8;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: menubackground,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: contentStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: backButtonStyle,\n        onClick: handleBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: reverse,\n        children: \"Reverse Selected Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: invert,\n        children: \"Invert Selected Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: normalize,\n        children: \"Normalize Selected Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: fadeIn,\n        children: \"Fade In Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: fadeOut,\n        children: \"Fade Out Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: openGainModal,\n        children: \"Adjust Gain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), isGainModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: overlayStyle,\n          onClick: closeGainModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Gain Percentage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"gains\",\n            type: \"range\",\n            min: \"0\",\n            max: \"200\",\n            step: \"0.01\",\n            value: gainValue,\n            onInput: e => setGainValue(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"gainVal\",\n            children: [gainValue, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeGainModal,\n            style: backButtonStyle,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: adjustGain,\n            style: backButtonStyle,\n            children: \"Apply Gain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: openDelayModal,\n        children: \"Adjust Delay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this), isDelayModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: overlayStyle,\n          onClick: closeDelayModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Delay Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"delayT\",\n            type: \"range\",\n            min: \"0\",\n            max: \"6\",\n            step: \"0.01\",\n            value: delayTime,\n            onInput: e => setDelayTime(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"delayVal\",\n            children: delayTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"feedback\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: feedback,\n            onInput: e => setFeedback(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"feedVal\",\n            children: feedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Wet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"wets\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: wetness,\n            onInput: e => setWetness(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"wetVal\",\n            children: wetness\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Dry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"dryer\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: dryness,\n            onInput: e => setDryness(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"dryVal\",\n            children: dryness\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeDelayModal,\n            style: backButtonStyle,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: delay,\n            style: backButtonStyle,\n            children: \"Apply Delay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: openDistortionModal,\n        children: \"Apply Distortion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }, this), isDistortionModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: overlayStyle,\n          onClick: closeDistortionModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Gain Percentage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"gains\",\n            type: \"range\",\n            min: \"0\",\n            max: \"200\",\n            step: \"0.01\",\n            value: gainDistortValue,\n            onInput: e => setGainDistortValue(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"gainDistortVal\",\n            children: [gainDistortValue, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeDistortionModal,\n            style: backButtonStyle,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: distort,\n            style: backButtonStyle,\n            children: \"Apply Distortion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: openReverbModal,\n        children: \"Apply Reverb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this), isReverbModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: overlayStyle,\n          onClick: closeReverbModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"reverbT\",\n            type: \"range\",\n            min: \"0\",\n            max: \"3\",\n            step: \"0.01\",\n            value: reverbTime,\n            onInput: e => setReverbTime(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"reverbTime\",\n            children: reverbTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Decay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"decay\",\n            type: \"range\",\n            min: \"0\",\n            max: \"3\",\n            step: \"0.01\",\n            value: decay,\n            onInput: e => setDecay(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"decayVal\",\n            children: decay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Wet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"wetR\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: reverbWet,\n            onInput: e => setReverbWet(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"wetRVal\",\n            children: reverbWet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeReverbModal,\n            style: backButtonStyle,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: reverb,\n            style: backButtonStyle,\n            children: \"Apply Reverb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: openEquaModal,\n        children: \"Parametric Equalizer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 9\n      }, this), isEquaModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: overlayStyle,\n          onClick: closeEquaModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"weq8-ui\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 17\n          }, this), connectEqual, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeEquaModal,\n            style: backButtonStyle,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 408,\n    columnNumber: 5\n  }, this);\n}\n_s(Menu, \"l2wwIdKwpfcP5KyKdXvzPCIPy4g=\");\n_c = Menu;\nexport default Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","useState","WEQ8Runtime","jsxDEV","_jsxDEV","Fragment","_Fragment","menubackground","width","height","display","flexDirection","justifyContent","alignItems","border","backgroundColor","fontFamily","fontSize","boxShadow","position","top","left","zIndex","paddingTop","overflowY","maxHeight","backButtonStyle","marginTop","background","color","padding","borderRadius","cursor","textAlign","transition","reverseButtonStyle","sliderStyle","margin","adjustGainButtonStyle","modalStyle","transform","overlayStyle","right","bottom","contentStyle","flexGrow","utils","require","blobber","combFilter","samples","sampleLength","delay","decay","sampleRate","delaySamples","Math","ceil","combFilterSamples","i","allPassFilter","allPassFilterSamples","Float32Array","decayFactor","val","max","abs","length","currVal","Menu","handleBack","waveData","_s","isGainModalOpen","setGainModalOpen","isDelayModalOpen","setDelayModalOpen","isDistortionModalOpen","setDistortionModalOpen","isReverbModalOpen","setReverbModalOpen","isEquaModalOpen","setEquaModalOpen","gainValue","setGainValue","delayTime","setDelayTime","feedback","setFeedback","wetness","setWetness","dryness","setDryness","gainDistortValue","setGainDistortValue","reverbTime","setReverbTime","setDecay","reverbWet","setReverbWet","weq8","webAudioPlayer","audioContext","connect","destination","currentSrc","input","reverse","buffer","waveSurfer","getDecodedData","region","regions","getRegions","start","end","console","log","blob","empty","loadBlob","catch","error","invert","normalize","openGainModal","closeGainModal","adjustGain","gain","floor","channel","numberOfChannels","channelData","getChannelData","sample","fadeIn","stepInc","currGain","steps","fadeOut","openDistortionModal","closeDistortionModal","distort","atan","openDelayModal","closeDelayModal","delayLen","wet","dry","feeder","index","numChannels","delayBuffer","subarray","delayed","channelLeft","channelRight","delayLeft","delayRight","delayed_left","delayed_right","openReverbModal","closeReverbModal","reverb","bufferSize","samplesLeft","samplesRight","delayinMilliSeconds","combFilterSamplesLeft1","combFilterSamplesLeft2","combFilterSamplesRight1","combFilterSamplesRight2","outputCombLeft","outputCombRight","audioMixLeft","audioMixRight","allPassFilterSamplesLeft1","allPassFilterSamplesLeft2","allPassFilterSamplesRight1","allPassFilterSamplesRight2","closeEquaModal","openEquaModal","connectEqual","document","querySelector","runtime","style","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","type","min","step","value","onInput","e","target","_c","$RefreshReg$"],"sources":["C:/Users/elect/Documents/CIS/4914/Mellowdies/mellowdies/src/Landingpage/Menu.js"],"sourcesContent":["import React, {useState}  from 'react';\r\nimport { WEQ8Runtime } from \"weq8\";\r\nimport \"weq8/ui\";\r\n\r\nconst menubackground = {\r\n  width: '25%',\r\n  height: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'flex-start',\r\n  alignItems: 'left',\r\n  border: '2px solid #ffffff',\r\n  backgroundColor: '#ffffff',\r\n  fontFamily: \"'Concert One', cursive\",\r\n  fontSize: '1.2rem',\r\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\r\n  border: 'none',\r\n  position: 'fixed',\r\n  top: '0',\r\n  left: '0',\r\n  zIndex: '1000',\r\n  paddingTop: '20px',\r\n  overflowY: 'auto', // Enable vertical scrolling\r\n  maxHeight: '100%', // Set a maximum height for the menu\r\n};\r\n\r\nconst backButtonStyle = {\r\n  marginTop: '10px',\r\n  background: '#007bff',\r\n  color: '#fff',\r\n  border: 'none',\r\n  padding: '10px 20px',\r\n  borderRadius: '5px',\r\n  cursor: 'pointer',\r\n  fontSize: '16px',\r\n  textAlign: 'center',\r\n  width: 'auto',\r\n  display: 'inline-block',\r\n  transition: 'background 0.3s ease',\r\n};\r\n\r\nconst reverseButtonStyle = {\r\n  ...backButtonStyle,\r\n  background: '#ff5722', // Different color for reverse button\r\n};\r\n\r\nconst sliderStyle = {\r\n  width: '80%',\r\n  margin: '10px auto',\r\n};\r\n\r\nconst adjustGainButtonStyle = {\r\n  ...backButtonStyle,\r\n  background: '#4caf50', // Different color for adjust gain button\r\n};\r\n\r\n\r\nconst modalStyle = {\r\n  position: 'fixed',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 'auto',\r\n  height: 'auto',\r\n  backgroundColor: '#fff',\r\n  padding: '20px',\r\n  borderRadius: '10px',\r\n  boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.3)',\r\n  zIndex: '1001',\r\n};\r\n\r\nconst overlayStyle = {\r\n  position: 'fixed',\r\n  top: '0',\r\n  left: '0',\r\n  right: '0',\r\n  bottom: '0',\r\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  zIndex: '1000',\r\n};\r\n\r\nconst contentStyle = {\r\n  flexGrow: 1,\r\n  paddingTop: '20px',\r\n};\r\n\r\nvar utils = require(\"audio-buffer-utils\");\r\nvar blobber = require('audiobuffer-to-blob');\r\n\r\nfunction combFilter (samples, sampleLength, delay, decay, sampleRate) {\r\n  let delaySamples = Math.ceil(delay * (sampleRate / 1000));\r\n  let combFilterSamples = samples;\r\n  for (let i = 0; i < sampleLength - delaySamples; i++) {\r\n    combFilterSamples[i+delaySamples] += combFilterSamples[i] * decay;\r\n  }\r\n  return combFilterSamples;\r\n}\r\n\r\nfunction allPassFilter (samples, sampleLength, sampleRate) {\r\n  let delaySamples = Math.ceil(88.69 * (sampleRate/1000));\r\n  let allPassFilterSamples = new Float32Array(sampleLength);\r\n  let decayFactor = 0.131;\r\n  for (let i = 0; i < sampleLength; i++) {\r\n    allPassFilterSamples[i] = samples[i];\r\n    if (i - delaySamples >= 0) {\r\n      allPassFilterSamples[i] += allPassFilterSamples[i-delaySamples] * (-decayFactor);\r\n    }\r\n    if (i - delaySamples >= 1) {\r\n      allPassFilterSamples[i] += allPassFilterSamples[i+20-delaySamples] * decayFactor;\r\n    }\r\n  }\r\n  let val = allPassFilterSamples[0];\r\n  let max = 0.0;\r\n  for (let i = 0; i < sampleLength; i++) {\r\n    if(Math.abs(allPassFilterSamples[i]) > max) {\r\n      max = Math.abs(allPassFilterSamples[i]);\r\n    }\r\n  }\r\n  for (let i = 0; i < allPassFilterSamples.length; i++) {\r\n    let currVal = allPassFilterSamples[i];\r\n    val = (val + (currVal - val)) / max;\r\n    allPassFilterSamples[i] = val;\r\n  }\r\n  return allPassFilterSamples;\r\n}\r\n\r\nfunction Menu({ handleBack, waveData }) {\r\n  const [isGainModalOpen, setGainModalOpen] = useState(false);\r\n  const [isDelayModalOpen, setDelayModalOpen] = useState(false);\r\n  const [isDistortionModalOpen, setDistortionModalOpen] = useState(false);\r\n  const [isReverbModalOpen, setReverbModalOpen] = useState(false);\r\n  const [isEquaModalOpen, setEquaModalOpen] = useState(false);\r\n  const [gainValue, setGainValue] = useState(100);\r\n  const [delayTime, setDelayTime] = useState(0.00);\r\n  const [feedback, setFeedback] = useState(0.00);\r\n  const [wetness, setWetness] = useState(0.00);\r\n  const [dryness, setDryness] = useState(0.00);\r\n  const [gainDistortValue, setGainDistortValue] = useState(100);\r\n  const [reverbTime, setReverbTime] = useState(0.00);\r\n  const [decay, setDecay] = useState(0.00);\r\n  const [reverbWet, setReverbWet] = useState(0.00);\r\n\r\n  let weq8 = new WEQ8Runtime(waveData[0].webAudioPlayer.audioContext);\r\n  weq8.connect(waveData[0].webAudioPlayer.audioContext.destination);\r\n  waveData[0].webAudioPlayer.currentSrc.connect(weq8.input);\r\n  \r\n  \r\n  const reverse = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    if (buffer) {\r\n      utils.reverse(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n      console.log(\"Reversed region.\");\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    } else {\r\n      console.error('No audio buffer loaded');\r\n    }\r\n  };\r\n\r\n  const invert = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    if (buffer) {\r\n      utils.invert(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n      console.log(\"Inverted region.\");\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    } else {\r\n      console.error('No audio buffer loaded');\r\n    }\r\n  };\r\n\r\n  const normalize = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    if (buffer) {\r\n      utils.normalize(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n      console.log(\"Normalized region.\");\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    } else {\r\n      console.error('No audio buffer loaded');\r\n    }\r\n  };\r\n\r\n  const openGainModal = () => setGainModalOpen(true);\r\n  const closeGainModal = () => setGainModalOpen(false);\r\n\r\n  const adjustGain = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let gain = gainValue / 100;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] *= gain;\r\n        }\r\n      }\r\n      console.log('Gain adjusted:', gain);\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const fadeIn = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let stepInc = 1 / (end-start);\r\n    let currGain = 0;\r\n    let steps = 0;\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] *= (currGain + (steps * stepInc));\r\n            steps += 1;\r\n        }\r\n        steps = 0;\r\n      }\r\n      console.log('Region Faded In');\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const fadeOut = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let stepInc = 1 / (end-start);\r\n    let currGain = 1;\r\n    let steps = 0;\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] *= (currGain - (steps * stepInc));\r\n            steps += 1;\r\n        }\r\n        steps = 0;\r\n      }\r\n      console.log('Region Faded In');\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const openDistortionModal = () => setDistortionModalOpen(true);\r\n  const closeDistortionModal = () => setDistortionModalOpen(false);\r\n\r\n  const distort = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let gain = gainDistortValue / 100;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] = Math.atan(gain*channelData[sample]);\r\n        }\r\n      }\r\n      console.log('Distorted Region', gain);\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const openDelayModal = () => setDelayModalOpen(true);\r\n  const closeDelayModal = () => setDelayModalOpen(false);\r\n\r\n  const delay = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let delayLen = delayTime;\r\n    let delaySamples = Math.ceil(delayLen * sampleRate);\r\n    let wet = wetness;\r\n    let dry = dryness;\r\n    let feeder = feedback;\r\n    let index = 0;\r\n\r\n    if (buffer) {\r\n      let numChannels = buffer.numberOfChannels;\r\n      if (numChannels === 1) {\r\n        let channelData = buffer.getChannelData(0);\r\n        let delayBuffer = new Float32Array(channelData.subarray(start, end + 1));\r\n        for (let sample = start; sample < end; sample += 1) {\r\n          let delayed = delayBuffer[index];\r\n          channelData[sample] = (channelData[sample] * dry) + (delayed * wet) ;\r\n          delayBuffer[index] = feeder * (delayed + channelData[sample]);\r\n          index += 1;\r\n        }\r\n      } else if (numChannels === 2) {\r\n        let channelLeft = buffer.getChannelData(0);\r\n        let channelRight = buffer.getChannelData(1);\r\n        let delayLeft = new Float32Array(channelLeft.subarray(start, end + 1));\r\n        let delayRight = new Float32Array(channelRight.subarray(start, end + 1));\r\n        delayLeft = channelLeft;\r\n        delayRight = channelRight;\r\n        for (let sample = start; sample < end; sample += 1) {\r\n          let delayed_left = delayLeft[index];\r\n          let delayed_right = delayRight[index];\r\n          channelLeft[sample] = (channelLeft[sample] * dry) + (delayed_left * wet) ;\r\n          channelRight[sample] = (channelRight[sample] * dry) + (delayed_right * wet) ;\r\n          delayLeft[index] = feeder * (delayed_left + channelLeft[sample]);\r\n          delayRight[index] = feeder * (delayed_right + channelRight[sample]);\r\n          index += 1;\r\n        }\r\n      }\r\n      console.log('Region Delayed');\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const openReverbModal = () => setReverbModalOpen(true);\r\n  const closeReverbModal = () => setReverbModalOpen(false);\r\n\r\n  const reverb = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let bufferSize = end - start;\r\n    let channelLeft = buffer.getChannelData(0);\r\n    let channelRight = buffer.getChannelData(1);\r\n    let samplesLeft = new Float32Array(channelLeft.subarray(start, end + 1));\r\n    let samplesRight = new Float32Array(channelRight.subarray(start, end + 1));\r\n    let delayinMilliSeconds = reverbTime * 1000;\r\n    let decayFactor = decay;\r\n    let combFilterSamplesLeft1 = combFilter(samplesLeft, bufferSize, delayinMilliSeconds, decayFactor, sampleRate);\r\n    let combFilterSamplesLeft2 = combFilter(samplesLeft, bufferSize, (delayinMilliSeconds - 11.73), (decayFactor - 0.1313), sampleRate);\r\n    let combFilterSamplesRight1 = combFilter(samplesRight, bufferSize, delayinMilliSeconds, decayFactor, sampleRate);\r\n    let combFilterSamplesRight2 = combFilter(samplesRight, bufferSize, (delayinMilliSeconds - 11.73), (decayFactor - 0.1313), sampleRate);\r\n    let outputCombLeft = new Float32Array(bufferSize);\r\n    let outputCombRight = new Float32Array(bufferSize);\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      outputCombLeft[i] = ((combFilterSamplesLeft1[i] + combFilterSamplesLeft2[i])) ;\r\n    }\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      outputCombRight[i] = ((combFilterSamplesRight1[i] + combFilterSamplesRight2[i])) ;\r\n    }\r\n    let audioMixLeft = new Float32Array(bufferSize);\r\n    let audioMixRight = new Float32Array(bufferSize);\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      audioMixLeft[i] = ((1 - reverbWet) * samplesLeft[i]) + (reverbWet * outputCombLeft[i]);\r\n    }\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      audioMixRight[i] = ((1 - reverbWet) * samplesRight[i]) + (reverbWet * outputCombRight[i]);\r\n    }\r\n    let allPassFilterSamplesLeft1 = allPassFilter(audioMixLeft, bufferSize, sampleRate);\r\n    let allPassFilterSamplesLeft2 = allPassFilter(allPassFilterSamplesLeft1, bufferSize, sampleRate);\r\n    let allPassFilterSamplesRight1 = allPassFilter(audioMixRight, bufferSize, sampleRate);\r\n    let allPassFilterSamplesRight2 = allPassFilter(allPassFilterSamplesRight1, bufferSize, sampleRate);\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      channelLeft[start + i] = allPassFilterSamplesLeft2[i];\r\n      channelRight[start + i] = allPassFilterSamplesRight2[i];\r\n    }\r\n    console.log('Reverb Applied');\r\n    let blob = blobber(buffer);\r\n    waveData[0].waveSurfer.empty();\r\n    waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n  }\r\n\r\n  const closeEquaModal = () => setEquaModalOpen(false);\r\n  const openEquaModal = () => setEquaModalOpen(true);\r\n\r\n  const connectEqual = () => {\r\n    document.querySelector(\"weq8-ui\").runtime = weq8;\r\n  }\r\n\r\n  return (\r\n    <div style={menubackground}>\r\n      <div style={contentStyle}>\r\n        <button style={backButtonStyle} onClick={handleBack}>Back</button>\r\n\r\n        <button style={reverseButtonStyle} onClick={reverse}>\r\n          Reverse Selected Region\r\n        </button>\r\n\r\n        <button style={reverseButtonStyle} onClick={invert}>\r\n          Invert Selected Region\r\n        </button>\r\n\r\n        <button style={reverseButtonStyle} onClick={normalize}>\r\n          Normalize Selected Region\r\n        </button>\r\n\r\n        <button style={reverseButtonStyle} onClick={fadeIn}>\r\n          Fade In Region\r\n        </button>\r\n\r\n        <button style={reverseButtonStyle} onClick={fadeOut}>\r\n          Fade Out Region\r\n        </button>\r\n        \r\n        <button style={adjustGainButtonStyle} onClick={openGainModal}>\r\n          Adjust Gain\r\n        </button>\r\n\r\n        {isGainModalOpen && (\r\n          <>\r\n             <div style={overlayStyle} onClick={closeGainModal} />\r\n              <div style={modalStyle}>\r\n                <h2>Gain Percentage</h2>\r\n                <input\r\n                  id=\"gains\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"200\"\r\n                  step=\"0.01\"\r\n                  value={gainValue}\r\n                  onInput={(e) => setGainValue(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"gainVal\">{gainValue}%</output>\r\n              <button onClick={closeGainModal} style={backButtonStyle}>Close</button>\r\n              <button onClick={adjustGain} style={backButtonStyle}>Apply Gain</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <button style={adjustGainButtonStyle} onClick={openDelayModal}>\r\n          Adjust Delay\r\n        </button>\r\n\r\n        {isDelayModalOpen && (\r\n          <>\r\n             <div style={overlayStyle} onClick={closeDelayModal} />\r\n              <div style={modalStyle}>\r\n                <h2>Delay Time</h2>\r\n                <input\r\n                  id=\"delayT\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"6\"\r\n                  step=\"0.01\"\r\n                  value={delayTime}\r\n                  onInput={(e) => setDelayTime(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"delayVal\">{delayTime}</output>\r\n\r\n                <h2>Feedback</h2>\r\n                <input\r\n                  id=\"feedback\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={feedback}\r\n                  onInput={(e) => setFeedback(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"feedVal\">{feedback}</output>\r\n\r\n                <h2>Wet</h2>\r\n                <input\r\n                  id=\"wets\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={wetness}\r\n                  onInput={(e) => setWetness(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"wetVal\">{wetness}</output>\r\n\r\n                <h2>Dry</h2>\r\n                <input\r\n                  id=\"dryer\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={dryness}\r\n                  onInput={(e) => setDryness(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"dryVal\">{dryness}</output>\r\n              <button onClick={closeDelayModal} style={backButtonStyle}>Close</button>\r\n              <button onClick={delay} style={backButtonStyle}>Apply Delay</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <button style={adjustGainButtonStyle} onClick={openDistortionModal}>\r\n          Apply Distortion\r\n        </button>\r\n\r\n        {isDistortionModalOpen && (\r\n          <>\r\n             <div style={overlayStyle} onClick={closeDistortionModal} />\r\n              <div style={modalStyle}>\r\n                <h2>Gain Percentage</h2>\r\n                <input\r\n                  id=\"gains\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"200\"\r\n                  step=\"0.01\"\r\n                  value={gainDistortValue}\r\n                  onInput={(e) => setGainDistortValue(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"gainDistortVal\">{gainDistortValue}%</output>\r\n              <button onClick={closeDistortionModal} style={backButtonStyle}>Close</button>\r\n              <button onClick={distort} style={backButtonStyle}>Apply Distortion</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <button style={adjustGainButtonStyle} onClick={openReverbModal}>\r\n          Apply Reverb\r\n        </button>\r\n\r\n        {isReverbModalOpen && (\r\n          <>\r\n             <div style={overlayStyle} onClick={closeReverbModal} />\r\n              <div style={modalStyle}>\r\n                <h2>Time</h2>\r\n                <input\r\n                  id=\"reverbT\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"3\"\r\n                  step=\"0.01\"\r\n                  value={reverbTime}\r\n                  onInput={(e) => setReverbTime(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"reverbTime\">{reverbTime}</output>\r\n\r\n                <h2>Decay</h2>\r\n                <input\r\n                  id=\"decay\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"3\"\r\n                  step=\"0.01\"\r\n                  value={decay}\r\n                  onInput={(e) => setDecay(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"decayVal\">{decay}</output>\r\n\r\n                <h2>Wet</h2>\r\n                <input\r\n                  id=\"wetR\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={reverbWet}\r\n                  onInput={(e) => setReverbWet(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"wetRVal\">{reverbWet}</output>\r\n\r\n              <button onClick={closeReverbModal} style={backButtonStyle}>Close</button>\r\n              <button onClick={reverb} style={backButtonStyle}>Apply Reverb</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <button style={adjustGainButtonStyle} onClick={openEquaModal}>\r\n          Parametric Equalizer\r\n        </button>\r\n\r\n        {isEquaModalOpen && (\r\n          <>\r\n             <div style={overlayStyle} onClick={closeEquaModal} />\r\n              <div style={modalStyle}>\r\n                <weq8-ui/>\r\n                {connectEqual}\r\n              <button onClick={closeEquaModal} style={backButtonStyle}>Close</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}