{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Mellowdies\\\\mellowdies\\\\src\\\\Homepage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport gifBackground from './images/backgrounds/yea.png'; // Adjust the path if needed\nimport { useEffect } from 'react';\nimport useDrivePicker from 'react-google-drive-picker';\nimport { useNavigate } from 'react-router-dom'; // Ensure useNavigate is imported correctly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pageStyle = {\n  backgroundImage: `url(${gifBackground})`,\n  // Set the image as the background\n  backgroundSize: 'cover',\n  // Ensures the image covers the entire page\n  backgroundPosition: 'center',\n  // Centers the background\n  textAlign: 'center',\n  padding: '20px',\n  // Adjust the padding\n  height: '100vh',\n  // Full viewport height\n  margin: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  // Arrange children in a column\n  alignItems: 'center',\n  fontFamily: 'Concert One' // Use Concert One font\n};\nconst headingStyle = {\n  color: '#000000',\n  // Black text color\n  fontSize: '3.5rem',\n  textShadow: '6px 6px 10px pink, -6px -6px 10px pink, 6px -6px 10px pink, -6px 6px 10px pink',\n  // Larger pink outline effect\n  marginBottom: '10px',\n  // Space below the heading\n  marginTop: '0' // Space above the heading\n};\nconst paragraphStyle = {\n  color: '#111111',\n  fontSize: '2rem',\n  margin: '5px 0' // Even out margins for the paragraph\n};\nconst containerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'flex-start',\n  // Align text at the top\n  width: '100%',\n  // Full width\n  paddingTop: '50px' // Add some padding from the top\n};\nconst buttonStyle = {\n  padding: '10px 20px',\n  borderRadius: '30px',\n  // Rounded corners for the buttons\n  border: '2px solid #ffffff',\n  // Sharp white border\n  backgroundColor: 'rgba(255, 255, 255, 0.5)',\n  // Slightly transparent white background\n  color: '#000',\n  // Black text color\n  fontFamily: \"'Concert One', cursive\",\n  // Apply Concert One font\n  cursor: 'pointer',\n  marginTop: '15px',\n  // Space between the buttons\n  width: '300px',\n  // Button width\n  textAlign: 'center',\n  fontSize: '1.2rem',\n  boxShadow: '3px 3px 5px white, -3px -3px 5px white, 3px -3px 5px white, -3px 3px 5px white' // Larger pink outline effect\n};\nexport const handleGoogleDrive = (openPicker, navigate) => {\n  openPicker({\n    clientId: \"YOUR_CLIENT_ID\",\n    developerKey: \"YOUR_DEVELOPER_KEY\",\n    showUploadView: true,\n    showUploadFolders: true,\n    supportDrives: true,\n    multiselect: true,\n    viewId: \"AUDIO\",\n    mimeTypes: ['audio/mpeg', 'audio/wav', 'audio/mp3', 'audio/x-wav', 'audio/x-m4a', 'audio/flac'],\n    callbackFunction: data => {\n      console.log('Google Drive callback data:', data);\n      if (data.action === 'picked') {\n        const audioFiles = data.docs.map(doc => ({\n          name: doc.name,\n          url: doc.url,\n          mimeType: doc.mimeType\n        }));\n        if (audioFiles.length > 0) {\n          navigate('/Landingpage', {\n            state: {\n              audioFiles\n            }\n          });\n        } else {\n          alert('Please select only audio files.');\n        }\n      }\n    }\n  });\n};\nfunction HomePage() {\n  _s();\n  const navigate = useNavigate(); // Initialize useNavigate\n\n  const handleFileUpload = event => {\n    const files = event.target.files;\n    const audioFiles = Array.from(files).map(file => ({\n      name: file.name,\n      url: URL.createObjectURL(file),\n      // Creates a temporary URL for the file\n      mimeType: file.type\n    }));\n    if (audioFiles.length > 0) {\n      navigate('/Landingpage', {\n        state: {\n          audioFiles\n        }\n      }); // Pass audio files as state\n    } else {\n      alert('Please select audio files.');\n    }\n  };\n  const handleNoFile = () => {\n    navigate('/Landingpage');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: pageStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: [\"  \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: headingStyle,\n        children: \"MELLOWDIES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), \"//\", /*#__PURE__*/_jsxDEV(\"p\", {\n        style: paragraphStyle,\n        children: \"UPLOAD AN AUDIO FILE TO START\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), \"//\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        style: buttonStyle,\n        multiple: true,\n        accept: \"audio/*\" // This restricts file selection to audio files only\n        ,\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: handleGoogleDrive,\n        children: [\" \", \"Google Drive\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: handleNoFile,\n        children: [\" \", \"Continue Without Upload\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","gifBackground","useEffect","useDrivePicker","useNavigate","jsxDEV","_jsxDEV","pageStyle","backgroundImage","backgroundSize","backgroundPosition","textAlign","padding","height","margin","display","flexDirection","alignItems","fontFamily","headingStyle","color","fontSize","textShadow","marginBottom","marginTop","paragraphStyle","containerStyle","justifyContent","width","paddingTop","buttonStyle","borderRadius","border","backgroundColor","cursor","boxShadow","handleGoogleDrive","openPicker","navigate","clientId","developerKey","showUploadView","showUploadFolders","supportDrives","multiselect","viewId","mimeTypes","callbackFunction","data","console","log","action","audioFiles","docs","map","doc","name","url","mimeType","length","state","alert","HomePage","_s","handleFileUpload","event","files","target","Array","from","file","URL","createObjectURL","type","handleNoFile","style","children","fileName","_jsxFileName","lineNumber","columnNumber","multiple","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Mellowdies/mellowdies/src/Homepage.js"],"sourcesContent":["import React from 'react';\r\nimport gifBackground from './images/backgrounds/yea.png';  // Adjust the path if needed\r\nimport  { useEffect } from 'react';\r\nimport useDrivePicker from 'react-google-drive-picker';\r\nimport { useNavigate } from 'react-router-dom';  // Ensure useNavigate is imported correctly\r\n\r\n\r\n\r\n\r\nconst pageStyle = {\r\n  backgroundImage: `url(${gifBackground})`,  // Set the image as the background\r\n  backgroundSize: 'cover',  // Ensures the image covers the entire page\r\n  backgroundPosition: 'center',  // Centers the background\r\n  textAlign: 'center',\r\n  padding: '20px',  // Adjust the padding\r\n  height: '100vh',  // Full viewport height\r\n  margin: 0,\r\n  display: 'flex',\r\n  flexDirection: 'column',  // Arrange children in a column\r\n  alignItems: 'center',\r\n  fontFamily: 'Concert One',  // Use Concert One font\r\n};\r\n\r\nconst headingStyle = {\r\n    color: '#000000',  // Black text color\r\n    fontSize: '3.5rem',\r\n    textShadow: '6px 6px 10px pink, -6px -6px 10px pink, 6px -6px 10px pink, -6px 6px 10px pink',  // Larger pink outline effect\r\n    marginBottom: '10px',  // Space below the heading\r\n    marginTop: '0',  // Space above the heading\r\n  };\r\n  \r\n\r\nconst paragraphStyle = {\r\n  color: '#111111',\r\n  fontSize: '2rem',\r\n  margin: '5px 0',  // Even out margins for the paragraph\r\n};\r\n\r\nconst containerStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-start',  // Align text at the top\r\n  width: '100%',  // Full width\r\n  paddingTop: '50px',  // Add some padding from the top\r\n};\r\n\r\n  const buttonStyle = {\r\n    padding: '10px 20px',\r\n    borderRadius: '30px',  // Rounded corners for the buttons\r\n    border: '2px solid #ffffff',  // Sharp white border\r\n    backgroundColor: 'rgba(255, 255, 255, 0.5)',  // Slightly transparent white background\r\n    color: '#000',  // Black text color\r\n    fontFamily: \"'Concert One', cursive\",  // Apply Concert One font\r\n    cursor: 'pointer',\r\n    marginTop: '15px',  // Space between the buttons\r\n    width: '300px',  // Button width\r\n    textAlign: 'center',\r\n    fontSize: '1.2rem',\r\n    boxShadow: '3px 3px 5px white, -3px -3px 5px white, 3px -3px 5px white, -3px 3px 5px white',  // Larger pink outline effect\r\n  };\r\n  \r\n  \r\nexport const handleGoogleDrive = (openPicker, navigate) => {\r\n  openPicker({\r\n      clientId: \"YOUR_CLIENT_ID\",\r\n      developerKey: \"YOUR_DEVELOPER_KEY\",\r\n      showUploadView: true,\r\n      showUploadFolders: true,\r\n      supportDrives: true,\r\n      multiselect: true,\r\n      viewId: \"AUDIO\",\r\n      mimeTypes: ['audio/mpeg', 'audio/wav', 'audio/mp3', 'audio/x-wav', 'audio/x-m4a', 'audio/flac'],\r\n      callbackFunction: (data) => {\r\n          console.log('Google Drive callback data:', data);\r\n\r\n          if (data.action === 'picked') {\r\n              const audioFiles = data.docs.map(doc => ({\r\n                  name: doc.name,\r\n                  url: doc.url,\r\n                  mimeType: doc.mimeType\r\n              }));\r\n\r\n              if (audioFiles.length > 0) {\r\n                  navigate('/Landingpage', { state: { audioFiles } });\r\n              } else {\r\n                  alert('Please select only audio files.');\r\n              }\r\n          }\r\n      },\r\n  });\r\n};\r\n\r\nfunction HomePage() {\r\n    const navigate = useNavigate();  // Initialize useNavigate\r\n\r\n    const handleFileUpload = (event) => {\r\n        const files = event.target.files;\r\n        const audioFiles = Array.from(files).map(file => ({\r\n            name: file.name,\r\n            url: URL.createObjectURL(file), // Creates a temporary URL for the file\r\n            mimeType: file.type\r\n        }));\r\n\r\n        if (audioFiles.length > 0) {\r\n            navigate('/Landingpage', { state: { audioFiles } });  // Pass audio files as state\r\n        } else {\r\n            alert('Please select audio files.');\r\n        }\r\n    };\r\n\r\n    const handleNoFile = () => {\r\n      navigate('/Landingpage');\r\n    }\r\n    \r\n    \r\n  return (\r\n    <div style={pageStyle}>\r\n      <div style={containerStyle}>  {/* Container to hold text at the top */}\r\n        <h1 style={headingStyle}>MELLOWDIES</h1>\r\n        //<p style={paragraphStyle}>UPLOAD AN AUDIO FILE TO START</p>//\r\n\r\n        {/* Accept only audio files */}\r\n        <input\r\n            type=\"file\"\r\n            style={buttonStyle}\r\n            multiple  \r\n            accept=\"audio/*\"  // This restricts file selection to audio files only\r\n            onChange={handleFileUpload}\r\n        />\r\n\r\n\r\n         <button style={buttonStyle} onClick={handleGoogleDrive}> {/* Additional upload buttons */}\r\n             Google Drive\r\n         </button>\r\n\r\n        {/* If they want to just go to the workspace and add tracks from there */}\r\n         <button style={buttonStyle} onClick={handleNoFile}> {/* Additional upload buttons */}\r\n             Continue Without Upload\r\n         </button>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,8BAA8B,CAAC,CAAE;AAC3D,SAAUC,SAAS,QAAQ,OAAO;AAClC,OAAOC,cAAc,MAAM,2BAA2B;AACtD,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKjD,MAAMC,SAAS,GAAG;EAChBC,eAAe,EAAE,OAAOP,aAAa,GAAG;EAAG;EAC3CQ,cAAc,EAAE,OAAO;EAAG;EAC1BC,kBAAkB,EAAE,QAAQ;EAAG;EAC/BC,SAAS,EAAE,QAAQ;EACnBC,OAAO,EAAE,MAAM;EAAG;EAClBC,MAAM,EAAE,OAAO;EAAG;EAClBC,MAAM,EAAE,CAAC;EACTC,OAAO,EAAE,MAAM;EACfC,aAAa,EAAE,QAAQ;EAAG;EAC1BC,UAAU,EAAE,QAAQ;EACpBC,UAAU,EAAE,aAAa,CAAG;AAC9B,CAAC;AAED,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,SAAS;EAAG;EACnBC,QAAQ,EAAE,QAAQ;EAClBC,UAAU,EAAE,gFAAgF;EAAG;EAC/FC,YAAY,EAAE,MAAM;EAAG;EACvBC,SAAS,EAAE,GAAG,CAAG;AACnB,CAAC;AAGH,MAAMC,cAAc,GAAG;EACrBL,KAAK,EAAE,SAAS;EAChBC,QAAQ,EAAE,MAAM;EAChBP,MAAM,EAAE,OAAO,CAAG;AACpB,CAAC;AAED,MAAMY,cAAc,GAAG;EACrBX,OAAO,EAAE,MAAM;EACfC,aAAa,EAAE,QAAQ;EACvBC,UAAU,EAAE,QAAQ;EACpBU,cAAc,EAAE,YAAY;EAAG;EAC/BC,KAAK,EAAE,MAAM;EAAG;EAChBC,UAAU,EAAE,MAAM,CAAG;AACvB,CAAC;AAEC,MAAMC,WAAW,GAAG;EAClBlB,OAAO,EAAE,WAAW;EACpBmB,YAAY,EAAE,MAAM;EAAG;EACvBC,MAAM,EAAE,mBAAmB;EAAG;EAC9BC,eAAe,EAAE,0BAA0B;EAAG;EAC9Cb,KAAK,EAAE,MAAM;EAAG;EAChBF,UAAU,EAAE,wBAAwB;EAAG;EACvCgB,MAAM,EAAE,SAAS;EACjBV,SAAS,EAAE,MAAM;EAAG;EACpBI,KAAK,EAAE,OAAO;EAAG;EACjBjB,SAAS,EAAE,QAAQ;EACnBU,QAAQ,EAAE,QAAQ;EAClBc,SAAS,EAAE,gFAAgF,CAAG;AAChG,CAAC;AAGH,OAAO,MAAMC,iBAAiB,GAAGA,CAACC,UAAU,EAAEC,QAAQ,KAAK;EACzDD,UAAU,CAAC;IACPE,QAAQ,EAAE,gBAAgB;IAC1BC,YAAY,EAAE,oBAAoB;IAClCC,cAAc,EAAE,IAAI;IACpBC,iBAAiB,EAAE,IAAI;IACvBC,aAAa,EAAE,IAAI;IACnBC,WAAW,EAAE,IAAI;IACjBC,MAAM,EAAE,OAAO;IACfC,SAAS,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,aAAa,EAAE,YAAY,CAAC;IAC/FC,gBAAgB,EAAGC,IAAI,IAAK;MACxBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,IAAI,CAAC;MAEhD,IAAIA,IAAI,CAACG,MAAM,KAAK,QAAQ,EAAE;QAC1B,MAAMC,UAAU,GAAGJ,IAAI,CAACK,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;UACrCC,IAAI,EAAED,GAAG,CAACC,IAAI;UACdC,GAAG,EAAEF,GAAG,CAACE,GAAG;UACZC,QAAQ,EAAEH,GAAG,CAACG;QAClB,CAAC,CAAC,CAAC;QAEH,IAAIN,UAAU,CAACO,MAAM,GAAG,CAAC,EAAE;UACvBrB,QAAQ,CAAC,cAAc,EAAE;YAAEsB,KAAK,EAAE;cAAER;YAAW;UAAE,CAAC,CAAC;QACvD,CAAC,MAAM;UACHS,KAAK,CAAC,iCAAiC,CAAC;QAC5C;MACJ;IACJ;EACJ,CAAC,CAAC;AACJ,CAAC;AAED,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMzB,QAAQ,GAAGlC,WAAW,CAAC,CAAC,CAAC,CAAE;;EAEjC,MAAM4D,gBAAgB,GAAIC,KAAK,IAAK;IAChC,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;IAChC,MAAMd,UAAU,GAAGgB,KAAK,CAACC,IAAI,CAACH,KAAK,CAAC,CAACZ,GAAG,CAACgB,IAAI,KAAK;MAC9Cd,IAAI,EAAEc,IAAI,CAACd,IAAI;MACfC,GAAG,EAAEc,GAAG,CAACC,eAAe,CAACF,IAAI,CAAC;MAAE;MAChCZ,QAAQ,EAAEY,IAAI,CAACG;IACnB,CAAC,CAAC,CAAC;IAEH,IAAIrB,UAAU,CAACO,MAAM,GAAG,CAAC,EAAE;MACvBrB,QAAQ,CAAC,cAAc,EAAE;QAAEsB,KAAK,EAAE;UAAER;QAAW;MAAE,CAAC,CAAC,CAAC,CAAE;IAC1D,CAAC,MAAM;MACHS,KAAK,CAAC,4BAA4B,CAAC;IACvC;EACJ,CAAC;EAED,MAAMa,YAAY,GAAGA,CAAA,KAAM;IACzBpC,QAAQ,CAAC,cAAc,CAAC;EAC1B,CAAC;EAGH,oBACEhC,OAAA;IAAKqE,KAAK,EAAEpE,SAAU;IAAAqE,QAAA,eACpBtE,OAAA;MAAKqE,KAAK,EAAEjD,cAAe;MAAAkD,QAAA,GAAC,IAAE,eAC5BtE,OAAA;QAAIqE,KAAK,EAAExD,YAAa;QAAAyD,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,MACtC,eAAA1E,OAAA;QAAGqE,KAAK,EAAElD,cAAe;QAAAmD,QAAA,EAAC;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,MAE7D,eACA1E,OAAA;QACImE,IAAI,EAAC,MAAM;QACXE,KAAK,EAAE7C,WAAY;QACnBmD,QAAQ;QACRC,MAAM,EAAC,SAAS,CAAE;QAAA;QAClBC,QAAQ,EAAEnB;MAAiB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eAGD1E,OAAA;QAAQqE,KAAK,EAAE7C,WAAY;QAACsD,OAAO,EAAEhD,iBAAkB;QAAAwC,QAAA,GAAC,GAAC,EAAiC,cAE1F;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAGT1E,OAAA;QAAQqE,KAAK,EAAE7C,WAAY;QAACsD,OAAO,EAAEV,YAAa;QAAAE,QAAA,GAAC,GAAC,EAAiC,yBAErF;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjB,EAAA,CAnDQD,QAAQ;EAAA,QACI1D,WAAW;AAAA;AAAAiF,EAAA,GADvBvB,QAAQ;AAqDjB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}