{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst Template = require(\"../Template\");\nconst {\n  getDependencyUsedByExportsCondition\n} = require(\"../optimize/InnerGraph\");\nconst {\n  getTrimmedIdsAndRange\n} = require(\"../util/chainedImports\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst propertyAccess = require(\"../util/propertyAccess\");\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n/** @typedef {import(\"../Dependency\").GetConditionFn} GetConditionFn */\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../Module\").BuildMeta} BuildMeta */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n/** @typedef {import(\"../javascript/JavascriptParser\").DestructuringAssignmentProperty} DestructuringAssignmentProperty */\n/** @typedef {import(\"../javascript/JavascriptParser\").ImportAttributes} ImportAttributes */\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nconst idsSymbol = Symbol(\"HarmonyImportSpecifierDependency.ids\");\nconst {\n  ExportPresenceModes\n} = HarmonyImportDependency;\nclass HarmonyImportSpecifierDependency extends HarmonyImportDependency {\n  /**\n   * @param {string} request request\n   * @param {number} sourceOrder source order\n   * @param {string[]} ids ids\n   * @param {string} name name\n   * @param {Range} range range\n   * @param {TODO} exportPresenceMode export presence mode\n   * @param {ImportAttributes | undefined} attributes import attributes\n   * @param {Range[] | undefined} idRanges ranges for members of ids; the two arrays are right-aligned\n   */\n  constructor(request, sourceOrder, ids, name, range, exportPresenceMode, attributes, idRanges // TODO webpack 6 make this non-optional. It must always be set to properly trim ids.\n  ) {\n    super(request, sourceOrder, attributes);\n    this.ids = ids;\n    this.name = name;\n    this.range = range;\n    this.idRanges = idRanges;\n    this.exportPresenceMode = exportPresenceMode;\n    this.namespaceObjectAsContext = false;\n    this.call = undefined;\n    this.directImport = undefined;\n    this.shorthand = undefined;\n    this.asiSafe = undefined;\n    /** @type {Set<string> | boolean | undefined} */\n    this.usedByExports = undefined;\n    /** @type {Set<DestructuringAssignmentProperty> | undefined} */\n    this.referencedPropertiesInDestructuring = undefined;\n  }\n\n  // TODO webpack 6 remove\n  get id() {\n    throw new Error(\"id was renamed to ids and type changed to string[]\");\n  }\n\n  // TODO webpack 6 remove\n  getId() {\n    throw new Error(\"id was renamed to ids and type changed to string[]\");\n  }\n\n  // TODO webpack 6 remove\n  setId() {\n    throw new Error(\"id was renamed to ids and type changed to string[]\");\n  }\n  get type() {\n    return \"harmony import specifier\";\n  }\n\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @returns {string[]} the imported ids\n   */\n  getIds(moduleGraph) {\n    const meta = moduleGraph.getMetaIfExisting(this);\n    if (meta === undefined) return this.ids;\n    const ids = meta[(/** @type {keyof object} */idsSymbol)];\n    return ids !== undefined ? ids : this.ids;\n  }\n\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @param {string[]} ids the imported ids\n   * @returns {void}\n   */\n  setIds(moduleGraph, ids) {\n    moduleGraph.getMeta(this)[idsSymbol] = ids;\n  }\n\n  /**\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {null | false | GetConditionFn} function to determine if the connection is active\n   */\n  getCondition(moduleGraph) {\n    return getDependencyUsedByExportsCondition(this, this.usedByExports, moduleGraph);\n  }\n\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @returns {ConnectionState} how this dependency connects the module to referencing modules\n   */\n  getModuleEvaluationSideEffectsState(moduleGraph) {\n    return false;\n  }\n\n  /**\n   * Returns list of exports referenced by this dependency\n   * @param {ModuleGraph} moduleGraph module graph\n   * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n   * @returns {(string[] | ReferencedExport)[]} referenced exports\n   */\n  getReferencedExports(moduleGraph, runtime) {\n    let ids = this.getIds(moduleGraph);\n    if (ids.length === 0) return this._getReferencedExportsInDestructuring();\n    let namespaceObjectAsContext = this.namespaceObjectAsContext;\n    if (ids[0] === \"default\") {\n      const selfModule = /** @type {Module} */\n      moduleGraph.getParentModule(this);\n      const importedModule = /** @type {Module} */\n      moduleGraph.getModule(this);\n      switch (importedModule.getExportsType(moduleGraph, /** @type {BuildMeta} */\n      selfModule.buildMeta.strictHarmonyModule)) {\n        case \"default-only\":\n        case \"default-with-named\":\n          if (ids.length === 1) return this._getReferencedExportsInDestructuring();\n          ids = ids.slice(1);\n          namespaceObjectAsContext = true;\n          break;\n        case \"dynamic\":\n          return Dependency.EXPORTS_OBJECT_REFERENCED;\n      }\n    }\n    if (this.call && !this.directImport && (namespaceObjectAsContext || ids.length > 1)) {\n      if (ids.length === 1) return Dependency.EXPORTS_OBJECT_REFERENCED;\n      ids = ids.slice(0, -1);\n    }\n    return this._getReferencedExportsInDestructuring(ids);\n  }\n\n  /**\n   * @param {string[]=} ids ids\n   * @returns {string[][]} referenced exports\n   */\n  _getReferencedExportsInDestructuring(ids) {\n    if (this.referencedPropertiesInDestructuring) {\n      /** @type {string[][]} */\n      const refs = [];\n      for (const {\n        id\n      } of this.referencedPropertiesInDestructuring) {\n        refs.push(ids ? ids.concat([id]) : [id]);\n      }\n      return refs;\n    }\n    return ids ? [ids] : Dependency.EXPORTS_OBJECT_REFERENCED;\n  }\n\n  /**\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {number} effective mode\n   */\n  _getEffectiveExportPresenceLevel(moduleGraph) {\n    if (this.exportPresenceMode !== ExportPresenceModes.AUTO) return this.exportPresenceMode;\n    const buildMeta = /** @type {BuildMeta} */\n\n    /** @type {Module} */\n    moduleGraph.getParentModule(this).buildMeta;\n    return buildMeta.strictHarmonyModule ? ExportPresenceModes.ERROR : ExportPresenceModes.WARN;\n  }\n\n  /**\n   * Returns warnings\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {WebpackError[] | null | undefined} warnings\n   */\n  getWarnings(moduleGraph) {\n    const exportsPresence = this._getEffectiveExportPresenceLevel(moduleGraph);\n    if (exportsPresence === ExportPresenceModes.WARN) {\n      return this._getErrors(moduleGraph);\n    }\n    return null;\n  }\n\n  /**\n   * Returns errors\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {WebpackError[] | null | undefined} errors\n   */\n  getErrors(moduleGraph) {\n    const exportsPresence = this._getEffectiveExportPresenceLevel(moduleGraph);\n    if (exportsPresence === ExportPresenceModes.ERROR) {\n      return this._getErrors(moduleGraph);\n    }\n    return null;\n  }\n\n  /**\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {WebpackError[] | undefined} errors\n   */\n  _getErrors(moduleGraph) {\n    const ids = this.getIds(moduleGraph);\n    return this.getLinkingErrors(moduleGraph, ids, `(imported as '${this.name}')`);\n  }\n\n  /**\n   * implement this method to allow the occurrence order plugin to count correctly\n   * @returns {number} count how often the id is used in this dependency\n   */\n  getNumberOfIdOccurrences() {\n    return 0;\n  }\n\n  /**\n   * @param {ObjectSerializerContext} context context\n   */\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.ids);\n    write(this.name);\n    write(this.range);\n    write(this.idRanges);\n    write(this.exportPresenceMode);\n    write(this.namespaceObjectAsContext);\n    write(this.call);\n    write(this.directImport);\n    write(this.shorthand);\n    write(this.asiSafe);\n    write(this.usedByExports);\n    write(this.referencedPropertiesInDestructuring);\n    super.serialize(context);\n  }\n\n  /**\n   * @param {ObjectDeserializerContext} context context\n   */\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.ids = read();\n    this.name = read();\n    this.range = read();\n    this.idRanges = read();\n    this.exportPresenceMode = read();\n    this.namespaceObjectAsContext = read();\n    this.call = read();\n    this.directImport = read();\n    this.shorthand = read();\n    this.asiSafe = read();\n    this.usedByExports = read();\n    this.referencedPropertiesInDestructuring = read();\n    super.deserialize(context);\n  }\n}\nmakeSerializable(HarmonyImportSpecifierDependency, \"webpack/lib/dependencies/HarmonyImportSpecifierDependency\");\nHarmonyImportSpecifierDependency.Template = class HarmonyImportSpecifierDependencyTemplate extends HarmonyImportDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, templateContext) {\n    const dep = /** @type {HarmonyImportSpecifierDependency} */dependency;\n    const {\n      moduleGraph,\n      runtime\n    } = templateContext;\n    const connection = moduleGraph.getConnection(dep);\n    // Skip rendering depending when dependency is conditional\n    if (connection && !connection.isTargetActive(runtime)) return;\n    const ids = dep.getIds(moduleGraph);\n    const {\n      trimmedRange: [trimmedRangeStart, trimmedRangeEnd],\n      trimmedIds\n    } = getTrimmedIdsAndRange(ids, dep.range, dep.idRanges, moduleGraph, dep);\n    const exportExpr = this._getCodeForIds(dep, source, templateContext, trimmedIds);\n    if (dep.shorthand) {\n      source.insert(trimmedRangeEnd, `: ${exportExpr}`);\n    } else {\n      source.replace(trimmedRangeStart, trimmedRangeEnd - 1, exportExpr);\n    }\n    if (dep.referencedPropertiesInDestructuring) {\n      let prefixedIds = ids;\n      if (ids[0] === \"default\") {\n        const selfModule = moduleGraph.getParentModule(dep);\n        const importedModule = /** @type {Module} */\n        moduleGraph.getModule(dep);\n        const exportsType = importedModule.getExportsType(moduleGraph, /** @type {BuildMeta} */\n        selfModule.buildMeta.strictHarmonyModule);\n        if ((exportsType === \"default-only\" || exportsType === \"default-with-named\") && ids.length >= 1) {\n          prefixedIds = ids.slice(1);\n        }\n      }\n      for (const {\n        id,\n        shorthand,\n        range\n      } of dep.referencedPropertiesInDestructuring) {\n        const concatedIds = prefixedIds.concat([id]);\n        const module = /** @type {Module} */moduleGraph.getModule(dep);\n        const used = moduleGraph.getExportsInfo(module).getUsedName(concatedIds, runtime);\n        if (!used) return;\n        const newName = used[used.length - 1];\n        const name = concatedIds[concatedIds.length - 1];\n        if (newName === name) continue;\n        const comment = `${Template.toNormalComment(name)} `;\n        const key = comment + JSON.stringify(newName);\n        source.replace(/** @type {Range} */\n        range[0], /** @type {Range} */\n        range[1] - 1, shorthand ? `${key}: ${name}` : `${key}`);\n      }\n    }\n  }\n\n  /**\n   * @param {HarmonyImportSpecifierDependency} dep dependency\n   * @param {ReplaceSource} source source\n   * @param {DependencyTemplateContext} templateContext context\n   * @param {string[]} ids ids\n   * @returns {string} generated code\n   */\n  _getCodeForIds(dep, source, templateContext, ids) {\n    const {\n      moduleGraph,\n      module,\n      runtime,\n      concatenationScope\n    } = templateContext;\n    const connection = moduleGraph.getConnection(dep);\n    let exportExpr;\n    if (connection && concatenationScope && concatenationScope.isModuleInScope(connection.module)) {\n      if (ids.length === 0) {\n        exportExpr = concatenationScope.createModuleReference(connection.module, {\n          asiSafe: dep.asiSafe\n        });\n      } else if (dep.namespaceObjectAsContext && ids.length === 1) {\n        exportExpr = concatenationScope.createModuleReference(connection.module, {\n          asiSafe: dep.asiSafe\n        }) + propertyAccess(ids);\n      } else {\n        exportExpr = concatenationScope.createModuleReference(connection.module, {\n          ids,\n          call: dep.call,\n          directImport: dep.directImport,\n          asiSafe: dep.asiSafe\n        });\n      }\n    } else {\n      super.apply(dep, source, templateContext);\n      const {\n        runtimeTemplate,\n        initFragments,\n        runtimeRequirements\n      } = templateContext;\n      exportExpr = runtimeTemplate.exportFromImport({\n        moduleGraph,\n        module: (/** @type {Module} */moduleGraph.getModule(dep)),\n        request: dep.request,\n        exportName: ids,\n        originModule: module,\n        asiSafe: dep.shorthand ? true : dep.asiSafe,\n        isCall: dep.call,\n        callContext: !dep.directImport,\n        defaultInterop: true,\n        importVar: dep.getImportVar(moduleGraph),\n        initFragments,\n        runtime,\n        runtimeRequirements\n      });\n    }\n    return exportExpr;\n  }\n};\nmodule.exports = HarmonyImportSpecifierDependency;","map":{"version":3,"names":["Dependency","require","Template","getDependencyUsedByExportsCondition","getTrimmedIdsAndRange","makeSerializable","propertyAccess","HarmonyImportDependency","idsSymbol","Symbol","ExportPresenceModes","HarmonyImportSpecifierDependency","constructor","request","sourceOrder","ids","name","range","exportPresenceMode","attributes","idRanges","namespaceObjectAsContext","call","undefined","directImport","shorthand","asiSafe","usedByExports","referencedPropertiesInDestructuring","id","Error","getId","setId","type","getIds","moduleGraph","meta","getMetaIfExisting","setIds","getMeta","getCondition","getModuleEvaluationSideEffectsState","getReferencedExports","runtime","length","_getReferencedExportsInDestructuring","selfModule","getParentModule","importedModule","getModule","getExportsType","buildMeta","strictHarmonyModule","slice","EXPORTS_OBJECT_REFERENCED","refs","push","concat","_getEffectiveExportPresenceLevel","AUTO","ERROR","WARN","getWarnings","exportsPresence","_getErrors","getErrors","getLinkingErrors","getNumberOfIdOccurrences","serialize","context","write","deserialize","read","HarmonyImportSpecifierDependencyTemplate","apply","dependency","source","templateContext","dep","connection","getConnection","isTargetActive","trimmedRange","trimmedRangeStart","trimmedRangeEnd","trimmedIds","exportExpr","_getCodeForIds","insert","replace","prefixedIds","exportsType","concatedIds","module","used","getExportsInfo","getUsedName","newName","comment","toNormalComment","key","JSON","stringify","concatenationScope","isModuleInScope","createModuleReference","runtimeTemplate","initFragments","runtimeRequirements","exportFromImport","exportName","originModule","isCall","callContext","defaultInterop","importVar","getImportVar","exports"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/node_modules/webpack/lib/dependencies/HarmonyImportSpecifierDependency.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst Template = require(\"../Template\");\nconst {\n\tgetDependencyUsedByExportsCondition\n} = require(\"../optimize/InnerGraph\");\nconst { getTrimmedIdsAndRange } = require(\"../util/chainedImports\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst propertyAccess = require(\"../util/propertyAccess\");\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n/** @typedef {import(\"../Dependency\").GetConditionFn} GetConditionFn */\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../Module\").BuildMeta} BuildMeta */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n/** @typedef {import(\"../javascript/JavascriptParser\").DestructuringAssignmentProperty} DestructuringAssignmentProperty */\n/** @typedef {import(\"../javascript/JavascriptParser\").ImportAttributes} ImportAttributes */\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nconst idsSymbol = Symbol(\"HarmonyImportSpecifierDependency.ids\");\n\nconst { ExportPresenceModes } = HarmonyImportDependency;\n\nclass HarmonyImportSpecifierDependency extends HarmonyImportDependency {\n\t/**\n\t * @param {string} request request\n\t * @param {number} sourceOrder source order\n\t * @param {string[]} ids ids\n\t * @param {string} name name\n\t * @param {Range} range range\n\t * @param {TODO} exportPresenceMode export presence mode\n\t * @param {ImportAttributes | undefined} attributes import attributes\n\t * @param {Range[] | undefined} idRanges ranges for members of ids; the two arrays are right-aligned\n\t */\n\tconstructor(\n\t\trequest,\n\t\tsourceOrder,\n\t\tids,\n\t\tname,\n\t\trange,\n\t\texportPresenceMode,\n\t\tattributes,\n\t\tidRanges // TODO webpack 6 make this non-optional. It must always be set to properly trim ids.\n\t) {\n\t\tsuper(request, sourceOrder, attributes);\n\t\tthis.ids = ids;\n\t\tthis.name = name;\n\t\tthis.range = range;\n\t\tthis.idRanges = idRanges;\n\t\tthis.exportPresenceMode = exportPresenceMode;\n\t\tthis.namespaceObjectAsContext = false;\n\t\tthis.call = undefined;\n\t\tthis.directImport = undefined;\n\t\tthis.shorthand = undefined;\n\t\tthis.asiSafe = undefined;\n\t\t/** @type {Set<string> | boolean | undefined} */\n\t\tthis.usedByExports = undefined;\n\t\t/** @type {Set<DestructuringAssignmentProperty> | undefined} */\n\t\tthis.referencedPropertiesInDestructuring = undefined;\n\t}\n\n\t// TODO webpack 6 remove\n\tget id() {\n\t\tthrow new Error(\"id was renamed to ids and type changed to string[]\");\n\t}\n\n\t// TODO webpack 6 remove\n\tgetId() {\n\t\tthrow new Error(\"id was renamed to ids and type changed to string[]\");\n\t}\n\n\t// TODO webpack 6 remove\n\tsetId() {\n\t\tthrow new Error(\"id was renamed to ids and type changed to string[]\");\n\t}\n\n\tget type() {\n\t\treturn \"harmony import specifier\";\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @returns {string[]} the imported ids\n\t */\n\tgetIds(moduleGraph) {\n\t\tconst meta = moduleGraph.getMetaIfExisting(this);\n\t\tif (meta === undefined) return this.ids;\n\t\tconst ids = meta[/** @type {keyof object} */ (idsSymbol)];\n\t\treturn ids !== undefined ? ids : this.ids;\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @param {string[]} ids the imported ids\n\t * @returns {void}\n\t */\n\tsetIds(moduleGraph, ids) {\n\t\tmoduleGraph.getMeta(this)[idsSymbol] = ids;\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {null | false | GetConditionFn} function to determine if the connection is active\n\t */\n\tgetCondition(moduleGraph) {\n\t\treturn getDependencyUsedByExportsCondition(\n\t\t\tthis,\n\t\t\tthis.usedByExports,\n\t\t\tmoduleGraph\n\t\t);\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @returns {ConnectionState} how this dependency connects the module to referencing modules\n\t */\n\tgetModuleEvaluationSideEffectsState(moduleGraph) {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns list of exports referenced by this dependency\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\n\t */\n\tgetReferencedExports(moduleGraph, runtime) {\n\t\tlet ids = this.getIds(moduleGraph);\n\t\tif (ids.length === 0) return this._getReferencedExportsInDestructuring();\n\t\tlet namespaceObjectAsContext = this.namespaceObjectAsContext;\n\t\tif (ids[0] === \"default\") {\n\t\t\tconst selfModule =\n\t\t\t\t/** @type {Module} */\n\t\t\t\t(moduleGraph.getParentModule(this));\n\t\t\tconst importedModule =\n\t\t\t\t/** @type {Module} */\n\t\t\t\t(moduleGraph.getModule(this));\n\t\t\tswitch (\n\t\t\t\timportedModule.getExportsType(\n\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t/** @type {BuildMeta} */\n\t\t\t\t\t(selfModule.buildMeta).strictHarmonyModule\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tcase \"default-only\":\n\t\t\t\tcase \"default-with-named\":\n\t\t\t\t\tif (ids.length === 1)\n\t\t\t\t\t\treturn this._getReferencedExportsInDestructuring();\n\t\t\t\t\tids = ids.slice(1);\n\t\t\t\t\tnamespaceObjectAsContext = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"dynamic\":\n\t\t\t\t\treturn Dependency.EXPORTS_OBJECT_REFERENCED;\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tthis.call &&\n\t\t\t!this.directImport &&\n\t\t\t(namespaceObjectAsContext || ids.length > 1)\n\t\t) {\n\t\t\tif (ids.length === 1) return Dependency.EXPORTS_OBJECT_REFERENCED;\n\t\t\tids = ids.slice(0, -1);\n\t\t}\n\n\t\treturn this._getReferencedExportsInDestructuring(ids);\n\t}\n\n\t/**\n\t * @param {string[]=} ids ids\n\t * @returns {string[][]} referenced exports\n\t */\n\t_getReferencedExportsInDestructuring(ids) {\n\t\tif (this.referencedPropertiesInDestructuring) {\n\t\t\t/** @type {string[][]} */\n\t\t\tconst refs = [];\n\t\t\tfor (const { id } of this.referencedPropertiesInDestructuring) {\n\t\t\t\trefs.push(ids ? ids.concat([id]) : [id]);\n\t\t\t}\n\t\t\treturn refs;\n\t\t}\n\t\treturn ids ? [ids] : Dependency.EXPORTS_OBJECT_REFERENCED;\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {number} effective mode\n\t */\n\t_getEffectiveExportPresenceLevel(moduleGraph) {\n\t\tif (this.exportPresenceMode !== ExportPresenceModes.AUTO)\n\t\t\treturn this.exportPresenceMode;\n\t\tconst buildMeta =\n\t\t\t/** @type {BuildMeta} */\n\t\t\t(\n\t\t\t\t/** @type {Module} */\n\t\t\t\t(moduleGraph.getParentModule(this)).buildMeta\n\t\t\t);\n\t\treturn buildMeta.strictHarmonyModule\n\t\t\t? ExportPresenceModes.ERROR\n\t\t\t: ExportPresenceModes.WARN;\n\t}\n\n\t/**\n\t * Returns warnings\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {WebpackError[] | null | undefined} warnings\n\t */\n\tgetWarnings(moduleGraph) {\n\t\tconst exportsPresence = this._getEffectiveExportPresenceLevel(moduleGraph);\n\t\tif (exportsPresence === ExportPresenceModes.WARN) {\n\t\t\treturn this._getErrors(moduleGraph);\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns errors\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {WebpackError[] | null | undefined} errors\n\t */\n\tgetErrors(moduleGraph) {\n\t\tconst exportsPresence = this._getEffectiveExportPresenceLevel(moduleGraph);\n\t\tif (exportsPresence === ExportPresenceModes.ERROR) {\n\t\t\treturn this._getErrors(moduleGraph);\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {WebpackError[] | undefined} errors\n\t */\n\t_getErrors(moduleGraph) {\n\t\tconst ids = this.getIds(moduleGraph);\n\t\treturn this.getLinkingErrors(\n\t\t\tmoduleGraph,\n\t\t\tids,\n\t\t\t`(imported as '${this.name}')`\n\t\t);\n\t}\n\n\t/**\n\t * implement this method to allow the occurrence order plugin to count correctly\n\t * @returns {number} count how often the id is used in this dependency\n\t */\n\tgetNumberOfIdOccurrences() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.ids);\n\t\twrite(this.name);\n\t\twrite(this.range);\n\t\twrite(this.idRanges);\n\t\twrite(this.exportPresenceMode);\n\t\twrite(this.namespaceObjectAsContext);\n\t\twrite(this.call);\n\t\twrite(this.directImport);\n\t\twrite(this.shorthand);\n\t\twrite(this.asiSafe);\n\t\twrite(this.usedByExports);\n\t\twrite(this.referencedPropertiesInDestructuring);\n\t\tsuper.serialize(context);\n\t}\n\n\t/**\n\t * @param {ObjectDeserializerContext} context context\n\t */\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.ids = read();\n\t\tthis.name = read();\n\t\tthis.range = read();\n\t\tthis.idRanges = read();\n\t\tthis.exportPresenceMode = read();\n\t\tthis.namespaceObjectAsContext = read();\n\t\tthis.call = read();\n\t\tthis.directImport = read();\n\t\tthis.shorthand = read();\n\t\tthis.asiSafe = read();\n\t\tthis.usedByExports = read();\n\t\tthis.referencedPropertiesInDestructuring = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tHarmonyImportSpecifierDependency,\n\t\"webpack/lib/dependencies/HarmonyImportSpecifierDependency\"\n);\n\nHarmonyImportSpecifierDependency.Template = class HarmonyImportSpecifierDependencyTemplate extends (\n\tHarmonyImportDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(dependency, source, templateContext) {\n\t\tconst dep = /** @type {HarmonyImportSpecifierDependency} */ (dependency);\n\t\tconst { moduleGraph, runtime } = templateContext;\n\t\tconst connection = moduleGraph.getConnection(dep);\n\t\t// Skip rendering depending when dependency is conditional\n\t\tif (connection && !connection.isTargetActive(runtime)) return;\n\n\t\tconst ids = dep.getIds(moduleGraph);\n\t\tconst {\n\t\t\ttrimmedRange: [trimmedRangeStart, trimmedRangeEnd],\n\t\t\ttrimmedIds\n\t\t} = getTrimmedIdsAndRange(ids, dep.range, dep.idRanges, moduleGraph, dep);\n\n\t\tconst exportExpr = this._getCodeForIds(\n\t\t\tdep,\n\t\t\tsource,\n\t\t\ttemplateContext,\n\t\t\ttrimmedIds\n\t\t);\n\t\tif (dep.shorthand) {\n\t\t\tsource.insert(trimmedRangeEnd, `: ${exportExpr}`);\n\t\t} else {\n\t\t\tsource.replace(trimmedRangeStart, trimmedRangeEnd - 1, exportExpr);\n\t\t}\n\n\t\tif (dep.referencedPropertiesInDestructuring) {\n\t\t\tlet prefixedIds = ids;\n\n\t\t\tif (ids[0] === \"default\") {\n\t\t\t\tconst selfModule = moduleGraph.getParentModule(dep);\n\t\t\t\tconst importedModule =\n\t\t\t\t\t/** @type {Module} */\n\t\t\t\t\t(moduleGraph.getModule(dep));\n\t\t\t\tconst exportsType = importedModule.getExportsType(\n\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t/** @type {BuildMeta} */\n\t\t\t\t\t(selfModule.buildMeta).strictHarmonyModule\n\t\t\t\t);\n\t\t\t\tif (\n\t\t\t\t\t(exportsType === \"default-only\" ||\n\t\t\t\t\t\texportsType === \"default-with-named\") &&\n\t\t\t\t\tids.length >= 1\n\t\t\t\t) {\n\t\t\t\t\tprefixedIds = ids.slice(1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const {\n\t\t\t\tid,\n\t\t\t\tshorthand,\n\t\t\t\trange\n\t\t\t} of dep.referencedPropertiesInDestructuring) {\n\t\t\t\tconst concatedIds = prefixedIds.concat([id]);\n\t\t\t\tconst module = /** @type {Module} */ (moduleGraph.getModule(dep));\n\t\t\t\tconst used = moduleGraph\n\t\t\t\t\t.getExportsInfo(module)\n\t\t\t\t\t.getUsedName(concatedIds, runtime);\n\t\t\t\tif (!used) return;\n\t\t\t\tconst newName = used[used.length - 1];\n\t\t\t\tconst name = concatedIds[concatedIds.length - 1];\n\t\t\t\tif (newName === name) continue;\n\n\t\t\t\tconst comment = `${Template.toNormalComment(name)} `;\n\t\t\t\tconst key = comment + JSON.stringify(newName);\n\t\t\t\tsource.replace(\n\t\t\t\t\t/** @type {Range} */\n\t\t\t\t\t(range)[0],\n\t\t\t\t\t/** @type {Range} */\n\t\t\t\t\t(range)[1] - 1,\n\t\t\t\t\tshorthand ? `${key}: ${name}` : `${key}`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {HarmonyImportSpecifierDependency} dep dependency\n\t * @param {ReplaceSource} source source\n\t * @param {DependencyTemplateContext} templateContext context\n\t * @param {string[]} ids ids\n\t * @returns {string} generated code\n\t */\n\t_getCodeForIds(dep, source, templateContext, ids) {\n\t\tconst { moduleGraph, module, runtime, concatenationScope } =\n\t\t\ttemplateContext;\n\t\tconst connection = moduleGraph.getConnection(dep);\n\t\tlet exportExpr;\n\t\tif (\n\t\t\tconnection &&\n\t\t\tconcatenationScope &&\n\t\t\tconcatenationScope.isModuleInScope(connection.module)\n\t\t) {\n\t\t\tif (ids.length === 0) {\n\t\t\t\texportExpr = concatenationScope.createModuleReference(\n\t\t\t\t\tconnection.module,\n\t\t\t\t\t{\n\t\t\t\t\t\tasiSafe: dep.asiSafe\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} else if (dep.namespaceObjectAsContext && ids.length === 1) {\n\t\t\t\texportExpr =\n\t\t\t\t\tconcatenationScope.createModuleReference(connection.module, {\n\t\t\t\t\t\tasiSafe: dep.asiSafe\n\t\t\t\t\t}) + propertyAccess(ids);\n\t\t\t} else {\n\t\t\t\texportExpr = concatenationScope.createModuleReference(\n\t\t\t\t\tconnection.module,\n\t\t\t\t\t{\n\t\t\t\t\t\tids,\n\t\t\t\t\t\tcall: dep.call,\n\t\t\t\t\t\tdirectImport: dep.directImport,\n\t\t\t\t\t\tasiSafe: dep.asiSafe\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tsuper.apply(dep, source, templateContext);\n\n\t\t\tconst { runtimeTemplate, initFragments, runtimeRequirements } =\n\t\t\t\ttemplateContext;\n\n\t\t\texportExpr = runtimeTemplate.exportFromImport({\n\t\t\t\tmoduleGraph,\n\t\t\t\tmodule: /** @type {Module} */ (moduleGraph.getModule(dep)),\n\t\t\t\trequest: dep.request,\n\t\t\t\texportName: ids,\n\t\t\t\toriginModule: module,\n\t\t\t\tasiSafe: dep.shorthand ? true : dep.asiSafe,\n\t\t\t\tisCall: dep.call,\n\t\t\t\tcallContext: !dep.directImport,\n\t\t\t\tdefaultInterop: true,\n\t\t\t\timportVar: dep.getImportVar(moduleGraph),\n\t\t\t\tinitFragments,\n\t\t\t\truntime,\n\t\t\t\truntimeRequirements\n\t\t\t});\n\t\t}\n\t\treturn exportExpr;\n\t}\n};\n\nmodule.exports = HarmonyImportSpecifierDependency;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}