{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"./ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\n/** @typedef {(arg0?: any) => void} CacheAssoc */\n\n/**\n * @template T\n * @typedef {WeakMap<CacheAssoc, ObjectStructure<T>>}\n */\nconst cache = new WeakMap();\n\n/**\n * @template T\n */\nclass ObjectStructure {\n  constructor() {\n    this.keys = undefined;\n    this.children = undefined;\n  }\n\n  /**\n   * @param {keyof T[]} keys keys\n   * @returns {keyof T[]} keys\n   */\n  getKeys(keys) {\n    if (this.keys === undefined) this.keys = keys;\n    return this.keys;\n  }\n\n  /**\n   * @param {keyof T} key key\n   * @returns {ObjectStructure<T>} object structure\n   */\n  key(key) {\n    if (this.children === undefined) this.children = new Map();\n    const child = this.children.get(key);\n    if (child !== undefined) return child;\n    const newChild = new ObjectStructure();\n    this.children.set(key, newChild);\n    return newChild;\n  }\n}\n\n/**\n * @template T\n * @param {(keyof T)[]} keys keys\n * @param {CacheAssoc} cacheAssoc cache assoc fn\n * @returns {(keyof T)[]} keys\n */\nconst getCachedKeys = (keys, cacheAssoc) => {\n  let root = cache.get(cacheAssoc);\n  if (root === undefined) {\n    root = new ObjectStructure();\n    cache.set(cacheAssoc, root);\n  }\n  let current = root;\n  for (const key of keys) {\n    current = current.key(key);\n  }\n  return current.getKeys(keys);\n};\nclass PlainObjectSerializer {\n  /**\n   * @template {object} T\n   * @param {T} obj plain object\n   * @param {ObjectSerializerContext} context context\n   */\n  serialize(obj, context) {\n    const keys = /** @type {(keyof T)[]} */Object.keys(obj);\n    if (keys.length > 128) {\n      // Objects with so many keys are unlikely to share structure\n      // with other objects\n      context.write(keys);\n      for (const key of keys) {\n        context.write(obj[key]);\n      }\n    } else if (keys.length > 1) {\n      context.write(getCachedKeys(keys, context.write));\n      for (const key of keys) {\n        context.write(obj[key]);\n      }\n    } else if (keys.length === 1) {\n      const key = keys[0];\n      context.write(key);\n      context.write(obj[key]);\n    } else {\n      context.write(null);\n    }\n  }\n\n  /**\n   * @template {object} T\n   * @param {ObjectDeserializerContext} context context\n   * @returns {T} plain object\n   */\n  deserialize(context) {\n    const keys = context.read();\n    const obj = /** @type {T} */{};\n    if (Array.isArray(keys)) {\n      for (const key of keys) {\n        obj[(/** @type {keyof T} */key)] = context.read();\n      }\n    } else if (keys !== null) {\n      obj[(/** @type {keyof T} */keys)] = context.read();\n    }\n    return obj;\n  }\n}\nmodule.exports = PlainObjectSerializer;","map":{"version":3,"names":["cache","WeakMap","ObjectStructure","constructor","keys","undefined","children","getKeys","key","Map","child","get","newChild","set","getCachedKeys","cacheAssoc","root","current","PlainObjectSerializer","serialize","obj","context","Object","length","write","deserialize","read","Array","isArray","module","exports"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/node_modules/webpack/lib/serialization/PlainObjectSerializer.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"./ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\n/** @typedef {(arg0?: any) => void} CacheAssoc */\n\n/**\n * @template T\n * @typedef {WeakMap<CacheAssoc, ObjectStructure<T>>}\n */\nconst cache = new WeakMap();\n\n/**\n * @template T\n */\nclass ObjectStructure {\n\tconstructor() {\n\t\tthis.keys = undefined;\n\t\tthis.children = undefined;\n\t}\n\n\t/**\n\t * @param {keyof T[]} keys keys\n\t * @returns {keyof T[]} keys\n\t */\n\tgetKeys(keys) {\n\t\tif (this.keys === undefined) this.keys = keys;\n\t\treturn this.keys;\n\t}\n\n\t/**\n\t * @param {keyof T} key key\n\t * @returns {ObjectStructure<T>} object structure\n\t */\n\tkey(key) {\n\t\tif (this.children === undefined) this.children = new Map();\n\t\tconst child = this.children.get(key);\n\t\tif (child !== undefined) return child;\n\t\tconst newChild = new ObjectStructure();\n\t\tthis.children.set(key, newChild);\n\t\treturn newChild;\n\t}\n}\n\n/**\n * @template T\n * @param {(keyof T)[]} keys keys\n * @param {CacheAssoc} cacheAssoc cache assoc fn\n * @returns {(keyof T)[]} keys\n */\nconst getCachedKeys = (keys, cacheAssoc) => {\n\tlet root = cache.get(cacheAssoc);\n\tif (root === undefined) {\n\t\troot = new ObjectStructure();\n\t\tcache.set(cacheAssoc, root);\n\t}\n\tlet current = root;\n\tfor (const key of keys) {\n\t\tcurrent = current.key(key);\n\t}\n\treturn current.getKeys(keys);\n};\n\nclass PlainObjectSerializer {\n\t/**\n\t * @template {object} T\n\t * @param {T} obj plain object\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(obj, context) {\n\t\tconst keys = /** @type {(keyof T)[]} */ (Object.keys(obj));\n\t\tif (keys.length > 128) {\n\t\t\t// Objects with so many keys are unlikely to share structure\n\t\t\t// with other objects\n\t\t\tcontext.write(keys);\n\t\t\tfor (const key of keys) {\n\t\t\t\tcontext.write(obj[key]);\n\t\t\t}\n\t\t} else if (keys.length > 1) {\n\t\t\tcontext.write(getCachedKeys(keys, context.write));\n\t\t\tfor (const key of keys) {\n\t\t\t\tcontext.write(obj[key]);\n\t\t\t}\n\t\t} else if (keys.length === 1) {\n\t\t\tconst key = keys[0];\n\t\t\tcontext.write(key);\n\t\t\tcontext.write(obj[key]);\n\t\t} else {\n\t\t\tcontext.write(null);\n\t\t}\n\t}\n\n\t/**\n\t * @template {object} T\n\t * @param {ObjectDeserializerContext} context context\n\t * @returns {T} plain object\n\t */\n\tdeserialize(context) {\n\t\tconst keys = context.read();\n\t\tconst obj = /** @type {T} */ ({});\n\t\tif (Array.isArray(keys)) {\n\t\t\tfor (const key of keys) {\n\t\t\t\tobj[/** @type {keyof T} */ (key)] = context.read();\n\t\t\t}\n\t\t} else if (keys !== null) {\n\t\t\tobj[/** @type {keyof T} */ (keys)] = context.read();\n\t\t}\n\t\treturn obj;\n\t}\n}\n\nmodule.exports = PlainObjectSerializer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}