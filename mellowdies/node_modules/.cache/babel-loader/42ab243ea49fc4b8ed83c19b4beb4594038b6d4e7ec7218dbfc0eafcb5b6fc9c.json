{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elect\\\\Documents\\\\CIS\\\\4914\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Landingpage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport { useLocation } from 'react-router-dom';\nimport Sidebar from './Sidebar.js';\nimport cloud from '../images/cloud.png';\nimport PlayButton from './PlayButton.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pagebackground = {\n  backgroundSize: 'cover',\n  backgroundImage: `url(${cloud})`,\n  backgroundPosition: 'center',\n  padding: '10px',\n  height: '100vh',\n  margin: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  fontFamily: 'Concert One'\n};\nconst musicbackground = {\n  width: '75%',\n  height: '80%',\n  position: 'fixed',\n  top: '0',\n  right: '0',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'flex-start',\n  alignItems: 'left',\n  backgroundColor: 'rgba(255, 255, 255, 0.3)',\n  marginTop: '5px',\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\n  overflowY: 'auto',\n  padding: '10px'\n};\nconst trackNameStyle = {\n  position: 'relative',\n  color: '#000000',\n  fontSize: '0.8rem',\n  zIndex: '1002',\n  padding: '5px',\n  borderRadius: '5px',\n  backgroundColor: 'rgba(255, 255, 255, 0.7)'\n};\nconst waveformStyle = {\n  width: '100%',\n  height: '75px',\n  position: 'relative',\n  marginBottom: '20px'\n};\nfunction Landingpage() {\n  _s();\n  const wavesurferRefs = useRef([]); // Array to hold refs for each WaveSurfer instance\n  const audioContextRefs = useRef([]); // Array to hold AudioContext refs\n  const filterNodeRefs = useRef([]); // Array to hold filter node refs\n  const location = useLocation();\n  const {\n    audioFiles\n  } = location.state || {\n    audioFiles: []\n  };\n  const [isReady, setIsReady] = useState(false);\n  const [speed, setSpeed] = useState(1);\n  const [progress, setProgress] = useState(0);\n  const [filterFrequency, setFilterFrequency] = useState(22050); // Default to max frequency for no filter\n\n  useEffect(() => {\n    // Initialize the wavesurferRefs and audioContextRefs arrays\n    wavesurferRefs.current = [];\n    audioContextRefs.current = [];\n    filterNodeRefs.current = [];\n    if (audioFiles && audioFiles.length > 0) {\n      audioFiles.forEach((file, index) => {\n        const containerId = `waveform-${index}`;\n        const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        const filterNode = audioContext.createBiquadFilter();\n        filterNode.type = 'lowpass';\n        filterNode.frequency.value = filterFrequency;\n        const waveSurfer = WaveSurfer.create({\n          container: `#${containerId}`,\n          waveColor: 'blue',\n          progressColor: '#00FFFF',\n          height: 75,\n          autoCenter: true,\n          interact: true,\n          backend: 'MediaElement',\n          cursorWidth: 2,\n          cursorColor: '#FF0000',\n          backgroundColor: 'rgba(255, 255, 255, 0)',\n          minPxPerSec: 100\n        });\n        waveSurfer.load(file.url);\n\n        // Connecting Web Audio API nodes\n        const mediaElementSource = audioContext.createMediaElementSource(waveSurfer.backend.media);\n        mediaElementSource.connect(filterNode);\n        filterNode.connect(audioContext.destination); // Connect filter to the destination\n\n        waveSurfer.on('ready', () => {\n          setIsReady(true);\n        });\n        waveSurfer.on('audioprocess', () => {\n          setProgress(waveSurfer.getCurrentTime() / waveSurfer.getDuration() * 100);\n        });\n        waveSurfer.on('seek', progress => {\n          setProgress(progress * 100);\n        });\n\n        // Store the waveSurfer, AudioContext, and filter nodes in their respective refs\n        wavesurferRefs.current[index] = waveSurfer;\n        audioContextRefs.current[index] = audioContext;\n        filterNodeRefs.current[index] = filterNode;\n      });\n\n      // Cleanup function to properly handle the destruction of WaveSurfer instances and AudioContext\n      return () => {\n        wavesurferRefs.current.forEach(waveSurfer => {\n          if (waveSurfer) {\n            waveSurfer.destroy();\n          }\n        });\n        audioContextRefs.current.forEach(audioContext => {\n          if (audioContext) {\n            audioContext.close();\n          }\n        });\n      };\n    } else {\n      console.log('No audio files available to display.');\n    }\n  }, [audioFiles, filterFrequency]);\n  const applyFilterToAllTracks = frequency => {\n    setFilterFrequency(frequency);\n    filterNodeRefs.current.forEach(filterNode => {\n      if (filterNode) {\n        filterNode.frequency.value = frequency;\n      }\n    });\n  };\n  const playAllTracks = () => {\n    wavesurferRefs.current.forEach(waveSurfer => {\n      waveSurfer.playPause();\n    });\n  };\n  const seekAllTracks = seekTo => {\n    wavesurferRefs.current.forEach(waveSurfer => {\n      waveSurfer.seekTo(seekTo);\n    });\n  };\n  const changeSpeedAllTracks = newSpeed => {\n    setSpeed(newSpeed);\n    wavesurferRefs.current.forEach(waveSurfer => {\n      waveSurfer.setPlaybackRate(newSpeed);\n    });\n  };\n  const forwardAllTracks = () => {\n    wavesurferRefs.current.forEach(waveSurfer => {\n      const currentTime = waveSurfer.getCurrentTime();\n      const duration = waveSurfer.getDuration();\n      const newTime = Math.min(currentTime + 5, duration); // Skip forward 5 seconds, but not beyond the duration\n      waveSurfer.seekTo(newTime / duration); // `seekTo` expects a value between 0 and 1\n    });\n  };\n  const backwardAllTracks = () => {\n    wavesurferRefs.current.forEach(waveSurfer => {\n      const currentTime = waveSurfer.getCurrentTime();\n      const newTime = Math.max(currentTime - 5, 0); // Skip back 5 seconds, but not before the start\n      const duration = waveSurfer.getDuration();\n      waveSurfer.seekTo(newTime / duration); // `seekTo` expects a value between 0 and 1\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: pagebackground,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: musicbackground,\n      children: audioFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: waveformStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: trackNameStyle,\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `waveform-${index}`,\n          style: {\n            width: '100%',\n            height: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      applyFilter: frequency => applyFilterToAllTracks(frequency)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), audioFiles && audioFiles.length > 0 ? /*#__PURE__*/_jsxDEV(PlayButton, {\n      playAllTracks: playAllTracks,\n      forwardAllTracks: forwardAllTracks,\n      backwardAllTracks: backwardAllTracks,\n      seekAllTracks: seekAllTracks,\n      changeSpeedAllTracks: changeSpeedAllTracks,\n      isReady: isReady,\n      speed: speed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No audio tracks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }, this);\n}\n_s(Landingpage, \"RoGl6Yy6VtXyBL7DY7+Xbmnr/ic=\", false, function () {\n  return [useLocation];\n});\n_c = Landingpage;\nexport default Landingpage;\nvar _c;\n$RefreshReg$(_c, \"Landingpage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","WaveSurfer","useLocation","Sidebar","cloud","PlayButton","jsxDEV","_jsxDEV","pagebackground","backgroundSize","backgroundImage","backgroundPosition","padding","height","margin","display","flexDirection","fontFamily","musicbackground","width","position","top","right","justifyContent","alignItems","backgroundColor","marginTop","boxShadow","overflowY","trackNameStyle","color","fontSize","zIndex","borderRadius","waveformStyle","marginBottom","Landingpage","_s","wavesurferRefs","audioContextRefs","filterNodeRefs","location","audioFiles","state","isReady","setIsReady","speed","setSpeed","progress","setProgress","filterFrequency","setFilterFrequency","current","length","forEach","file","index","containerId","audioContext","window","AudioContext","webkitAudioContext","filterNode","createBiquadFilter","type","frequency","value","waveSurfer","create","container","waveColor","progressColor","autoCenter","interact","backend","cursorWidth","cursorColor","minPxPerSec","load","url","mediaElementSource","createMediaElementSource","media","connect","destination","on","getCurrentTime","getDuration","destroy","close","console","log","applyFilterToAllTracks","playAllTracks","playPause","seekAllTracks","seekTo","changeSpeedAllTracks","newSpeed","setPlaybackRate","forwardAllTracks","currentTime","duration","newTime","Math","min","backwardAllTracks","max","style","children","map","name","fileName","_jsxFileName","lineNumber","columnNumber","id","applyFilter","_c","$RefreshReg$"],"sources":["C:/Users/elect/Documents/CIS/4914/Mellowdies/mellowdies/src/Landingpage/Landingpage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Sidebar from './Sidebar.js';\r\nimport cloud from '../images/cloud.png';\r\nimport PlayButton from './PlayButton.js';\r\n\r\nconst pagebackground = {\r\n    backgroundSize: 'cover',\r\n    backgroundImage: `url(${cloud})`,\r\n    backgroundPosition: 'center',\r\n    padding: '10px',\r\n    height: '100vh',\r\n    margin: 0,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    fontFamily: 'Concert One',\r\n};\r\n\r\nconst musicbackground = {\r\n    width: '75%',\r\n    height: '80%',\r\n    position: 'fixed',\r\n    top: '0',\r\n    right: '0',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'left',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.3)',\r\n    marginTop: '5px',\r\n    boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\r\n    overflowY: 'auto',\r\n    padding: '10px',\r\n};\r\n\r\nconst trackNameStyle = {\r\n    position: 'relative',\r\n    color: '#000000',\r\n    fontSize: '0.8rem',\r\n    zIndex: '1002',\r\n    padding: '5px',\r\n    borderRadius: '5px',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.7)',\r\n};\r\n\r\nconst waveformStyle = {\r\n    width: '100%',\r\n    height: '75px',\r\n    position: 'relative',\r\n    marginBottom: '20px',\r\n};\r\n\r\nfunction Landingpage() {\r\n    const wavesurferRefs = useRef([]);  // Array to hold refs for each WaveSurfer instance\r\n    const audioContextRefs = useRef([]); // Array to hold AudioContext refs\r\n    const filterNodeRefs = useRef([]); // Array to hold filter node refs\r\n    const location = useLocation();\r\n    const { audioFiles } = location.state || { audioFiles: [] };\r\n    const [isReady, setIsReady] = useState(false);\r\n    const [speed, setSpeed] = useState(1);\r\n    const [progress, setProgress] = useState(0);\r\n    const [filterFrequency, setFilterFrequency] = useState(22050); // Default to max frequency for no filter\r\n\r\n    useEffect(() => {\r\n        // Initialize the wavesurferRefs and audioContextRefs arrays\r\n        wavesurferRefs.current = [];\r\n        audioContextRefs.current = [];\r\n        filterNodeRefs.current = [];\r\n\r\n        if (audioFiles && audioFiles.length > 0) {\r\n            audioFiles.forEach((file, index) => {\r\n                const containerId = `waveform-${index}`;\r\n\r\n                const audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n                const filterNode = audioContext.createBiquadFilter();\r\n                filterNode.type = 'lowpass';\r\n                filterNode.frequency.value = filterFrequency;\r\n\r\n                const waveSurfer = WaveSurfer.create({\r\n                    container: `#${containerId}`,\r\n                    waveColor: 'blue',\r\n                    progressColor: '#00FFFF',\r\n                    height: 75,\r\n                    autoCenter: true,\r\n                    interact: true,\r\n                    backend: 'MediaElement',\r\n                    cursorWidth: 2,\r\n                    cursorColor: '#FF0000',\r\n                    backgroundColor: 'rgba(255, 255, 255, 0)',\r\n                    minPxPerSec: 100,\r\n                });\r\n\r\n                waveSurfer.load(file.url);\r\n                \r\n                // Connecting Web Audio API nodes\r\n                const mediaElementSource = audioContext.createMediaElementSource(waveSurfer.backend.media);\r\n                mediaElementSource.connect(filterNode);\r\n                filterNode.connect(audioContext.destination); // Connect filter to the destination\r\n\r\n                waveSurfer.on('ready', () => {\r\n                    setIsReady(true);\r\n                });\r\n\r\n                waveSurfer.on('audioprocess', () => {\r\n                    setProgress((waveSurfer.getCurrentTime() / waveSurfer.getDuration()) * 100);\r\n                });\r\n\r\n                waveSurfer.on('seek', (progress) => {\r\n                    setProgress(progress * 100);\r\n                });\r\n\r\n                // Store the waveSurfer, AudioContext, and filter nodes in their respective refs\r\n                wavesurferRefs.current[index] = waveSurfer;\r\n                audioContextRefs.current[index] = audioContext;\r\n                filterNodeRefs.current[index] = filterNode;\r\n            });\r\n\r\n            // Cleanup function to properly handle the destruction of WaveSurfer instances and AudioContext\r\n            return () => {\r\n                wavesurferRefs.current.forEach(waveSurfer => {\r\n                    if (waveSurfer) {\r\n                        waveSurfer.destroy();\r\n                    }\r\n                });\r\n                audioContextRefs.current.forEach(audioContext => {\r\n                    if (audioContext) {\r\n                        audioContext.close();\r\n                    }\r\n                });\r\n            };\r\n        } else {\r\n            console.log('No audio files available to display.');\r\n        }\r\n    }, [audioFiles, filterFrequency]);\r\n\r\n    const applyFilterToAllTracks = (frequency) => {\r\n        setFilterFrequency(frequency);\r\n        filterNodeRefs.current.forEach(filterNode => {\r\n            if (filterNode) {\r\n                filterNode.frequency.value = frequency;\r\n            }\r\n        });\r\n    };\r\n\r\n    const playAllTracks = () => {\r\n        wavesurferRefs.current.forEach(waveSurfer => {\r\n            waveSurfer.playPause();\r\n        });\r\n    };\r\n\r\n    const seekAllTracks = (seekTo) => {\r\n        wavesurferRefs.current.forEach(waveSurfer => {\r\n            waveSurfer.seekTo(seekTo);\r\n        });\r\n    };\r\n\r\n    const changeSpeedAllTracks = (newSpeed) => {\r\n        setSpeed(newSpeed);\r\n        wavesurferRefs.current.forEach(waveSurfer => {\r\n            waveSurfer.setPlaybackRate(newSpeed);\r\n        });\r\n    };\r\n\r\n    const forwardAllTracks = () => {\r\n        wavesurferRefs.current.forEach(waveSurfer => {\r\n            const currentTime = waveSurfer.getCurrentTime();\r\n            const duration = waveSurfer.getDuration();\r\n            const newTime = Math.min(currentTime + 5, duration);  // Skip forward 5 seconds, but not beyond the duration\r\n            waveSurfer.seekTo(newTime / duration);  // `seekTo` expects a value between 0 and 1\r\n        });\r\n    };\r\n\r\n    const backwardAllTracks = () => {\r\n        wavesurferRefs.current.forEach(waveSurfer => {\r\n            const currentTime = waveSurfer.getCurrentTime();\r\n            const newTime = Math.max(currentTime - 5, 0);  // Skip back 5 seconds, but not before the start\r\n            const duration = waveSurfer.getDuration();\r\n            waveSurfer.seekTo(newTime / duration);  // `seekTo` expects a value between 0 and 1\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div style={pagebackground}>\r\n            <div style={musicbackground}>\r\n                {audioFiles.map((file, index) => (\r\n                    <div key={index} style={waveformStyle}>\r\n                        <div style={trackNameStyle}>{file.name}</div>\r\n                        <div id={`waveform-${index}`} style={{ width: '100%', height: '100%' }}></div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Sidebar with audio effects */}\r\n            <Sidebar\r\n                applyFilter={(frequency) => applyFilterToAllTracks(frequency)}\r\n            />\r\n\r\n            {audioFiles && audioFiles.length > 0 ? (\r\n                <PlayButton\r\n                    playAllTracks={playAllTracks}\r\n                    forwardAllTracks={forwardAllTracks}\r\n                    backwardAllTracks={backwardAllTracks}\r\n                    seekAllTracks={seekAllTracks}\r\n                    changeSpeedAllTracks={changeSpeedAllTracks}\r\n                    isReady={isReady}\r\n                    speed={speed}\r\n                />\r\n            ) : (\r\n                <p>No audio tracks available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Landingpage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}