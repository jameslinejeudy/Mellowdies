{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/**\n * @template T\n * @param {Iterable<T>} set a set\n * @returns {T | undefined} last item\n */\nconst last = set => {\n  let last;\n  for (const item of set) last = item;\n  return last;\n};\n\n/**\n * @template T\n * @param {Iterable<T>} iterable iterable\n * @param {function(T): boolean} filter predicate\n * @returns {boolean} true, if some items match the filter predicate\n */\nconst someInIterable = (iterable, filter) => {\n  for (const item of iterable) {\n    if (filter(item)) return true;\n  }\n  return false;\n};\n\n/**\n * @template T\n * @param {Iterable<T>} iterable an iterable\n * @returns {number} count of items\n */\nconst countIterable = iterable => {\n  let i = 0;\n  for (const _ of iterable) i++;\n  return i;\n};\nmodule.exports.last = last;\nmodule.exports.someInIterable = someInIterable;\nmodule.exports.countIterable = countIterable;","map":{"version":3,"names":["last","set","item","someInIterable","iterable","filter","countIterable","i","_","module","exports"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/node_modules/webpack/lib/util/IterableHelpers.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/**\n * @template T\n * @param {Iterable<T>} set a set\n * @returns {T | undefined} last item\n */\nconst last = set => {\n\tlet last;\n\tfor (const item of set) last = item;\n\treturn last;\n};\n\n/**\n * @template T\n * @param {Iterable<T>} iterable iterable\n * @param {function(T): boolean} filter predicate\n * @returns {boolean} true, if some items match the filter predicate\n */\nconst someInIterable = (iterable, filter) => {\n\tfor (const item of iterable) {\n\t\tif (filter(item)) return true;\n\t}\n\treturn false;\n};\n\n/**\n * @template T\n * @param {Iterable<T>} iterable an iterable\n * @returns {number} count of items\n */\nconst countIterable = iterable => {\n\tlet i = 0;\n\tfor (const _ of iterable) i++;\n\treturn i;\n};\n\nmodule.exports.last = last;\nmodule.exports.someInIterable = someInIterable;\nmodule.exports.countIterable = countIterable;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA,MAAMA,IAAI,GAAGC,GAAG,IAAI;EACnB,IAAID,IAAI;EACR,KAAK,MAAME,IAAI,IAAID,GAAG,EAAED,IAAI,GAAGE,IAAI;EACnC,OAAOF,IAAI;AACZ,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,MAAMG,cAAc,GAAGA,CAACC,QAAQ,EAAEC,MAAM,KAAK;EAC5C,KAAK,MAAMH,IAAI,IAAIE,QAAQ,EAAE;IAC5B,IAAIC,MAAM,CAACH,IAAI,CAAC,EAAE,OAAO,IAAI;EAC9B;EACA,OAAO,KAAK;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMI,aAAa,GAAGF,QAAQ,IAAI;EACjC,IAAIG,CAAC,GAAG,CAAC;EACT,KAAK,MAAMC,CAAC,IAAIJ,QAAQ,EAAEG,CAAC,EAAE;EAC7B,OAAOA,CAAC;AACT,CAAC;AAEDE,MAAM,CAACC,OAAO,CAACV,IAAI,GAAGA,IAAI;AAC1BS,MAAM,CAACC,OAAO,CAACP,cAAc,GAAGA,cAAc;AAC9CM,MAAM,CAACC,OAAO,CAACJ,aAAa,GAAGA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}