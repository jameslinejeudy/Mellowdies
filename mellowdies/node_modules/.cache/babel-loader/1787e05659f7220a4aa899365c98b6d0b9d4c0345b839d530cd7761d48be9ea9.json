{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elect\\\\Documents\\\\CIS\\\\4914\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Landingpage.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate at the top\nimport WaveSurfer from 'wavesurfer.js';\nimport RegionsPlugin from \"wavesurfer.js/dist/plugins/regions.js\";\nimport TimelinePlugin from 'wavesurfer.js/dist/plugins/timeline'; // Import the timeline plugin\nimport { useLocation } from 'react-router-dom';\nimport Sidebar from './Sidebar.js';\nimport './Landingpage.css';\nimport PlayButton from './PlayButton.js';\nimport PlusIcon from '../images/icons/plus.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst waveSurferData = [];\nconst regions = RegionsPlugin.create();\nconst audioContext = new AudioContext();\nconst audio = new Audio();\naudio.controls = true;\nfunction Landingpage() {\n  _s();\n  var _location$state;\n  const navigate = useNavigate(); // Define navigate using the useNavigate hook\n  const wavesurferRefs = useRef([]);\n  const containerRefs = useRef([]);\n  const musicbackgroundRef = useRef(null); // Ref for the music background container\n  const location = useLocation();\n  const [audioFiles, setAudioFiles] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.audioFiles) || []);\n  const [isReady, setIsReady] = useState(false);\n  const [speed, setSpeed] = useState(1);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const fileInputRef = useRef(null); // Create a ref for the file input\n  let longestDuration = 0; // Variable to track the longest track duration\n\n  useEffect(() => {\n    var _location$state2;\n    if ((_location$state2 = location.state) !== null && _location$state2 !== void 0 && _location$state2.audioFiles) {\n      setAudioFiles(location.state.audioFiles);\n    }\n  }, [location.state]);\n  const initializeWaveSurfer = () => {\n    wavesurferRefs.current = [];\n    if (audioFiles && audioFiles.length > 0) {\n      audioFiles.forEach((file, index) => {\n        const container = containerRefs.current[index];\n        if (!container) {\n          console.error(`Container for index ${index} not found`);\n          return;\n        }\n        audio.src = file.url;\n        const waveSurfer = WaveSurfer.create({\n          container: container,\n          // Safely use the container\n          waveColor: 'blue',\n          progressColor: '#00FFFF',\n          height: 75,\n          autoCenter: true,\n          interact: true,\n          backend: 'MediaElement',\n          cursorWidth: 2,\n          cursorColor: '#FF0000',\n          backgroundColor: 'rgba(255, 255, 255, 0)',\n          //minPxPerSec: 200,\n          media: audio,\n          plugins: [regions]\n        });\n        const mediaNode = audioContext.createMediaElementSource(audio);\n        waveSurfer.on('ready', () => {\n          setIsReady(true);\n          const buffer = waveSurfer.getDecodedData();\n          console.log('buffer length : ', buffer.length);\n          console.log('buffer duration : ', buffer.duration);\n          console.log('buffer sampleRate : ', buffer.sampleRate);\n          console.log('buffer numberOfChannels : ', buffer.numberOfChannels);\n          const duration = waveSurfer.getDuration();\n          if (duration > longestDuration) {\n            longestDuration = duration; // Track the longest duration\n          }\n\n          // Add the timeline plugin only for the first track\n          if (index === 0) {\n            const timeline = TimelinePlugin.create({\n              insertPosition: 'beforebegin',\n              primaryColor: '#000',\n              secondaryColor: '#c0c0c0',\n              primaryFontColor: '#000',\n              secondaryFontColor: '#000',\n              secondaryLabelOpacity: 0.9,\n              timeInterval: 0.2,\n              primaryLabelInterval: 5,\n              secondaryLabelInterval: 1\n            });\n            waveSurfer.registerPlugin(timeline);\n          }\n        });\n        regions.on('region-created', region => {\n          regions.getRegions().forEach(r => {\n            if (r.id !== region.id) {\n              r.remove();\n            }\n          });\n        });\n        regions.on('region-clicked', (region, e) => {\n          e.stopPropagation();\n          region.remove();\n        });\n        regions.enableDragSelection({\n          color: 'rgba(245, 137, 5, 0.4)'\n        });\n        wavesurferRefs.current[index] = waveSurfer;\n        waveSurferData.push({\n          waveSurfer,\n          regions,\n          audioContext,\n          mediaNode\n        });\n      });\n    }\n  };\n  const scheduleWaveSurferInitialization = () => {\n    setTimeout(() => initializeWaveSurfer(), 100); // Small delay\n  };\n  if (audioFiles && audioFiles.length > 0 && wavesurferRefs.current.length === 0) {\n    scheduleWaveSurferInitialization();\n  }\n  ;\n\n  // dropdown menu\n  const toggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagebackground\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"musicbackground\",\n      ref: musicbackgroundRef,\n      children: audioFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"trackName\",\n          className: \"trackNameStyle\",\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"timeline\",\n          className: \"timelineStyle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"waveformStyle\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: el => containerRefs.current[index] = el,\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      waveData: waveSurferData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), audioFiles && audioFiles.length > 0 ? /*#__PURE__*/_jsxDEV(PlayButton, {\n      wavesurferRefs: wavesurferRefs,\n      setSpeed: setSpeed // Pass the setSpeed function\n      ,\n      isReady: isReady,\n      speed: speed,\n      aContext: audioContext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No audio tracks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"exportButton\",\n      onClick: async () => {\n        await mergeAudioFiles(); // Wait for the audio merging to complete\n        navigate('/Exportpage'); // Navigate to the export page after merging\n      },\n      children: \"Export\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"dropdownButton\",\n      onClick: toggleDropdown,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: PlusIcon,\n        alt: \"Add Tracks\",\n        style: {\n          width: '22px',\n          height: '22px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdownMenu\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFilesButtonClick,\n        children: \"FILES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alert('Google Drive Selected'),\n        children: \"GOOGLE DRIVE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      ref: fileInputRef,\n      accept: \"audio/*\",\n      style: {\n        display: 'none'\n      },\n      onChange: handleAddFiles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n_s(Landingpage, \"sEXoAu3AfcX1bWIXAvWGS5kPBXI=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Landingpage;\nexport default Landingpage;\nvar _c;\n$RefreshReg$(_c, \"Landingpage\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useNavigate","WaveSurfer","RegionsPlugin","TimelinePlugin","useLocation","Sidebar","PlayButton","PlusIcon","jsxDEV","_jsxDEV","waveSurferData","regions","create","audioContext","AudioContext","audio","Audio","controls","Landingpage","_s","_location$state","navigate","wavesurferRefs","containerRefs","musicbackgroundRef","location","audioFiles","setAudioFiles","state","isReady","setIsReady","speed","setSpeed","isDropdownOpen","setIsDropdownOpen","fileInputRef","longestDuration","_location$state2","initializeWaveSurfer","current","length","forEach","file","index","container","console","error","src","url","waveSurfer","waveColor","progressColor","height","autoCenter","interact","backend","cursorWidth","cursorColor","backgroundColor","media","plugins","mediaNode","createMediaElementSource","on","buffer","getDecodedData","log","duration","sampleRate","numberOfChannels","getDuration","timeline","insertPosition","primaryColor","secondaryColor","primaryFontColor","secondaryFontColor","secondaryLabelOpacity","timeInterval","primaryLabelInterval","secondaryLabelInterval","registerPlugin","region","getRegions","r","id","remove","e","stopPropagation","enableDragSelection","color","push","scheduleWaveSurferInitialization","setTimeout","toggleDropdown","className","children","ref","map","name","fileName","_jsxFileName","lineNumber","columnNumber","el","style","width","waveData","aContext","onClick","mergeAudioFiles","alt","handleFilesButtonClick","alert","type","multiple","accept","display","onChange","handleAddFiles","_c","$RefreshReg$"],"sources":["C:/Users/elect/Documents/CIS/4914/Mellowdies/mellowdies/src/Landingpage/Landingpage.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';  // Import useNavigate at the top\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport RegionsPlugin from \"wavesurfer.js/dist/plugins/regions.js\";\r\nimport TimelinePlugin from 'wavesurfer.js/dist/plugins/timeline';  // Import the timeline plugin\r\nimport { useLocation } from 'react-router-dom';\r\nimport Sidebar from './Sidebar.js';\r\nimport './Landingpage.css';  \r\nimport PlayButton from './PlayButton.js';\r\nimport PlusIcon from '../images/icons/plus.png'\r\n\r\n\r\nconst waveSurferData = [];\r\nconst regions = RegionsPlugin.create();\r\nconst audioContext = new AudioContext();\r\nconst audio = new Audio();\r\naudio.controls = true\r\n\r\nfunction Landingpage() {\r\n    const navigate = useNavigate();  // Define navigate using the useNavigate hook\r\n    const wavesurferRefs = useRef([]);\r\n    const containerRefs = useRef([]);\r\n    const musicbackgroundRef = useRef(null);  // Ref for the music background container\r\n    const location = useLocation();\r\n\r\n    const [audioFiles, setAudioFiles] = useState(location.state?.audioFiles || []);\r\n    const [isReady, setIsReady] = useState(false);\r\n    const [speed, setSpeed] = useState(1);\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n    const fileInputRef = useRef(null); // Create a ref for the file input\r\n    let longestDuration = 0;  // Variable to track the longest track duration\r\n\r\n    useEffect(() => {\r\n        if (location.state?.audioFiles) {\r\n            setAudioFiles(location.state.audioFiles);\r\n        }\r\n    }, [location.state]);\r\n\r\n    const initializeWaveSurfer = () => {\r\n        wavesurferRefs.current = [];\r\n    \r\n        if (audioFiles && audioFiles.length > 0) {\r\n            audioFiles.forEach((file, index) => {\r\n                const container = containerRefs.current[index];\r\n                if (!container) {\r\n                    console.error(`Container for index ${index} not found`);\r\n                    return;\r\n                }\r\n\r\n                audio.src = file.url\r\n\r\n                const waveSurfer = WaveSurfer.create({\r\n                    container: container, // Safely use the container\r\n                    waveColor: 'blue',\r\n                    progressColor: '#00FFFF',\r\n                    height: 75,\r\n                    autoCenter: true,\r\n                    interact: true,\r\n                    backend: 'MediaElement',\r\n                    cursorWidth: 2,\r\n                    cursorColor: '#FF0000',\r\n                    backgroundColor: 'rgba(255, 255, 255, 0)',\r\n                    //minPxPerSec: 200,\r\n                    media: audio,\r\n                    plugins: [regions],\r\n                });\r\n\r\n                const mediaNode = audioContext.createMediaElementSource(audio);\r\n\r\n                waveSurfer.on('ready', () => {setIsReady(true);\r\n                    const buffer = waveSurfer.getDecodedData();\r\n        \r\n                    console.log('buffer length : ', buffer.length);\r\n                    console.log('buffer duration : ', buffer.duration);\r\n                    console.log('buffer sampleRate : ', buffer.sampleRate);\r\n                    console.log('buffer numberOfChannels : ', buffer.numberOfChannels);\r\n\r\n                    const duration = waveSurfer.getDuration();\r\n\r\n                    if (duration > longestDuration) {\r\n                        longestDuration = duration;  // Track the longest duration\r\n                    }\r\n\r\n                    // Add the timeline plugin only for the first track\r\n                    if (index === 0) {\r\n                        const timeline = TimelinePlugin.create({\r\n                            insertPosition: 'beforebegin',\r\n                            primaryColor: '#000',\r\n                            secondaryColor: '#c0c0c0',\r\n                            primaryFontColor: '#000',\r\n                            secondaryFontColor: '#000',\r\n                            secondaryLabelOpacity: 0.9,\r\n                            timeInterval: 0.2,\r\n                            primaryLabelInterval: 5,\r\n                            secondaryLabelInterval: 1,\r\n                        });\r\n\r\n                        waveSurfer.registerPlugin(timeline);\r\n                    }\r\n                });\r\n    \r\n                regions.on('region-created', (region) => {\r\n                    regions.getRegions().forEach((r) => {\r\n                        if (r.id !== region.id) {\r\n                            r.remove();\r\n                        }\r\n                    });\r\n                });\r\n\r\n                regions.on('region-clicked', (region, e) => {\r\n                    e.stopPropagation();\r\n                    region.remove();\r\n                });\r\n    \r\n                regions.enableDragSelection({\r\n                    color: 'rgba(245, 137, 5, 0.4)',\r\n                });\r\n    \r\n                wavesurferRefs.current[index] = waveSurfer;\r\n                waveSurferData.push({ waveSurfer, regions, audioContext, mediaNode });\r\n                \r\n            });\r\n        }\r\n    };\r\n\r\n    const scheduleWaveSurferInitialization = () => {\r\n        setTimeout(() => initializeWaveSurfer(), 100); // Small delay\r\n    };\r\n\r\n    if (audioFiles && audioFiles.length > 0 && wavesurferRefs.current.length === 0) {\r\n        scheduleWaveSurferInitialization();\r\n};\r\n\r\n    // dropdown menu\r\n    const toggleDropdown = () => {\r\n        setIsDropdownOpen(!isDropdownOpen);\r\n    };\r\n\r\n    return (\r\n        <div className=\"pagebackground\">\r\n            <div\r\n                className=\"musicbackground\"\r\n                ref={musicbackgroundRef}\r\n            >\r\n                {audioFiles.map((file, index) => (\r\n                    <div>\r\n                        <div id=\"trackName\" className=\"trackNameStyle\">{file.name}</div>\r\n                        <div id=\"timeline\" className=\"timelineStyle\"></div>\r\n                        <div key={index} className=\"waveformStyle\">\r\n                            <div ref={el => containerRefs.current[index] = el} style={{ width: '100%' }}></div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <Sidebar waveData={waveSurferData}/>\r\n\r\n            {audioFiles && audioFiles.length > 0 ? (\r\n                <PlayButton \r\n                    wavesurferRefs={wavesurferRefs}\r\n                    setSpeed={setSpeed}  // Pass the setSpeed function\r\n                    isReady={isReady}\r\n                    speed={speed}\r\n                    aContext={audioContext}\r\n                />\r\n            ) : (\r\n                <p>No audio tracks available.</p>\r\n            )}\r\n\r\n            <button className=\"exportButton\" onClick={async () => {\r\n            await mergeAudioFiles();  // Wait for the audio merging to complete\r\n            navigate('/Exportpage');  // Navigate to the export page after merging\r\n            }}>\r\n            Export\r\n            </button>\r\n          \r\n            <button className=\"dropdownButton\" onClick={toggleDropdown}>\r\n                <img src={PlusIcon} alt=\"Add Tracks\" style={{ width: '22px', height: '22px' }} />\r\n            </button>\r\n\r\n            {isDropdownOpen && (\r\n                 <div className=\"dropdownMenu\">\r\n                    <button onClick={handleFilesButtonClick}>FILES</button>\r\n                    <button onClick={() => alert('Google Drive Selected')}>GOOGLE DRIVE</button>\r\n                </div>\r\n            )}\r\n\r\n            <input\r\n                type=\"file\"\r\n                multiple\r\n                ref={fileInputRef}\r\n                accept='audio/*'\r\n                style={{ display: 'none' }}\r\n                onChange={handleAddFiles} \r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Landingpage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}