{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\james\\\\Downloads\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Landingpage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport { useLocation } from 'react-router-dom';\nimport Menu from './Menu.js';\nimport cloud from '../images/cloud.png'; // Adjust the path if needed\nimport PlayButton from './PlayButton.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pagebackground = {\n  backgroundSize: 'cover',\n  backgroundImage: `url(${cloud})`,\n  // Set the image as the background\n  backgroundPosition: 'center',\n  // Centers the background\n  padding: '10px',\n  // Adjust the padding\n  height: '100vh',\n  // Full viewport height\n  margin: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  // Arrange children in a column\n  fontFamily: 'Concert One' // Use Concert One font\n};\nconst trackbackground = {\n  width: '75%',\n  height: '80%',\n  radius: '30px',\n  position: 'fixed',\n  top: '50%',\n  right: '0',\n  transform: 'translateY(-50%)',\n  display: 'flex',\n  justifyContent: 'left',\n  alignItems: 'left',\n  border: '2px solid #ffffff',\n  // Sharp white border\n  backgroundColor: 'rgba(255, 255, 255, 0.3)',\n  // Slightly transparent white background\n  fontFamily: \"'Concert One', cursive\",\n  // Apply Concert One font\n  marginTop: '10px',\n  marginRight: '2%',\n  // Space between the buttons\n  textAlign: 'center',\n  fontSize: '1.2rem',\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\n  // Soft, glowy white shadow\n  border: 'none',\n  overflowX: 'auto',\n  // Enable horizontal scrolling\n  whiteSpace: 'nowrap' // Prevent wrapping of child elements\n};\nconst waveformStyle = {\n  width: '200%',\n  // Make the waveform width larger than its container to enable scrolling\n  minWidth: '100%' // Ensure it at least takes up the full width\n};\nfunction Landingpage() {\n  _s();\n  const waveformRef = useRef(null);\n  const wavesurferRef = useRef(null);\n  const location = useLocation();\n  const {\n    audioFiles\n  } = location.state || {\n    audioFiles: []\n  };\n  const [isReady, setIsReady] = useState(false); // State to track if WaveSurfer is ready\n  const [speed, setSpeed] = useState(1); // State for playback speed\n  const [progress, setProgress] = useState(0); // State for progress bar\n\n  useEffect(() => {\n    if (audioFiles && audioFiles.length > 0 && waveformRef.current) {\n      console.log('Creating WaveSurfer instance...');\n      wavesurferRef.current = WaveSurfer.create({\n        container: waveformRef.current,\n        waveColor: 'blue',\n        progressColor: '#00FFFF',\n        // The color of the progress bar\n        height: 75,\n        autoCenter: true,\n        // Ensures the progress bar stays centered\n        interact: true,\n        // Enable user interaction (clicking, dragging)\n        backend: 'MediaElement',\n        // Use the MediaElement backend to support interaction\n        cursorWidth: 2,\n        // Visual indication of the cursor\n        cursorColor: '#FF0000',\n        backgroundColor: 'rgba(255, 255, 255, 255)' // Slightly transparent white background\n      });\n      if (wavesurferRef.current) {\n        console.log('Loading audio file:', audioFiles[0].url);\n        wavesurferRef.current.load(audioFiles[0].url);\n\n        // Listen for the ready event to ensure the WaveSurfer instance is fully loaded\n        wavesurferRef.current.on('ready', () => {\n          setIsReady(true); // Set the state to true when ready\n        });\n        // Update the progress state\n        wavesurferRef.current.on('audioprocess', () => {\n          setProgress(wavesurferRef.current.getCurrentTime() / wavesurferRef.current.getDuration() * 100);\n        });\n        wavesurferRef.current.on('seek', progress => {\n          setProgress(progress * 100);\n        });\n      }\n      const handlePinchZoom = event => {\n        if (event.touches.length === 2) {\n          // Detect two fingers\n          event.preventDefault();\n          const distance = Math.hypot(event.touches[0].clientX - event.touches[1].clientX, event.touches[0].clientY - event.touches[1].clientY);\n          if (!handlePinchZoom.lastDistance) {\n            handlePinchZoom.lastDistance = distance;\n          } else {\n            const zoomFactor = distance / handlePinchZoom.lastDistance;\n            const currentZoomLevel = wavesurferRef.current.params.minPxPerSec;\n            const newZoomLevel = Math.max(currentZoomLevel * zoomFactor, 20); // Minimum zoom level\n\n            wavesurferRef.current.zoom(newZoomLevel);\n            handlePinchZoom.lastDistance = distance;\n          }\n        }\n      };\n      waveformRef.current.addEventListener('touchmove', handlePinchZoom);\n      return () => {\n        if (wavesurferRef.current) {\n          wavesurferRef.current.destroy();\n          wavesurferRef.current = null;\n        }\n        waveformRef.current.removeEventListener('touchmove', handlePinchZoom);\n      };\n    }\n  }, [audioFiles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: pagebackground,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"waveform-container\",\n      ref: waveformRef,\n      style: {\n        ...waveformStyle,\n        touchAction: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), audioFiles && audioFiles.length > 0 ? /*#__PURE__*/_jsxDEV(PlayButton, {\n      wavesurferRef: wavesurferRef,\n      isReady: isReady,\n      speed: speed,\n      setSpeed: setSpeed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No audio tracks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n}\n_s(Landingpage, \"5fa37r6AUoGUt7KGd2kUwNvSt5A=\", false, function () {\n  return [useLocation];\n});\n_c = Landingpage;\nexport default Landingpage;\nvar _c;\n$RefreshReg$(_c, \"Landingpage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","WaveSurfer","useLocation","Menu","cloud","PlayButton","jsxDEV","_jsxDEV","pagebackground","backgroundSize","backgroundImage","backgroundPosition","padding","height","margin","display","flexDirection","fontFamily","trackbackground","width","radius","position","top","right","transform","justifyContent","alignItems","border","backgroundColor","marginTop","marginRight","textAlign","fontSize","boxShadow","overflowX","whiteSpace","waveformStyle","minWidth","Landingpage","_s","waveformRef","wavesurferRef","location","audioFiles","state","isReady","setIsReady","speed","setSpeed","progress","setProgress","length","current","console","log","create","container","waveColor","progressColor","autoCenter","interact","backend","cursorWidth","cursorColor","url","load","on","getCurrentTime","getDuration","handlePinchZoom","event","touches","preventDefault","distance","Math","hypot","clientX","clientY","lastDistance","zoomFactor","currentZoomLevel","params","minPxPerSec","newZoomLevel","max","zoom","addEventListener","destroy","removeEventListener","style","children","className","ref","touchAction","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/src/Landingpage/Landingpage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Menu from './Menu.js';\r\nimport cloud from '../images/cloud.png';  // Adjust the path if needed\r\nimport PlayButton from './PlayButton.js';\r\n\r\nconst pagebackground= {\r\n    backgroundSize: 'cover',\r\n    backgroundImage: `url(${cloud})`,  // Set the image as the background\r\n    backgroundPosition: 'center',  // Centers the background\r\n    padding: '10px',  // Adjust the padding\r\n    height: '100vh',  // Full viewport height\r\n    margin: 0,\r\n    display: 'flex',\r\n    flexDirection: 'column',  // Arrange children in a column\r\n    fontFamily: 'Concert One',  // Use Concert One font\r\n}\r\n\r\nconst trackbackground = {\r\n    width: '75%',\r\n    height: '80%',\r\n    radius: '30px',\r\n    position: 'fixed',\r\n    top: '50%',\r\n    right: '0',\r\n    transform: 'translateY(-50%)',\r\n    display: 'flex',\r\n    justifyContent: 'left',\r\n    alignItems: 'left',\r\n    border: '2px solid #ffffff',  // Sharp white border\r\n    backgroundColor: 'rgba(255, 255, 255, 0.3)',  // Slightly transparent white background\r\n    fontFamily: \"'Concert One', cursive\",  // Apply Concert One font\r\n    marginTop: '10px', \r\n    marginRight: '2%', // Space between the buttons\r\n    textAlign: 'center',\r\n    fontSize: '1.2rem',\r\n    boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',  // Soft, glowy white shadow\r\n    border: 'none',\r\n    overflowX: 'auto',  // Enable horizontal scrolling\r\n    whiteSpace: 'nowrap',  // Prevent wrapping of child elements\r\n};\r\n\r\nconst waveformStyle = {\r\n    width: '200%',  // Make the waveform width larger than its container to enable scrolling\r\n    minWidth: '100%',  // Ensure it at least takes up the full width\r\n};\r\n\r\nfunction Landingpage() {\r\n    const waveformRef = useRef(null);\r\n    const wavesurferRef = useRef(null);\r\n    const location = useLocation();\r\n    const { audioFiles } = location.state || { audioFiles: [] };\r\n    const [isReady, setIsReady] = useState(false);  // State to track if WaveSurfer is ready\r\n    const [speed, setSpeed] = useState(1); // State for playback speed\r\n    const [progress, setProgress] = useState(0); // State for progress bar\r\n\r\n    useEffect(() => {\r\n        if (audioFiles && audioFiles.length > 0 && waveformRef.current) {\r\n            console.log('Creating WaveSurfer instance...');\r\n            wavesurferRef.current = WaveSurfer.create({\r\n                container: waveformRef.current,\r\n                waveColor: 'blue',\r\n                progressColor: '#00FFFF',  // The color of the progress bar\r\n                height: 75,\r\n                autoCenter: true,  // Ensures the progress bar stays centered\r\n                 interact: true,  // Enable user interaction (clicking, dragging)\r\n                backend: 'MediaElement',  // Use the MediaElement backend to support interaction\r\n                cursorWidth: 2,  // Visual indication of the cursor\r\n                cursorColor: '#FF0000',\r\n                backgroundColor: 'rgba(255, 255, 255, 255)',  // Slightly transparent white background\r\n            });\r\n\r\n            if (wavesurferRef.current) {\r\n                console.log('Loading audio file:', audioFiles[0].url);\r\n                wavesurferRef.current.load(audioFiles[0].url);\r\n\r\n                // Listen for the ready event to ensure the WaveSurfer instance is fully loaded\r\n                wavesurferRef.current.on('ready', () => {\r\n                    setIsReady(true);  // Set the state to true when ready\r\n                });\r\n                // Update the progress state\r\n                wavesurferRef.current.on('audioprocess', () => {\r\n                    setProgress(wavesurferRef.current.getCurrentTime() / wavesurferRef.current.getDuration() * 100);\r\n                });\r\n\r\n                wavesurferRef.current.on('seek', (progress) => {\r\n                    setProgress(progress * 100);\r\n                });\r\n            }\r\n\r\n            const handlePinchZoom = (event) => {\r\n                if (event.touches.length === 2) {  // Detect two fingers\r\n                    event.preventDefault();\r\n                    \r\n                    const distance = Math.hypot(\r\n                        event.touches[0].clientX - event.touches[1].clientX,\r\n                        event.touches[0].clientY - event.touches[1].clientY\r\n                    );\r\n\r\n                    if (!handlePinchZoom.lastDistance) {\r\n                        handlePinchZoom.lastDistance = distance;\r\n                    } else {\r\n                        const zoomFactor = distance / handlePinchZoom.lastDistance;\r\n                        const currentZoomLevel = wavesurferRef.current.params.minPxPerSec;\r\n                        const newZoomLevel = Math.max(currentZoomLevel * zoomFactor, 20); // Minimum zoom level\r\n\r\n                        wavesurferRef.current.zoom(newZoomLevel);\r\n\r\n                        handlePinchZoom.lastDistance = distance;\r\n                    }\r\n                }\r\n            };\r\n\r\n            waveformRef.current.addEventListener('touchmove', handlePinchZoom);\r\n\r\n            return () => {\r\n                if (wavesurferRef.current) {\r\n                    wavesurferRef.current.destroy();\r\n                    wavesurferRef.current = null;\r\n                }\r\n\r\n                waveformRef.current.removeEventListener('touchmove', handlePinchZoom);\r\n            };\r\n        }\r\n    }, [audioFiles]);\r\n\r\n    return (\r\n        <div style={pagebackground}>\r\n            <div\r\n                className=\"waveform-container\"\r\n                ref={waveformRef}\r\n                style={{ ...waveformStyle, touchAction: 'none' }}\r\n            ></div> {/* Waveform will be displayed here */}\r\n\r\n            <Menu/>\r\n\r\n            {audioFiles && audioFiles.length > 0 ? (\r\n                <PlayButton\r\n                    wavesurferRef={wavesurferRef}\r\n                    isReady={isReady}\r\n                    speed={speed}\r\n                    setSpeed={setSpeed}\r\n                />\r\n            ) : (\r\n                <p>No audio tracks available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Landingpage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}