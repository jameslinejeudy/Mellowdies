{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elect\\\\Documents\\\\CIS\\\\4914\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Ai.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst menubackground = {/* styles remain unchanged */};\nconst generateButtonStyle = {/* styles remain unchanged */};\nconst descriptionBoxStyle = {/* styles remain unchanged */};\nconst backButtonStyle = {/* styles remain unchanged */};\nconst contentStyle = {/* styles remain unchanged */};\nvar toWav = require('audiobuffer-to-wav');\nvar slicer = require('audiobuffer-slice');\nfunction getAudioSlice(buffer, region) {\n  slicer(buffer, region.start * 1000, region.end * 1000, function (error, slicedBuffer) {\n    if (error) {\n      console.error(error);\n      return;\n    } else {\n      return slicedBuffer;\n    }\n  });\n}\nfunction bufferToWavURL(buffer) {\n  var blob = new window.Blob([new DataView(toWav(buffer))], {\n    type: \"audio/wav\"\n  });\n  wavURL = window.URL.createObjectURL(blob);\n  return wavURL;\n}\nfunction AIMenu({\n  handleBack,\n  waveData\n}) {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [description, setDescription] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [progressMessage, setProgressMessage] = useState(null);\n  const [sendToAI, setSendToAI] = useState(null); // Checkbox state\n  let wavURL = \"\";\n  const handleGenerateMusic = async () => {\n    console.log(waveData);\n    setLoading(true);\n    setErrorMessage(null);\n    setProgressMessage(\"Connecting to the server...\");\n    if (sendToAI != null) {\n      let buffer = waveData[0].waveSurfer.getDecodedData();\n      console.log(buffer);\n      let region = waveData[0].regions.getRegions().at(0);\n      let sliceBuffer = getAudioSlice(buffer, region);\n      wavURL = bufferToWavURL(sliceBuffer);\n    }\n    try {\n      const response = await fetch(\"http://localhost:3001/api/generate-music\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          description,\n          wavURL\n        }) // Send checkbox value to server\n      });\n      if (!response.ok) {\n        throw new Error(\"Server failed to generate music.\");\n      }\n      setProgressMessage(\"Generating music on server...\");\n      const blob = await response.blob();\n      setProgressMessage(\"Downloading generated music file...\");\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `${description}_generated_music.wav`;\n\n      // Trigger download\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n      URL.revokeObjectURL(url);\n      setProgressMessage(\"Download complete. Check your Downloads folder.\");\n    } catch (error) {\n      console.error(\"Error during music generation or download:\", error);\n      setErrorMessage(`Failed to generate or download music: ${error.message}`);\n      setProgressMessage(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: menubackground,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: contentStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI Music Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 26\n      }, this), progressMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"blue\"\n        },\n        children: progressMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        style: descriptionBoxStyle,\n        placeholder: \"Describe your music...\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: sendToAI,\n            onChange: e => setSendToAI(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), \"Send selected music region to AI\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: generateButtonStyle,\n        onClick: handleGenerateMusic,\n        disabled: loading,\n        children: loading ? \"Processing...\" : \"Generate Music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: backButtonStyle,\n        onClick: handleBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(AIMenu, \"vizcjtRtIzFtzVQEs6l5+inyRtY=\");\n_c = AIMenu;\nexport default AIMenu;\nvar _c;\n$RefreshReg$(_c, \"AIMenu\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","menubackground","generateButtonStyle","descriptionBoxStyle","backButtonStyle","contentStyle","toWav","require","slicer","getAudioSlice","buffer","region","start","end","error","slicedBuffer","console","bufferToWavURL","blob","window","Blob","DataView","type","wavURL","URL","createObjectURL","AIMenu","handleBack","waveData","_s","loading","setLoading","description","setDescription","errorMessage","setErrorMessage","progressMessage","setProgressMessage","sendToAI","setSendToAI","handleGenerateMusic","log","waveSurfer","getDecodedData","regions","getRegions","at","sliceBuffer","response","fetch","method","headers","body","JSON","stringify","ok","Error","url","a","document","createElement","href","download","appendChild","click","remove","revokeObjectURL","message","style","children","fileName","_jsxFileName","lineNumber","columnNumber","color","placeholder","value","onChange","e","target","checked","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/elect/Documents/CIS/4914/Mellowdies/mellowdies/src/Landingpage/Ai.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst menubackground = { /* styles remain unchanged */ };\r\nconst generateButtonStyle = { /* styles remain unchanged */ };\r\nconst descriptionBoxStyle = { /* styles remain unchanged */ };\r\nconst backButtonStyle = { /* styles remain unchanged */ };\r\nconst contentStyle = { /* styles remain unchanged */ };\r\n\r\nvar toWav = require('audiobuffer-to-wav');\r\nvar slicer = require('audiobuffer-slice');\r\n\r\nfunction getAudioSlice(buffer, region) {\r\n  slicer(buffer, region.start * 1000, region.end * 1000, function(error, slicedBuffer) {\r\n      if (error) {\r\n          console.error(error);\r\n          return;\r\n      } else {\r\n          return slicedBuffer;\r\n      }\r\n  })\r\n}\r\n\r\nfunction bufferToWavURL(buffer) {\r\n  var blob = new window.Blob([new DataView(toWav(buffer))], {type: \"audio/wav\"});\r\n  wavURL = window.URL.createObjectURL(blob);\r\n  return wavURL;\r\n}\r\n\r\nfunction AIMenu({ handleBack, waveData }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [progressMessage, setProgressMessage] = useState(null);\r\n  const [sendToAI, setSendToAI] = useState(null);  // Checkbox state\r\n  let wavURL = \"\";\r\n\r\n  const handleGenerateMusic = async () => {\r\n    console.log(waveData);\r\n    setLoading(true);\r\n    setErrorMessage(null);\r\n    setProgressMessage(\"Connecting to the server...\");\r\n\r\n    if (sendToAI != null) {\r\n      let buffer = waveData[0].waveSurfer.getDecodedData();\r\n      console.log(buffer);\r\n      let region = waveData[0].regions.getRegions().at(0);\r\n      let sliceBuffer = getAudioSlice(buffer, region);\r\n      wavURL = bufferToWavURL(sliceBuffer);\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:3001/api/generate-music\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ description, wavURL }),  // Send checkbox value to server\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Server failed to generate music.\");\r\n      }\r\n\r\n      setProgressMessage(\"Generating music on server...\");\r\n\r\n      const blob = await response.blob();\r\n      setProgressMessage(\"Downloading generated music file...\");\r\n\r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.download = `${description}_generated_music.wav`;\r\n\r\n      // Trigger download\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      a.remove();\r\n      URL.revokeObjectURL(url);\r\n\r\n      setProgressMessage(\"Download complete. Check your Downloads folder.\");\r\n    } catch (error) {\r\n      console.error(\"Error during music generation or download:\", error);\r\n      setErrorMessage(`Failed to generate or download music: ${error.message}`);\r\n      setProgressMessage(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={menubackground}>\r\n      <div style={contentStyle}>\r\n        <h1>AI Music Generator</h1>\r\n        {errorMessage && <div style={{ color: \"red\" }}>{errorMessage}</div>}\r\n        {progressMessage && <div style={{ color: \"blue\" }}>{progressMessage}</div>}\r\n        <textarea\r\n          style={descriptionBoxStyle}\r\n          placeholder=\"Describe your music...\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <div>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={sendToAI}\r\n              onChange={(e) => setSendToAI(e.target.checked)}\r\n            />\r\n            Send selected music region to AI\r\n          </label>\r\n        </div>\r\n        <button style={generateButtonStyle} onClick={handleGenerateMusic} disabled={loading}>\r\n          {loading ? \"Processing...\" : \"Generate Music\"}\r\n        </button>\r\n        <button style={backButtonStyle} onClick={handleBack}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AIMenu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}