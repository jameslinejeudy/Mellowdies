{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elect\\\\Documents\\\\CIS\\\\4914\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Landingpage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport { useLocation } from 'react-router-dom';\nimport Sidebar from './Sidebar.js';\nimport cloud from '../images/cloud.png';\nimport PlayButton from './PlayButton.js';\nimport Menu from './Menu'; // Import Menu\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Landingpage() {\n  _s();\n  const wavesurferRefs = useRef([]);\n  const location = useLocation();\n  const {\n    audioFiles\n  } = location.state || {\n    audioFiles: []\n  };\n  const [isReady, setIsReady] = useState(false);\n  const [speed, setSpeed] = useState(1);\n  const [progress, setProgress] = useState(0);\n  const [isMenuOpen, setIsMenuOpen] = useState(true); // Add state for menu visibility\n\n  useEffect(() => {\n    wavesurferRefs.current = [];\n    if (audioFiles && audioFiles.length > 0) {\n      audioFiles.forEach((file, index) => {\n        const waveSurfer = WaveSurfer.create({\n          container: `#waveform-${index}`,\n          waveColor: 'blue',\n          progressColor: '#00FFFF',\n          height: 75,\n          backend: 'MediaElement'\n        });\n        waveSurfer.load(file.url);\n        waveSurfer.on('ready', () => setIsReady(true));\n        waveSurfer.on('audioprocess', () => {\n          setProgress(waveSurfer.getCurrentTime() / waveSurfer.getDuration() * 100);\n        });\n        waveSurfer.on('seek', progress => {\n          setProgress(progress * 100);\n        });\n        wavesurferRefs.current[index] = waveSurfer;\n      });\n      return () => {\n        wavesurferRefs.current.forEach(waveSurfer => waveSurfer.destroy());\n      };\n    }\n  }, [audioFiles]);\n  const handleVolumeChange = volume => {\n    wavesurferRefs.current.forEach(waveSurfer => waveSurfer.setVolume(volume));\n  };\n  const handlePlaybackRateChange = rate => {\n    setSpeed(rate);\n    wavesurferRefs.current.forEach(waveSurfer => waveSurfer.setPlaybackRate(rate));\n  };\n  const handleEffects = (effectType, value) => {\n    // Example for handling a \"reverb\" effect\n    if (effectType === 'reverb') {\n      // Implement effect processing logic (depends on effect type or external library)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: pagebackground,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: musicbackground,\n      children: audioFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: waveformStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: trackNameStyle,\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `waveform-${index}`,\n          style: {\n            width: '100%',\n            height: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), isMenuOpen && /*#__PURE__*/_jsxDEV(Menu, {\n      handleBack: () => setIsMenuOpen(false),\n      handleVolumeChange: handleVolumeChange,\n      handlePlaybackRateChange: handlePlaybackRateChange,\n      handleEffects: handleEffects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), audioFiles && audioFiles.length > 0 ? /*#__PURE__*/_jsxDEV(PlayButton, {\n      playAllTracks: () => wavesurferRefs.current.forEach(waveSurfer => waveSurfer.playPause()),\n      forwardAllTracks: () => {\n        wavesurferRefs.current.forEach(waveSurfer => {\n          const currentTime = waveSurfer.getCurrentTime();\n          const duration = waveSurfer.getDuration();\n          waveSurfer.seekTo((currentTime + 5) / duration);\n        });\n      },\n      backwardAllTracks: () => {\n        wavesurferRefs.current.forEach(waveSurfer => {\n          const currentTime = waveSurfer.getCurrentTime();\n          waveSurfer.seekTo(Math.max((currentTime - 5) / waveSurfer.getDuration(), 0));\n        });\n      },\n      seekAllTracks: seekTo => wavesurferRefs.current.forEach(waveSurfer => waveSurfer.seekTo(seekTo)),\n      changeSpeedAllTracks: handlePlaybackRateChange,\n      isReady: isReady,\n      speed: speed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No audio tracks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(Landingpage, \"nMBL+V2++loqgMnnnxSo6ZfMoEc=\", false, function () {\n  return [useLocation];\n});\n_c = Landingpage;\nexport default Landingpage;\nvar _c;\n$RefreshReg$(_c, \"Landingpage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","WaveSurfer","useLocation","Sidebar","cloud","PlayButton","Menu","jsxDEV","_jsxDEV","Landingpage","_s","wavesurferRefs","location","audioFiles","state","isReady","setIsReady","speed","setSpeed","progress","setProgress","isMenuOpen","setIsMenuOpen","current","length","forEach","file","index","waveSurfer","create","container","waveColor","progressColor","height","backend","load","url","on","getCurrentTime","getDuration","destroy","handleVolumeChange","volume","setVolume","handlePlaybackRateChange","rate","setPlaybackRate","handleEffects","effectType","value","style","pagebackground","children","musicbackground","map","waveformStyle","trackNameStyle","name","fileName","_jsxFileName","lineNumber","columnNumber","id","width","handleBack","playAllTracks","playPause","forwardAllTracks","currentTime","duration","seekTo","backwardAllTracks","Math","max","seekAllTracks","changeSpeedAllTracks","_c","$RefreshReg$"],"sources":["C:/Users/elect/Documents/CIS/4914/Mellowdies/mellowdies/src/Landingpage/Landingpage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Sidebar from './Sidebar.js';\r\nimport cloud from '../images/cloud.png';\r\nimport PlayButton from './PlayButton.js';\r\nimport Menu from './Menu'; // Import Menu\r\n\r\nfunction Landingpage() {\r\n    const wavesurferRefs = useRef([]);\r\n    const location = useLocation();\r\n    const { audioFiles } = location.state || { audioFiles: [] };\r\n    const [isReady, setIsReady] = useState(false);\r\n    const [speed, setSpeed] = useState(1);\r\n    const [progress, setProgress] = useState(0);\r\n    const [isMenuOpen, setIsMenuOpen] = useState(true);  // Add state for menu visibility\r\n\r\n    useEffect(() => {\r\n        wavesurferRefs.current = [];\r\n        if (audioFiles && audioFiles.length > 0) {\r\n            audioFiles.forEach((file, index) => {\r\n                const waveSurfer = WaveSurfer.create({\r\n                    container: `#waveform-${index}`,\r\n                    waveColor: 'blue',\r\n                    progressColor: '#00FFFF',\r\n                    height: 75,\r\n                    backend: 'MediaElement',\r\n                });\r\n\r\n                waveSurfer.load(file.url);\r\n\r\n                waveSurfer.on('ready', () => setIsReady(true));\r\n\r\n                waveSurfer.on('audioprocess', () => {\r\n                    setProgress(waveSurfer.getCurrentTime() / waveSurfer.getDuration() * 100);\r\n                });\r\n\r\n                waveSurfer.on('seek', (progress) => {\r\n                    setProgress(progress * 100);\r\n                });\r\n\r\n                wavesurferRefs.current[index] = waveSurfer;\r\n            });\r\n\r\n            return () => {\r\n                wavesurferRefs.current.forEach(waveSurfer => waveSurfer.destroy());\r\n            };\r\n        }\r\n    }, [audioFiles]);\r\n\r\n    const handleVolumeChange = (volume) => {\r\n        wavesurferRefs.current.forEach(waveSurfer => waveSurfer.setVolume(volume));\r\n    };\r\n\r\n    const handlePlaybackRateChange = (rate) => {\r\n        setSpeed(rate);\r\n        wavesurferRefs.current.forEach(waveSurfer => waveSurfer.setPlaybackRate(rate));\r\n    };\r\n\r\n    const handleEffects = (effectType, value) => {\r\n        // Example for handling a \"reverb\" effect\r\n        if (effectType === 'reverb') {\r\n            // Implement effect processing logic (depends on effect type or external library)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={pagebackground}>\r\n            <div style={musicbackground}>\r\n                {audioFiles.map((file, index) => (\r\n                    <div key={index} style={waveformStyle}>\r\n                        <div style={trackNameStyle}>{file.name}</div>\r\n                        <div id={`waveform-${index}`} style={{ width: '100%', height: '100%' }}></div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <Sidebar />\r\n            {isMenuOpen && (\r\n                <Menu\r\n                    handleBack={() => setIsMenuOpen(false)}\r\n                    handleVolumeChange={handleVolumeChange}\r\n                    handlePlaybackRateChange={handlePlaybackRateChange}\r\n                    handleEffects={handleEffects}\r\n                />\r\n            )}\r\n\r\n            {audioFiles && audioFiles.length > 0 ? (\r\n                <PlayButton\r\n                    playAllTracks={() => wavesurferRefs.current.forEach(waveSurfer => waveSurfer.playPause())}\r\n                    forwardAllTracks={() => {\r\n                        wavesurferRefs.current.forEach(waveSurfer => {\r\n                            const currentTime = waveSurfer.getCurrentTime();\r\n                            const duration = waveSurfer.getDuration();\r\n                            waveSurfer.seekTo((currentTime + 5) / duration);\r\n                        });\r\n                    }}\r\n                    backwardAllTracks={() => {\r\n                        wavesurferRefs.current.forEach(waveSurfer => {\r\n                            const currentTime = waveSurfer.getCurrentTime();\r\n                            waveSurfer.seekTo(Math.max((currentTime - 5) / waveSurfer.getDuration(), 0));\r\n                        });\r\n                    }}\r\n                    seekAllTracks={(seekTo) => wavesurferRefs.current.forEach(waveSurfer => waveSurfer.seekTo(seekTo))}\r\n                    changeSpeedAllTracks={handlePlaybackRateChange}\r\n                    isReady={isReady}\r\n                    speed={speed}\r\n                />\r\n            ) : (\r\n                <p>No audio tracks available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Landingpage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}