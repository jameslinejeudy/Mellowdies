{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elect\\\\Documents\\\\CIS\\\\4914\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Landingpage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport RegionsPlugin from \"wavesurfer.js/dist/plugins/regions.js\";\nimport { useLocation } from 'react-router-dom';\nimport Sidebar from './Sidebar.js';\nimport cloud from '../images/cloud.png';\nimport PlayButton from './PlayButton.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pagebackground = {\n  backgroundSize: 'cover',\n  backgroundImage: `url(${cloud})`,\n  backgroundPosition: 'center',\n  padding: '10px',\n  height: '100vh',\n  margin: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  fontFamily: 'Concert One'\n};\nconst musicbackground = {\n  width: '75%',\n  height: '80%',\n  position: 'fixed',\n  top: '0',\n  right: '0',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'flex-start',\n  alignItems: 'left',\n  backgroundColor: 'rgba(255, 255, 255, 0.3)',\n  marginTop: '5px',\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\n  overflowY: 'auto',\n  padding: '10px'\n};\nconst trackNameStyle = {\n  position: 'relative',\n  color: '#000000',\n  fontSize: '0.8rem',\n  zIndex: '1002',\n  padding: '5px',\n  borderRadius: '5px',\n  backgroundColor: 'rgba(255, 255, 255, 0.7)'\n};\nconst waveformStyle = {\n  width: '100%',\n  height: '75px',\n  position: 'relative',\n  marginBottom: '20px'\n};\nfunction copy(region, instance) {\n  var segmentDuration = region.end - region.start;\n  var originalBuffer = instance.backend.buffer;\n  var emptySegment = instance.backend.ac.createBuffer(originalBuffer.numberOfChannels, segmentDuration * originalBuffer.sampleRate, originalBuffer.sampleRate);\n  for (var i = 0; i < originalBuffer.numberOfChannels; i++) {\n    var chanData = originalBuffer.getChannelData(i);\n    var emptySegmentData = emptySegment.getChannelData(i);\n    var mid_data = chanData.subarray(region.start * originalBuffer.sampleRate, region.end * originalBuffer.sampleRate);\n    emptySegmentData.set(mid_data);\n  }\n}\nfunction bufferToWave(abuffer, offset, len) {\n  var numOfChan = abuffer.numberOfChannels,\n    length = len * numOfChan * 2 + 44,\n    buffer = new ArrayBuffer(length),\n    view = new DataView(buffer),\n    channels = [],\n    i,\n    sample,\n    pos = 0;\n\n  // write WAVE header\n  setUint32(0x46464952); // \"RIFF\"\n  setUint32(length - 8); // file length - 8\n  setUint32(0x45564157); // \"WAVE\"\n\n  setUint32(0x20746d66); // \"fmt \" chunk\n  setUint32(16); // length = 16\n  setUint16(1); // PCM (uncompressed)\n  setUint16(numOfChan);\n  setUint32(abuffer.sampleRate);\n  setUint32(abuffer.sampleRate * 2 * numOfChan); // avg. bytes/sec\n  setUint16(numOfChan * 2); // block-align\n  setUint16(16); // 16-bit (hardcoded in this demo)\n\n  setUint32(0x61746164); // \"data\" - chunk\n  setUint32(length - pos - 4); // chunk length\n\n  // write interleaved data\n  for (i = 0; i < abuffer.numberOfChannels; i++) channels.push(abuffer.getChannelData(i));\n  while (pos < length) {\n    for (i = 0; i < numOfChan; i++) {\n      // interleave channels\n      sample = Math.max(-1, Math.min(1, channels[i][offset])); // clamp\n      sample = (0.5 + sample < 0 ? sample * 32768 : sample * 32767) | 0; // scale to 16-bit signed int\n      view.setInt16(pos, sample, true); // update data chunk\n      pos += 2;\n    }\n    offset++; // next source sample\n  }\n\n  // create Blob\n  return (URL || webkitURL).createObjectURL(new Blob([buffer], {\n    type: \"audio/wav\"\n  }));\n  function setUint16(data) {\n    view.setUint16(pos, data, true);\n    pos += 2;\n  }\n  function setUint32(data) {\n    view.setUint32(pos, data, true);\n    pos += 4;\n  }\n}\nfunction Landingpage() {\n  _s();\n  const wavesurferRefs = useRef([]);\n  const location = useLocation();\n  const {\n    audioFiles\n  } = location.state || {\n    audioFiles: []\n  };\n  const [isReady, setIsReady] = useState(false);\n  const [speed, setSpeed] = useState(1);\n  const [progress, setProgress] = useState(0);\n  const regions = RegionsPlugin.create();\n  try {\n    useEffect(() => {\n      wavesurferRefs.current = [];\n      if (audioFiles && audioFiles.length > 0) {\n        audioFiles.forEach((file, index) => {\n          const waveSurfer = WaveSurfer.create({\n            container: `#waveform-${index}`,\n            waveColor: 'blue',\n            progressColor: '#00FFFF',\n            height: 75,\n            backend: 'MediaElement',\n            plugins: [regions]\n          });\n          waveSurfer.load(file.url);\n          waveSurfer.on('ready', () => setIsReady(true));\n          waveSurfer.on('audioprocess', () => {\n            setProgress(waveSurfer.getCurrentTime() / waveSurfer.getDuration() * 100);\n          });\n          waveSurfer.on('seek', progress => {\n            setProgress(progress * 100);\n          });\n          regions.on('region-created', region => {\n            regions.getRegions().forEach(r => {\n              if (r.id !== region.id) {\n                r.remove();\n              }\n            });\n          });\n\n          // Remove region if it's clicked again\n          regions.on('region-clicked', (region, e) => {\n            e.stopPropagation(); // prevent triggering a click on the waveform\n            region.remove();\n          });\n\n          // Allow region creation by dragging\n          regions.enableDragSelection({\n            color: 'rgba(245, 137, 5, 0.4)'\n          });\n          wavesurferRefs.current[index] = waveSurfer;\n        });\n        return () => {\n          wavesurferRefs.current.forEach(waveSurfer => waveSurfer.destroy());\n        };\n      }\n    }, [audioFiles]);\n  } catch (error) {\n    console.error(\"An error ocurred\", error);\n    setErrorMessage(`${error.message}`);\n  }\n  const handlePlaybackRateChange = rate => {\n    setSpeed(rate);\n    wavesurferRefs.current.forEach(waveSurfer => waveSurfer.setPlaybackRate(rate));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: pagebackground,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: musicbackground,\n      children: audioFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: waveformStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: trackNameStyle,\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `waveform-${index}`,\n          style: {\n            width: '100%',\n            height: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), audioFiles && audioFiles.length > 0 ? /*#__PURE__*/_jsxDEV(PlayButton, {\n      playAllTracks: () => wavesurferRefs.current.forEach(waveSurfer => waveSurfer.playPause()),\n      forwardAllTracks: () => {\n        wavesurferRefs.current.forEach(waveSurfer => {\n          const currentTime = waveSurfer.getCurrentTime();\n          const duration = waveSurfer.getDuration();\n          waveSurfer.seekTo((currentTime + 5) / duration);\n        });\n      },\n      backwardAllTracks: () => {\n        wavesurferRefs.current.forEach(waveSurfer => {\n          const currentTime = waveSurfer.getCurrentTime();\n          waveSurfer.seekTo(Math.max((currentTime - 5) / waveSurfer.getDuration(), 0));\n        });\n      },\n      seekAllTracks: seekTo => wavesurferRefs.current.forEach(waveSurfer => waveSurfer.seekTo(seekTo)),\n      changeSpeedAllTracks: handlePlaybackRateChange,\n      isReady: isReady,\n      speed: speed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No audio tracks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 9\n  }, this);\n}\n_s(Landingpage, \"dK/LU+t3NJJfJRth0ItGrPDsyZM=\", false, function () {\n  return [useLocation];\n});\n_c = Landingpage;\nexport default Landingpage;\nvar _c;\n$RefreshReg$(_c, \"Landingpage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","WaveSurfer","RegionsPlugin","useLocation","Sidebar","cloud","PlayButton","jsxDEV","_jsxDEV","pagebackground","backgroundSize","backgroundImage","backgroundPosition","padding","height","margin","display","flexDirection","fontFamily","musicbackground","width","position","top","right","justifyContent","alignItems","backgroundColor","marginTop","boxShadow","overflowY","trackNameStyle","color","fontSize","zIndex","borderRadius","waveformStyle","marginBottom","copy","region","instance","segmentDuration","end","start","originalBuffer","backend","buffer","emptySegment","ac","createBuffer","numberOfChannels","sampleRate","i","chanData","getChannelData","emptySegmentData","mid_data","subarray","set","bufferToWave","abuffer","offset","len","numOfChan","length","ArrayBuffer","view","DataView","channels","sample","pos","setUint32","setUint16","push","Math","max","min","setInt16","URL","webkitURL","createObjectURL","Blob","type","data","Landingpage","_s","wavesurferRefs","location","audioFiles","state","isReady","setIsReady","speed","setSpeed","progress","setProgress","regions","create","current","forEach","file","index","waveSurfer","container","waveColor","progressColor","plugins","load","url","on","getCurrentTime","getDuration","getRegions","r","id","remove","e","stopPropagation","enableDragSelection","destroy","error","console","setErrorMessage","message","handlePlaybackRateChange","rate","setPlaybackRate","style","children","map","name","fileName","_jsxFileName","lineNumber","columnNumber","playAllTracks","playPause","forwardAllTracks","currentTime","duration","seekTo","backwardAllTracks","seekAllTracks","changeSpeedAllTracks","_c","$RefreshReg$"],"sources":["C:/Users/elect/Documents/CIS/4914/Mellowdies/mellowdies/src/Landingpage/Landingpage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport RegionsPlugin from \"wavesurfer.js/dist/plugins/regions.js\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport Sidebar from './Sidebar.js';\r\nimport cloud from '../images/cloud.png';\r\nimport PlayButton from './PlayButton.js';\r\n\r\nconst pagebackground = {\r\n    backgroundSize: 'cover',\r\n    backgroundImage: `url(${cloud})`,\r\n    backgroundPosition: 'center',\r\n    padding: '10px',\r\n    height: '100vh',\r\n    margin: 0,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    fontFamily: 'Concert One',\r\n};\r\n\r\nconst musicbackground = {\r\n    width: '75%',\r\n    height: '80%',\r\n    position: 'fixed',\r\n    top: '0',\r\n    right: '0',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'left',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.3)',\r\n    marginTop: '5px',\r\n    boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\r\n    overflowY: 'auto',\r\n    padding: '10px',\r\n};\r\n\r\nconst trackNameStyle = {\r\n    position: 'relative',\r\n    color: '#000000',\r\n    fontSize: '0.8rem',\r\n    zIndex: '1002',\r\n    padding: '5px',\r\n    borderRadius: '5px',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.7)',\r\n};\r\n\r\nconst waveformStyle = {\r\n    width: '100%',\r\n    height: '75px',\r\n    position: 'relative',\r\n    marginBottom: '20px',\r\n};\r\n\r\nfunction copy(region, instance) {\r\n    var segmentDuration = region.end - region.start\r\n\r\n    var originalBuffer = instance.backend.buffer;\r\n    var emptySegment = instance.backend.ac.createBuffer(\r\n      originalBuffer.numberOfChannels,\r\n      segmentDuration * originalBuffer.sampleRate,\r\n      originalBuffer.sampleRate\r\n    );\r\n    for (var i = 0; i < originalBuffer.numberOfChannels; i++) {\r\n      var chanData = originalBuffer.getChannelData(i);\r\n      var emptySegmentData = emptySegment.getChannelData(i);\r\n      var mid_data = chanData.subarray( region.start * originalBuffer.sampleRate, region.end * originalBuffer.sampleRate);\r\n      emptySegmentData.set(mid_data);\r\n    }\r\n}\r\n\r\nfunction bufferToWave(abuffer, offset, len) {\r\n\r\n    var numOfChan = abuffer.numberOfChannels,\r\n        length = len * numOfChan * 2 + 44,\r\n        buffer = new ArrayBuffer(length),\r\n        view = new DataView(buffer),\r\n        channels = [], i, sample,\r\n        pos = 0;\r\n  \r\n    // write WAVE header\r\n    setUint32(0x46464952);                         // \"RIFF\"\r\n    setUint32(length - 8);                         // file length - 8\r\n    setUint32(0x45564157);                         // \"WAVE\"\r\n  \r\n    setUint32(0x20746d66);                         // \"fmt \" chunk\r\n    setUint32(16);                                 // length = 16\r\n    setUint16(1);                                  // PCM (uncompressed)\r\n    setUint16(numOfChan);\r\n    setUint32(abuffer.sampleRate);\r\n    setUint32(abuffer.sampleRate * 2 * numOfChan); // avg. bytes/sec\r\n    setUint16(numOfChan * 2);                      // block-align\r\n    setUint16(16);                                 // 16-bit (hardcoded in this demo)\r\n  \r\n    setUint32(0x61746164);                         // \"data\" - chunk\r\n    setUint32(length - pos - 4);                   // chunk length\r\n  \r\n    // write interleaved data\r\n    for(i = 0; i < abuffer.numberOfChannels; i++)\r\n      channels.push(abuffer.getChannelData(i));\r\n  \r\n    while(pos < length) {\r\n      for(i = 0; i < numOfChan; i++) {             // interleave channels\r\n        sample = Math.max(-1, Math.min(1, channels[i][offset])); // clamp\r\n        sample = (0.5 + sample < 0 ? sample * 32768 : sample * 32767)|0; // scale to 16-bit signed int\r\n        view.setInt16(pos, sample, true);          // update data chunk\r\n        pos += 2;\r\n      }\r\n      offset++                                     // next source sample\r\n    }\r\n  \r\n    // create Blob\r\n    return (URL || webkitURL).createObjectURL(new Blob([buffer], {type: \"audio/wav\"}));\r\n  \r\n    function setUint16(data) {\r\n      view.setUint16(pos, data, true);\r\n      pos += 2;\r\n    }\r\n  \r\n    function setUint32(data) {\r\n      view.setUint32(pos, data, true);\r\n      pos += 4;\r\n    }\r\n}\r\n\r\nfunction Landingpage() {\r\n    const wavesurferRefs = useRef([]);\r\n    const location = useLocation();\r\n    const { audioFiles } = location.state || { audioFiles: [] };\r\n    const [isReady, setIsReady] = useState(false);\r\n    const [speed, setSpeed] = useState(1);\r\n    const [progress, setProgress] = useState(0);\r\n    const regions = RegionsPlugin.create();\r\n\r\n    try {\r\n        useEffect(() => {\r\n            wavesurferRefs.current = [];\r\n            if (audioFiles && audioFiles.length > 0) {\r\n                audioFiles.forEach((file, index) => {\r\n                    const waveSurfer = WaveSurfer.create({\r\n                        container: `#waveform-${index}`,\r\n                        waveColor: 'blue',\r\n                        progressColor: '#00FFFF',\r\n                        height: 75,\r\n                        backend: 'MediaElement',\r\n                        plugins: [regions],\r\n                    });\r\n        \r\n                    waveSurfer.load(file.url);\r\n        \r\n                    waveSurfer.on('ready', () => setIsReady(true));\r\n        \r\n                    waveSurfer.on('audioprocess', () => {\r\n                        setProgress(waveSurfer.getCurrentTime() / waveSurfer.getDuration() * 100);\r\n                    });\r\n        \r\n                    waveSurfer.on('seek', (progress) => {\r\n                        setProgress(progress * 100);\r\n                    });\r\n                    \r\n                    regions.on('region-created', (region) => {\r\n                        regions.getRegions().forEach((r) => {\r\n                            if (r.id !== region.id) {\r\n                                r.remove();\r\n                            }\r\n                        });\r\n                    });\r\n\r\n                    // Remove region if it's clicked again\r\n                    regions.on('region-clicked', (region, e) => {\r\n                        e.stopPropagation(); // prevent triggering a click on the waveform\r\n                        region.remove();\r\n                    });\r\n\r\n                    // Allow region creation by dragging\r\n                    regions.enableDragSelection({\r\n                        color: 'rgba(245, 137, 5, 0.4)',\r\n                    });\r\n\r\n                        wavesurferRefs.current[index] = waveSurfer;\r\n                    });\r\n            \r\n                    return () => {\r\n                        wavesurferRefs.current.forEach(waveSurfer => waveSurfer.destroy());\r\n                    };\r\n                }\r\n        }, [audioFiles]);\r\n    } catch (error) {\r\n        console.error(\"An error ocurred\", error);\r\n        setErrorMessage(`${error.message}`);\r\n    }\r\n\r\n    const handlePlaybackRateChange = (rate) => {\r\n        setSpeed(rate);\r\n        wavesurferRefs.current.forEach(waveSurfer => waveSurfer.setPlaybackRate(rate));\r\n    };\r\n\r\n    return (\r\n        <div style={pagebackground}>\r\n            <div style={musicbackground}>\r\n                {audioFiles.map((file, index) => (\r\n                    <div key={index} style={waveformStyle}>\r\n                        <div style={trackNameStyle}>{file.name}</div>\r\n                        <div id={`waveform-${index}`} style={{ width: '100%', height: '100%' }}></div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <Sidebar />\r\n\r\n            {audioFiles && audioFiles.length > 0 ? (\r\n                <PlayButton\r\n                    playAllTracks={() => wavesurferRefs.current.forEach(waveSurfer => waveSurfer.playPause())}\r\n                    forwardAllTracks={() => {\r\n                        wavesurferRefs.current.forEach(waveSurfer => {\r\n                            const currentTime = waveSurfer.getCurrentTime();\r\n                            const duration = waveSurfer.getDuration();\r\n                            waveSurfer.seekTo((currentTime + 5) / duration);\r\n                        });\r\n                    }}\r\n                    backwardAllTracks={() => {\r\n                        wavesurferRefs.current.forEach(waveSurfer => {\r\n                            const currentTime = waveSurfer.getCurrentTime();\r\n                            waveSurfer.seekTo(Math.max((currentTime - 5) / waveSurfer.getDuration(), 0));\r\n                        });\r\n                    }}\r\n                    seekAllTracks={(seekTo) => wavesurferRefs.current.forEach(waveSurfer => waveSurfer.seekTo(seekTo))}\r\n                    changeSpeedAllTracks={handlePlaybackRateChange}\r\n                    isReady={isReady}\r\n                    speed={speed}\r\n                />\r\n            ) : (\r\n                <p>No audio tracks available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Landingpage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}