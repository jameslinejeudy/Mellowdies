{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elect\\\\Documents\\\\CIS\\\\4914\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Menu.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst menubackground = {\n  width: '25%',\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'flex-start',\n  alignItems: 'left',\n  border: '2px solid #ffffff',\n  backgroundColor: '#ffffff',\n  fontFamily: \"'Concert One', cursive\",\n  fontSize: '1.2rem',\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\n  border: 'none',\n  position: 'fixed',\n  top: '0',\n  left: '0',\n  zIndex: '1000',\n  paddingTop: '20px',\n  overflowY: 'auto',\n  // Enable vertical scrolling\n  maxHeight: '100%' // Set a maximum height for the menu\n};\nconst backButtonStyle = {\n  marginTop: '10px',\n  background: '#007bff',\n  color: '#fff',\n  border: 'none',\n  padding: '10px 20px',\n  borderRadius: '5px',\n  cursor: 'pointer',\n  fontSize: '16px',\n  textAlign: 'center',\n  width: 'auto',\n  display: 'inline-block',\n  transition: 'background 0.3s ease'\n};\nconst reverseButtonStyle = {\n  ...backButtonStyle,\n  background: '#ff5722' // Different color for reverse button\n};\nconst sliderStyle = {\n  width: '80%',\n  margin: '10px auto'\n};\nconst adjustGainButtonStyle = {\n  ...backButtonStyle,\n  background: '#4caf50' // Different color for adjust gain button\n};\nconst modalStyle = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 'auto',\n  height: 'auto',\n  backgroundColor: '#fff',\n  padding: '20px',\n  borderRadius: '10px',\n  boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.3)',\n  zIndex: '1001'\n};\nconst overlayStyle = {\n  position: 'fixed',\n  top: '0',\n  left: '0',\n  right: '0',\n  bottom: '0',\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  zIndex: '1000'\n};\nconst contentStyle = {\n  flexGrow: 1,\n  paddingTop: '20px'\n};\nconst verticalSliderStyle = {\n  type: 'range',\n  orient: 'vertical',\n  appearance: 'slider-vertical',\n  width: '8%'\n};\nvar utils = require(\"audio-buffer-utils\");\nvar blobber = require('audiobuffer-to-blob');\nfunction combFilter(samples, sampleLength, delay, decay, sampleRate) {\n  let delaySamples = Math.ceil(delay * (sampleRate / 1000));\n  let combFilterSamples = samples;\n  for (let i = 0; i < sampleLength - delaySamples; i++) {\n    combFilterSamples[i + delaySamples] += combFilterSamples[i] * decay;\n  }\n  return combFilterSamples;\n}\nfunction allPassFilter(samples, sampleLength, sampleRate) {\n  let delaySamples = Math.ceil(88.69 * (sampleRate / 1000));\n  let allPassFilterSamples = new Float32Array(sampleLength);\n  let decayFactor = 0.131;\n  for (let i = 0; i < sampleLength; i++) {\n    allPassFilterSamples[i] = samples[i];\n    if (i - delaySamples >= 0) {\n      allPassFilterSamples[i] += allPassFilterSamples[i - delaySamples] * -decayFactor;\n    }\n    if (i - delaySamples >= 1) {\n      allPassFilterSamples[i] += allPassFilterSamples[i + 20 - delaySamples] * decayFactor;\n    }\n  }\n  let val = allPassFilterSamples[0];\n  let max = 0.0;\n  for (let i = 0; i < sampleLength; i++) {\n    if (Math.abs(allPassFilterSamples[i]) > max) {\n      max = Math.abs(allPassFilterSamples[i]);\n    }\n  }\n  for (let i = 0; i < allPassFilterSamples.length; i++) {\n    let currVal = allPassFilterSamples[i];\n    val = (val + (currVal - val)) / max;\n    allPassFilterSamples[i] = val;\n  }\n  return allPassFilterSamples;\n}\nfunction Menu({\n  handleBack,\n  waveData\n}) {\n  _s();\n  const [isGainModalOpen, setGainModalOpen] = useState(false);\n  const [isDelayModalOpen, setDelayModalOpen] = useState(false);\n  const [isDistortionModalOpen, setDistortionModalOpen] = useState(false);\n  const [isReverbModalOpen, setReverbModalOpen] = useState(false);\n  const [isEquaModalOpen, setEquaModalOpen] = useState(false);\n  const [isEquaInit, setEquaInit] = useState(false);\n  const [gainValue, setGainValue] = useState(100);\n  const [delayTime, setDelayTime] = useState(0.00);\n  const [feedback, setFeedback] = useState(0.00);\n  const [wetness, setWetness] = useState(0.00);\n  const [dryness, setDryness] = useState(0.00);\n  const [gainDistortValue, setGainDistortValue] = useState(100);\n  const [reverbTime, setReverbTime] = useState(0.00);\n  const [decay, setDecay] = useState(0.00);\n  const [reverbWet, setReverbWet] = useState(0.00);\n  const eqBands = [32, 64, 125, 250, 500, 1000, 2000, 4000, 8000, 16000];\n  let aContext = waveData[0].webAudioPlayer.audioContext;\n  const filters = eqBands.map(band => {\n    const filter = aContext.createBiquadFilter();\n    filter.type = band <= 32 ? 'lowshelf' : band >= 16000 ? 'highshelf' : 'peaking';\n    filter.gain.value = Math.random() * 40 - 20;\n    filter.Q.value = 1; // resonance\n    filter.frequency.value = band; // the cut-off frequency\n    return filter;\n  });\n  if (isEquaInit === false) {\n    for (let i = 1; i < 10; i++) {\n      filters[i - 1].connect(filters[i]);\n    }\n    filters[9].connect(aContext.destination);\n    console.log(filters);\n  }\n  const container = document.createElement('p');\n  filters.forEach(filter => {\n    const slider = document.createElement('input');\n    slider.type = 'range';\n    slider.orient = 'vertical';\n    slider.style.appearance = 'slider-vertical';\n    slider.style.width = '8%';\n    slider.min = -40;\n    slider.max = 40;\n    slider.value = filter.gain.value;\n    slider.step = 0.1;\n    slider.oninput = e => filter.gain.value = e.target.value;\n    container.appendChild(slider);\n  });\n  document.body.appendChild(container);\n  const reverse = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    if (buffer) {\n      utils.reverse(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n      console.log(\"Reversed region.\");\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    } else {\n      console.error('No audio buffer loaded');\n    }\n  };\n  const invert = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    if (buffer) {\n      utils.invert(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n      console.log(\"Inverted region.\");\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    } else {\n      console.error('No audio buffer loaded');\n    }\n  };\n  const normalize = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    if (buffer) {\n      utils.normalize(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\n      console.log(\"Normalized region.\");\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    } else {\n      console.error('No audio buffer loaded');\n    }\n  };\n  const openGainModal = () => setGainModalOpen(true);\n  const closeGainModal = () => setGainModalOpen(false);\n  const adjustGain = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let gain = gainValue / 100;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] *= gain;\n        }\n      }\n      console.log('Gain adjusted:', gain);\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const fadeIn = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let stepInc = 1 / (end - start);\n    let currGain = 0;\n    let steps = 0;\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] *= currGain + steps * stepInc;\n          steps += 1;\n        }\n        steps = 0;\n      }\n      console.log('Region Faded In');\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const fadeOut = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let stepInc = 1 / (end - start);\n    let currGain = 1;\n    let steps = 0;\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] *= currGain - steps * stepInc;\n          steps += 1;\n        }\n        steps = 0;\n      }\n      console.log('Region Faded In');\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const openDistortionModal = () => setDistortionModalOpen(true);\n  const closeDistortionModal = () => setDistortionModalOpen(false);\n  const distort = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let gain = gainDistortValue / 100;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    if (buffer) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\n        let channelData = buffer.getChannelData(channel);\n        for (let sample = start; sample < end; sample += 1) {\n          channelData[sample] = Math.atan(gain * channelData[sample]);\n        }\n      }\n      console.log('Distorted Region', gain);\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const openDelayModal = () => setDelayModalOpen(true);\n  const closeDelayModal = () => setDelayModalOpen(false);\n  const delay = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let delayLen = delayTime;\n    let delaySamples = Math.ceil(delayLen * sampleRate);\n    let wet = wetness;\n    let dry = dryness;\n    let feeder = feedback;\n    let index = 0;\n    if (buffer) {\n      let numChannels = buffer.numberOfChannels;\n      if (numChannels === 1) {\n        let channelData = buffer.getChannelData(0);\n        let delayBuffer = new Float32Array(channelData.subarray(start, end + 1));\n        for (let sample = start; sample < end; sample += 1) {\n          let delayed = delayBuffer[index];\n          channelData[sample] = channelData[sample] * dry + delayed * wet;\n          delayBuffer[index] = feeder * (delayed + channelData[sample]);\n          index += 1;\n        }\n      } else if (numChannels === 2) {\n        let channelLeft = buffer.getChannelData(0);\n        let channelRight = buffer.getChannelData(1);\n        let delayLeft = new Float32Array(channelLeft.subarray(start, end + 1));\n        let delayRight = new Float32Array(channelRight.subarray(start, end + 1));\n        delayLeft = channelLeft;\n        delayRight = channelRight;\n        for (let sample = start; sample < end; sample += 1) {\n          let delayed_left = delayLeft[index];\n          let delayed_right = delayRight[index];\n          channelLeft[sample] = channelLeft[sample] * dry + delayed_left * wet;\n          channelRight[sample] = channelRight[sample] * dry + delayed_right * wet;\n          delayLeft[index] = feeder * (delayed_left + channelLeft[sample]);\n          delayRight[index] = feeder * (delayed_right + channelRight[sample]);\n          index += 1;\n        }\n      }\n      console.log('Region Delayed');\n      let blob = blobber(buffer);\n      waveData[0].waveSurfer.empty();\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n    }\n  };\n  const openReverbModal = () => setReverbModalOpen(true);\n  const closeReverbModal = () => setReverbModalOpen(false);\n  const reverb = () => {\n    let buffer = waveData[0].waveSurfer.getDecodedData();\n    let region = waveData[0].regions.getRegions()[0];\n    let sampleRate = buffer.sampleRate;\n    let start = Math.floor(region.start * sampleRate);\n    let end = Math.ceil(region.end * sampleRate);\n    let bufferSize = end - start;\n    let channelLeft = buffer.getChannelData(0);\n    let channelRight = buffer.getChannelData(1);\n    let samplesLeft = new Float32Array(channelLeft.subarray(start, end + 1));\n    let samplesRight = new Float32Array(channelRight.subarray(start, end + 1));\n    let delayinMilliSeconds = reverbTime * 1000;\n    let decayFactor = decay;\n    let combFilterSamplesLeft1 = combFilter(samplesLeft, bufferSize, delayinMilliSeconds, decayFactor, sampleRate);\n    let combFilterSamplesLeft2 = combFilter(samplesLeft, bufferSize, delayinMilliSeconds - 11.73, decayFactor - 0.1313, sampleRate);\n    let combFilterSamplesRight1 = combFilter(samplesRight, bufferSize, delayinMilliSeconds, decayFactor, sampleRate);\n    let combFilterSamplesRight2 = combFilter(samplesRight, bufferSize, delayinMilliSeconds - 11.73, decayFactor - 0.1313, sampleRate);\n    let outputCombLeft = new Float32Array(bufferSize);\n    let outputCombRight = new Float32Array(bufferSize);\n    for (let i = 0; i < bufferSize; i++) {\n      outputCombLeft[i] = combFilterSamplesLeft1[i] + combFilterSamplesLeft2[i];\n    }\n    for (let i = 0; i < bufferSize; i++) {\n      outputCombRight[i] = combFilterSamplesRight1[i] + combFilterSamplesRight2[i];\n    }\n    let audioMixLeft = new Float32Array(bufferSize);\n    let audioMixRight = new Float32Array(bufferSize);\n    for (let i = 0; i < bufferSize; i++) {\n      audioMixLeft[i] = (1 - reverbWet) * samplesLeft[i] + reverbWet * outputCombLeft[i];\n    }\n    for (let i = 0; i < bufferSize; i++) {\n      audioMixRight[i] = (1 - reverbWet) * samplesRight[i] + reverbWet * outputCombRight[i];\n    }\n    let allPassFilterSamplesLeft1 = allPassFilter(audioMixLeft, bufferSize, sampleRate);\n    let allPassFilterSamplesLeft2 = allPassFilter(allPassFilterSamplesLeft1, bufferSize, sampleRate);\n    let allPassFilterSamplesRight1 = allPassFilter(audioMixRight, bufferSize, sampleRate);\n    let allPassFilterSamplesRight2 = allPassFilter(allPassFilterSamplesRight1, bufferSize, sampleRate);\n    for (let i = 0; i < bufferSize; i++) {\n      channelLeft[start + i] = allPassFilterSamplesLeft2[i];\n      channelRight[start + i] = allPassFilterSamplesRight2[i];\n    }\n    console.log('Reverb Applied');\n    let blob = blobber(buffer);\n    waveData[0].waveSurfer.empty();\n    waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\n  };\n  const closeEquaModal = () => setEquaModalOpen(false);\n  const openEquaModal = () => {\n    setEquaInit(true);\n    setEquaModalOpen(true);\n  };\n  const FilterSliders = ({\n    filters\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: filters.map((filter, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        orient: \"vertical\",\n        style: {\n          appearance: 'slider-vertical',\n          width: '8%'\n        },\n        min: -40,\n        max: 40,\n        step: 0.1,\n        defaultValue: filter.gain.value,\n        onChange: e => filter.gain.value = parseFloat(e.target.value)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: menubackground,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: contentStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: backButtonStyle,\n        onClick: handleBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: reverse,\n        children: \"Reverse Selected Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: invert,\n        children: \"Invert Selected Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: normalize,\n        children: \"Normalize Selected Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: fadeIn,\n        children: \"Fade In Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: reverseButtonStyle,\n        onClick: fadeOut,\n        children: \"Fade Out Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: openGainModal,\n        children: \"Adjust Gain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this), isGainModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: overlayStyle,\n          onClick: closeGainModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Gain Percentage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"gains\",\n            type: \"range\",\n            min: \"0\",\n            max: \"200\",\n            step: \"0.01\",\n            value: gainValue,\n            onInput: e => setGainValue(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"gainVal\",\n            children: [gainValue, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeGainModal,\n            style: backButtonStyle,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: adjustGain,\n            style: backButtonStyle,\n            children: \"Apply Gain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: openDelayModal,\n        children: \"Adjust Delay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this), isDelayModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: overlayStyle,\n          onClick: closeDelayModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Delay Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"delayT\",\n            type: \"range\",\n            min: \"0\",\n            max: \"6\",\n            step: \"0.01\",\n            value: delayTime,\n            onInput: e => setDelayTime(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"delayVal\",\n            children: delayTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"feedback\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: feedback,\n            onInput: e => setFeedback(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"feedVal\",\n            children: feedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Wet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"wets\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: wetness,\n            onInput: e => setWetness(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"wetVal\",\n            children: wetness\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Dry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"dryer\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: dryness,\n            onInput: e => setDryness(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"dryVal\",\n            children: dryness\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeDelayModal,\n            style: backButtonStyle,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: delay,\n            style: backButtonStyle,\n            children: \"Apply Delay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: openDistortionModal,\n        children: \"Apply Distortion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }, this), isDistortionModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: overlayStyle,\n          onClick: closeDistortionModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Gain Percentage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"gains\",\n            type: \"range\",\n            min: \"0\",\n            max: \"200\",\n            step: \"0.01\",\n            value: gainDistortValue,\n            onInput: e => setGainDistortValue(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"gainDistortVal\",\n            children: [gainDistortValue, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeDistortionModal,\n            style: backButtonStyle,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: distort,\n            style: backButtonStyle,\n            children: \"Apply Distortion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: openReverbModal,\n        children: \"Apply Reverb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }, this), isReverbModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: overlayStyle,\n          onClick: closeReverbModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"reverbT\",\n            type: \"range\",\n            min: \"0\",\n            max: \"3\",\n            step: \"0.01\",\n            value: reverbTime,\n            onInput: e => setReverbTime(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"reverbTime\",\n            children: reverbTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Decay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"decay\",\n            type: \"range\",\n            min: \"0\",\n            max: \"3\",\n            step: \"0.01\",\n            value: decay,\n            onInput: e => setDecay(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"decayVal\",\n            children: decay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Wet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"wetR\",\n            type: \"range\",\n            min: \"0\",\n            max: \"1\",\n            step: \"0.01\",\n            value: reverbWet,\n            onInput: e => setReverbWet(e.target.value),\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"wetRVal\",\n            children: reverbWet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeReverbModal,\n            style: backButtonStyle,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: reverb,\n            style: backButtonStyle,\n            children: \"Apply Reverb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: adjustGainButtonStyle,\n        onClick: openEquaModal,\n        children: \"Parametric Equalizer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 9\n      }, this), isEquaModalOpen && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: overlayStyle,\n          onClick: closeEquaModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"32\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"32hz\",\n            type: \"range\",\n            orient: \"vertical\",\n            min: \"-40\",\n            max: \"40\",\n            step: \"0.1\",\n            value: filters[0].gain.value,\n            onInput: e => filters[0].gain.value = e.target.value,\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"0\",\n            children: filters[0].gain.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"64\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"64hz\",\n            type: \"range\",\n            orient: \"vertical\",\n            min: \"-40\",\n            max: \"40\",\n            step: \"0.1\",\n            value: filters[1].gain.value,\n            onInput: e => filters[1].gain.value = e.target.value,\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"1\",\n            children: filters[1].gain.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"125\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"125hz\",\n            type: \"range\",\n            orient: \"vertical\",\n            min: \"-40\",\n            max: \"40\",\n            step: \"0.1\",\n            value: filters[2].gain.value,\n            onInput: e => filters[2].gain.value = e.target.value,\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"2\",\n            children: filters[2].gain.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"250\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"250hz\",\n            type: \"range\",\n            orient: \"vertical\",\n            min: \"-40\",\n            max: \"40\",\n            step: \"0.1\",\n            value: filters[3].gain.value,\n            onInput: e => filters[3].gain.value = e.target.value,\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"3\",\n            children: filters[3].gain.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"500hz\",\n            type: \"range\",\n            orient: \"vertical\",\n            min: \"-40\",\n            max: \"40\",\n            step: \"0.1\",\n            value: filters[4].gain.value,\n            onInput: e => filters[4].gain.value = e.target.value,\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"4\",\n            children: filters[4].gain.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"1000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"1000hz\",\n            type: \"range\",\n            orient: \"vertical\",\n            min: \"-40\",\n            max: \"40\",\n            step: \"0.1\",\n            value: filters[5].gain.value,\n            onInput: e => filters[5].gain.value = e.target.value,\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"5\",\n            children: filters[5].gain.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"2000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"2000hz\",\n            type: \"range\",\n            orient: \"vertical\",\n            min: \"-40\",\n            max: \"40\",\n            step: \"0.1\",\n            value: filters[6].gain.value,\n            onInput: e => filters[6].gain.value = e.target.value,\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"6\",\n            children: filters[6].gain.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"4000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 769,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"4000hz\",\n            type: \"range\",\n            orient: \"vertical\",\n            min: \"-40\",\n            max: \"40\",\n            step: \"0.1\",\n            value: filters[7].gain.value,\n            onInput: e => filters[7].gain.value = e.target.value,\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"7\",\n            children: filters[7].gain.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"8000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 783,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"8000hz\",\n            type: \"range\",\n            orient: \"vertical\",\n            min: \"-40\",\n            max: \"40\",\n            step: \"0.1\",\n            value: filters[8].gain.value,\n            onInput: e => filters[8].gain.value = e.target.value,\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"8\",\n            children: filters[8].gain.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"16000\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"16000hz\",\n            type: \"range\",\n            orient: \"vertical\",\n            min: \"-40\",\n            max: \"40\",\n            step: \"0.1\",\n            value: filters[9].gain.value,\n            onInput: e => filters[9].gain.value = e.target.value,\n            style: sliderStyle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"output\", {\n            id: \"9\",\n            children: filters[9].gain.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeEquaModal,\n            style: backButtonStyle,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 468,\n    columnNumber: 5\n  }, this);\n}\n_s(Menu, \"GsZ8TChULQwOFQ8gfgNR0JLBYhE=\");\n_c = Menu;\nexport default Menu;\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","menubackground","width","height","display","flexDirection","justifyContent","alignItems","border","backgroundColor","fontFamily","fontSize","boxShadow","position","top","left","zIndex","paddingTop","overflowY","maxHeight","backButtonStyle","marginTop","background","color","padding","borderRadius","cursor","textAlign","transition","reverseButtonStyle","sliderStyle","margin","adjustGainButtonStyle","modalStyle","transform","overlayStyle","right","bottom","contentStyle","flexGrow","verticalSliderStyle","type","orient","appearance","utils","require","blobber","combFilter","samples","sampleLength","delay","decay","sampleRate","delaySamples","Math","ceil","combFilterSamples","i","allPassFilter","allPassFilterSamples","Float32Array","decayFactor","val","max","abs","length","currVal","Menu","handleBack","waveData","_s","isGainModalOpen","setGainModalOpen","isDelayModalOpen","setDelayModalOpen","isDistortionModalOpen","setDistortionModalOpen","isReverbModalOpen","setReverbModalOpen","isEquaModalOpen","setEquaModalOpen","isEquaInit","setEquaInit","gainValue","setGainValue","delayTime","setDelayTime","feedback","setFeedback","wetness","setWetness","dryness","setDryness","gainDistortValue","setGainDistortValue","reverbTime","setReverbTime","setDecay","reverbWet","setReverbWet","eqBands","aContext","webAudioPlayer","audioContext","filters","map","band","filter","createBiquadFilter","gain","value","random","Q","frequency","connect","destination","console","log","container","document","createElement","forEach","slider","style","min","step","oninput","e","target","appendChild","body","reverse","buffer","waveSurfer","getDecodedData","region","regions","getRegions","start","end","blob","empty","loadBlob","catch","error","invert","normalize","openGainModal","closeGainModal","adjustGain","floor","channel","numberOfChannels","channelData","getChannelData","sample","fadeIn","stepInc","currGain","steps","fadeOut","openDistortionModal","closeDistortionModal","distort","atan","openDelayModal","closeDelayModal","delayLen","wet","dry","feeder","index","numChannels","delayBuffer","subarray","delayed","channelLeft","channelRight","delayLeft","delayRight","delayed_left","delayed_right","openReverbModal","closeReverbModal","reverb","bufferSize","samplesLeft","samplesRight","delayinMilliSeconds","combFilterSamplesLeft1","combFilterSamplesLeft2","combFilterSamplesRight1","combFilterSamplesRight2","outputCombLeft","outputCombRight","audioMixLeft","audioMixRight","allPassFilterSamplesLeft1","allPassFilterSamplesLeft2","allPassFilterSamplesRight1","allPassFilterSamplesRight2","closeEquaModal","openEquaModal","FilterSliders","children","defaultValue","onChange","parseFloat","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","onInput","_c","$RefreshReg$"],"sources":["C:/Users/elect/Documents/CIS/4914/Mellowdies/mellowdies/src/Landingpage/Menu.js"],"sourcesContent":["import React, {useState}  from 'react';\r\n\r\nconst menubackground = {\r\n  width: '25%',\r\n  height: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'flex-start',\r\n  alignItems: 'left',\r\n  border: '2px solid #ffffff',\r\n  backgroundColor: '#ffffff',\r\n  fontFamily: \"'Concert One', cursive\",\r\n  fontSize: '1.2rem',\r\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\r\n  border: 'none',\r\n  position: 'fixed',\r\n  top: '0',\r\n  left: '0',\r\n  zIndex: '1000',\r\n  paddingTop: '20px',\r\n  overflowY: 'auto', // Enable vertical scrolling\r\n  maxHeight: '100%', // Set a maximum height for the menu\r\n};\r\n\r\nconst backButtonStyle = {\r\n  marginTop: '10px',\r\n  background: '#007bff',\r\n  color: '#fff',\r\n  border: 'none',\r\n  padding: '10px 20px',\r\n  borderRadius: '5px',\r\n  cursor: 'pointer',\r\n  fontSize: '16px',\r\n  textAlign: 'center',\r\n  width: 'auto',\r\n  display: 'inline-block',\r\n  transition: 'background 0.3s ease',\r\n};\r\n\r\nconst reverseButtonStyle = {\r\n  ...backButtonStyle,\r\n  background: '#ff5722', // Different color for reverse button\r\n};\r\n\r\nconst sliderStyle = {\r\n  width: '80%',\r\n  margin: '10px auto',\r\n};\r\n\r\nconst adjustGainButtonStyle = {\r\n  ...backButtonStyle,\r\n  background: '#4caf50', // Different color for adjust gain button\r\n};\r\n\r\n\r\nconst modalStyle = {\r\n  position: 'fixed',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 'auto',\r\n  height: 'auto',\r\n  backgroundColor: '#fff',\r\n  padding: '20px',\r\n  borderRadius: '10px',\r\n  boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.3)',\r\n  zIndex: '1001',\r\n};\r\n\r\nconst overlayStyle = {\r\n  position: 'fixed',\r\n  top: '0',\r\n  left: '0',\r\n  right: '0',\r\n  bottom: '0',\r\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  zIndex: '1000',\r\n};\r\n\r\nconst contentStyle = {\r\n  flexGrow: 1,\r\n  paddingTop: '20px',\r\n};\r\n\r\nconst verticalSliderStyle = {\r\n  type : 'range',\r\n  orient : 'vertical',\r\n  appearance : 'slider-vertical',\r\n  width : '8%',\r\n}\r\n\r\nvar utils = require(\"audio-buffer-utils\");\r\nvar blobber = require('audiobuffer-to-blob');\r\n\r\nfunction combFilter (samples, sampleLength, delay, decay, sampleRate) {\r\n  let delaySamples = Math.ceil(delay * (sampleRate / 1000));\r\n  let combFilterSamples = samples;\r\n  for (let i = 0; i < sampleLength - delaySamples; i++) {\r\n    combFilterSamples[i+delaySamples] += combFilterSamples[i] * decay;\r\n  }\r\n  return combFilterSamples;\r\n}\r\n\r\nfunction allPassFilter (samples, sampleLength, sampleRate) {\r\n  let delaySamples = Math.ceil(88.69 * (sampleRate/1000));\r\n  let allPassFilterSamples = new Float32Array(sampleLength);\r\n  let decayFactor = 0.131;\r\n  for (let i = 0; i < sampleLength; i++) {\r\n    allPassFilterSamples[i] = samples[i];\r\n    if (i - delaySamples >= 0) {\r\n      allPassFilterSamples[i] += allPassFilterSamples[i-delaySamples] * (-decayFactor);\r\n    }\r\n    if (i - delaySamples >= 1) {\r\n      allPassFilterSamples[i] += allPassFilterSamples[i+20-delaySamples] * decayFactor;\r\n    }\r\n  }\r\n  let val = allPassFilterSamples[0];\r\n  let max = 0.0;\r\n  for (let i = 0; i < sampleLength; i++) {\r\n    if(Math.abs(allPassFilterSamples[i]) > max) {\r\n      max = Math.abs(allPassFilterSamples[i]);\r\n    }\r\n  }\r\n  for (let i = 0; i < allPassFilterSamples.length; i++) {\r\n    let currVal = allPassFilterSamples[i];\r\n    val = (val + (currVal - val)) / max;\r\n    allPassFilterSamples[i] = val;\r\n  }\r\n  return allPassFilterSamples;\r\n}\r\n\r\nfunction Menu({ handleBack, waveData }) {\r\n  const [isGainModalOpen, setGainModalOpen] = useState(false);\r\n  const [isDelayModalOpen, setDelayModalOpen] = useState(false);\r\n  const [isDistortionModalOpen, setDistortionModalOpen] = useState(false);\r\n  const [isReverbModalOpen, setReverbModalOpen] = useState(false);\r\n  const [isEquaModalOpen, setEquaModalOpen] = useState(false);\r\n  const [isEquaInit, setEquaInit] = useState(false);\r\n  const [gainValue, setGainValue] = useState(100);\r\n  const [delayTime, setDelayTime] = useState(0.00);\r\n  const [feedback, setFeedback] = useState(0.00);\r\n  const [wetness, setWetness] = useState(0.00);\r\n  const [dryness, setDryness] = useState(0.00);\r\n  const [gainDistortValue, setGainDistortValue] = useState(100);\r\n  const [reverbTime, setReverbTime] = useState(0.00);\r\n  const [decay, setDecay] = useState(0.00);\r\n  const [reverbWet, setReverbWet] = useState(0.00);\r\n  const eqBands = [32, 64, 125, 250, 500, 1000, 2000, 4000, 8000, 16000]\r\n\r\n  let aContext = waveData[0].webAudioPlayer.audioContext;\r\n\r\n  const filters = eqBands.map((band) => {\r\n    const filter = aContext.createBiquadFilter()\r\n    filter.type = band <= 32 ? 'lowshelf' : band >= 16000 ? 'highshelf' : 'peaking'\r\n    filter.gain.value = Math.random() * 40 - 20\r\n    filter.Q.value = 1 // resonance\r\n    filter.frequency.value = band // the cut-off frequency\r\n    return filter\r\n  })\r\n\r\n  if (isEquaInit === false) {\r\n      for (let i = 1; i < 10; i++) {\r\n        filters[i-1].connect(filters[i]);\r\n      }\r\n      filters[9].connect(aContext.destination);\r\n      console.log(filters)\r\n    }\r\n\r\n    const container = document.createElement('p')\r\n    filters.forEach((filter) => {\r\n      const slider = document.createElement('input')\r\n      slider.type = 'range'\r\n      slider.orient = 'vertical'\r\n      slider.style.appearance = 'slider-vertical'\r\n      slider.style.width = '8%'\r\n      slider.min = -40\r\n      slider.max = 40\r\n      slider.value = filter.gain.value\r\n      slider.step = 0.1\r\n      slider.oninput = (e) => (filter.gain.value = e.target.value)\r\n      container.appendChild(slider)\r\n    })\r\n    document.body.appendChild(container)\r\n  \r\n  const reverse = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    if (buffer) {\r\n      utils.reverse(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n      console.log(\"Reversed region.\");\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    } else {\r\n      console.error('No audio buffer loaded');\r\n    }\r\n  };\r\n\r\n  const invert = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    if (buffer) {\r\n      utils.invert(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n      console.log(\"Inverted region.\");\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    } else {\r\n      console.error('No audio buffer loaded');\r\n    }\r\n  };\r\n\r\n  const normalize = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    if (buffer) {\r\n      utils.normalize(buffer, buffer, region.start * sampleRate, region.end * sampleRate);\r\n      console.log(\"Normalized region.\");\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    } else {\r\n      console.error('No audio buffer loaded');\r\n    }\r\n  };\r\n\r\n  const openGainModal = () => setGainModalOpen(true);\r\n  const closeGainModal = () => setGainModalOpen(false);\r\n\r\n  const adjustGain = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let gain = gainValue / 100;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] *= gain;\r\n        }\r\n      }\r\n      console.log('Gain adjusted:', gain);\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const fadeIn = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let stepInc = 1 / (end-start);\r\n    let currGain = 0;\r\n    let steps = 0;\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] *= (currGain + (steps * stepInc));\r\n            steps += 1;\r\n        }\r\n        steps = 0;\r\n      }\r\n      console.log('Region Faded In');\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const fadeOut = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let stepInc = 1 / (end-start);\r\n    let currGain = 1;\r\n    let steps = 0;\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] *= (currGain - (steps * stepInc));\r\n            steps += 1;\r\n        }\r\n        steps = 0;\r\n      }\r\n      console.log('Region Faded In');\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const openDistortionModal = () => setDistortionModalOpen(true);\r\n  const closeDistortionModal = () => setDistortionModalOpen(false);\r\n\r\n  const distort = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let gain = gainDistortValue / 100;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n\r\n    if (buffer) {\r\n      for (let channel = 0; channel < buffer.numberOfChannels; channel += 1) {\r\n        let channelData = buffer.getChannelData(channel);\r\n    \r\n        for (let sample = start; sample < end; sample += 1) {\r\n            channelData[sample] = Math.atan(gain*channelData[sample]);\r\n        }\r\n      }\r\n      console.log('Distorted Region', gain);\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const openDelayModal = () => setDelayModalOpen(true);\r\n  const closeDelayModal = () => setDelayModalOpen(false);\r\n\r\n  const delay = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let delayLen = delayTime;\r\n    let delaySamples = Math.ceil(delayLen * sampleRate);\r\n    let wet = wetness;\r\n    let dry = dryness;\r\n    let feeder = feedback;\r\n    let index = 0;\r\n\r\n    if (buffer) {\r\n      let numChannels = buffer.numberOfChannels;\r\n      if (numChannels === 1) {\r\n        let channelData = buffer.getChannelData(0);\r\n        let delayBuffer = new Float32Array(channelData.subarray(start, end + 1));\r\n        for (let sample = start; sample < end; sample += 1) {\r\n          let delayed = delayBuffer[index];\r\n          channelData[sample] = (channelData[sample] * dry) + (delayed * wet) ;\r\n          delayBuffer[index] = feeder * (delayed + channelData[sample]);\r\n          index += 1;\r\n        }\r\n      } else if (numChannels === 2) {\r\n        let channelLeft = buffer.getChannelData(0);\r\n        let channelRight = buffer.getChannelData(1);\r\n        let delayLeft = new Float32Array(channelLeft.subarray(start, end + 1));\r\n        let delayRight = new Float32Array(channelRight.subarray(start, end + 1));\r\n        delayLeft = channelLeft;\r\n        delayRight = channelRight;\r\n        for (let sample = start; sample < end; sample += 1) {\r\n          let delayed_left = delayLeft[index];\r\n          let delayed_right = delayRight[index];\r\n          channelLeft[sample] = (channelLeft[sample] * dry) + (delayed_left * wet) ;\r\n          channelRight[sample] = (channelRight[sample] * dry) + (delayed_right * wet) ;\r\n          delayLeft[index] = feeder * (delayed_left + channelLeft[sample]);\r\n          delayRight[index] = feeder * (delayed_right + channelRight[sample]);\r\n          index += 1;\r\n        }\r\n      }\r\n      console.log('Region Delayed');\r\n      let blob = blobber(buffer);\r\n      waveData[0].waveSurfer.empty();\r\n      waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  const openReverbModal = () => setReverbModalOpen(true);\r\n  const closeReverbModal = () => setReverbModalOpen(false);\r\n\r\n  const reverb = () => {\r\n    let buffer = waveData[0].waveSurfer.getDecodedData();\r\n    let region = (waveData[0].regions.getRegions())[0];\r\n    let sampleRate = buffer.sampleRate;\r\n    let start = Math.floor(region.start * sampleRate);\r\n    let end = Math.ceil(region.end * sampleRate);\r\n    let bufferSize = end - start;\r\n    let channelLeft = buffer.getChannelData(0);\r\n    let channelRight = buffer.getChannelData(1);\r\n    let samplesLeft = new Float32Array(channelLeft.subarray(start, end + 1));\r\n    let samplesRight = new Float32Array(channelRight.subarray(start, end + 1));\r\n    let delayinMilliSeconds = reverbTime * 1000;\r\n    let decayFactor = decay;\r\n    let combFilterSamplesLeft1 = combFilter(samplesLeft, bufferSize, delayinMilliSeconds, decayFactor, sampleRate);\r\n    let combFilterSamplesLeft2 = combFilter(samplesLeft, bufferSize, (delayinMilliSeconds - 11.73), (decayFactor - 0.1313), sampleRate);\r\n    let combFilterSamplesRight1 = combFilter(samplesRight, bufferSize, delayinMilliSeconds, decayFactor, sampleRate);\r\n    let combFilterSamplesRight2 = combFilter(samplesRight, bufferSize, (delayinMilliSeconds - 11.73), (decayFactor - 0.1313), sampleRate);\r\n    let outputCombLeft = new Float32Array(bufferSize);\r\n    let outputCombRight = new Float32Array(bufferSize);\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      outputCombLeft[i] = ((combFilterSamplesLeft1[i] + combFilterSamplesLeft2[i])) ;\r\n    }\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      outputCombRight[i] = ((combFilterSamplesRight1[i] + combFilterSamplesRight2[i])) ;\r\n    }\r\n    let audioMixLeft = new Float32Array(bufferSize);\r\n    let audioMixRight = new Float32Array(bufferSize);\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      audioMixLeft[i] = ((1 - reverbWet) * samplesLeft[i]) + (reverbWet * outputCombLeft[i]);\r\n    }\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      audioMixRight[i] = ((1 - reverbWet) * samplesRight[i]) + (reverbWet * outputCombRight[i]);\r\n    }\r\n    let allPassFilterSamplesLeft1 = allPassFilter(audioMixLeft, bufferSize, sampleRate);\r\n    let allPassFilterSamplesLeft2 = allPassFilter(allPassFilterSamplesLeft1, bufferSize, sampleRate);\r\n    let allPassFilterSamplesRight1 = allPassFilter(audioMixRight, bufferSize, sampleRate);\r\n    let allPassFilterSamplesRight2 = allPassFilter(allPassFilterSamplesRight1, bufferSize, sampleRate);\r\n    for (let i = 0; i < bufferSize; i++) {\r\n      channelLeft[start + i] = allPassFilterSamplesLeft2[i];\r\n      channelRight[start + i] = allPassFilterSamplesRight2[i];\r\n    }\r\n    console.log('Reverb Applied');\r\n    let blob = blobber(buffer);\r\n    waveData[0].waveSurfer.empty();\r\n    waveData[0].waveSurfer.loadBlob(blob).catch(error => console.log(error));\r\n  }\r\n\r\n  const closeEquaModal = () => setEquaModalOpen(false);\r\n  const openEquaModal = () => {\r\n    setEquaInit(true);\r\n    setEquaModalOpen(true);\r\n  }\r\n\r\n  const FilterSliders = ({ filters }) => {\r\n    return (\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        {filters.map((filter, index) => (\r\n          <input\r\n            key={index}\r\n            type=\"range\"\r\n            orient=\"vertical\"\r\n            style={{\r\n              appearance: 'slider-vertical',\r\n              width: '8%',\r\n            }}\r\n            min={-40}\r\n            max={40}\r\n            step={0.1}\r\n            defaultValue={filter.gain.value}\r\n            onChange={(e) => (filter.gain.value = parseFloat(e.target.value))}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n\r\n  return (\r\n    <div style={menubackground}>\r\n      <div style={contentStyle}>\r\n        <button style={backButtonStyle} onClick={handleBack}>Back</button>\r\n\r\n        <button style={reverseButtonStyle} onClick={reverse}>\r\n          Reverse Selected Region\r\n        </button>\r\n\r\n        <button style={reverseButtonStyle} onClick={invert}>\r\n          Invert Selected Region\r\n        </button>\r\n\r\n        <button style={reverseButtonStyle} onClick={normalize}>\r\n          Normalize Selected Region\r\n        </button>\r\n\r\n        <button style={reverseButtonStyle} onClick={fadeIn}>\r\n          Fade In Region\r\n        </button>\r\n\r\n        <button style={reverseButtonStyle} onClick={fadeOut}>\r\n          Fade Out Region\r\n        </button>\r\n        \r\n        <button style={adjustGainButtonStyle} onClick={openGainModal}>\r\n          Adjust Gain\r\n        </button>\r\n\r\n        {isGainModalOpen && (\r\n          <>\r\n             <div style={overlayStyle} onClick={closeGainModal} />\r\n              <div style={modalStyle}>\r\n                <h2>Gain Percentage</h2>\r\n                <input\r\n                  id=\"gains\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"200\"\r\n                  step=\"0.01\"\r\n                  value={gainValue}\r\n                  onInput={(e) => setGainValue(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"gainVal\">{gainValue}%</output>\r\n              <button onClick={closeGainModal} style={backButtonStyle}>Close</button>\r\n              <button onClick={adjustGain} style={backButtonStyle}>Apply Gain</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <button style={adjustGainButtonStyle} onClick={openDelayModal}>\r\n          Adjust Delay\r\n        </button>\r\n\r\n        {isDelayModalOpen && (\r\n          <>\r\n             <div style={overlayStyle} onClick={closeDelayModal} />\r\n              <div style={modalStyle}>\r\n                <h2>Delay Time</h2>\r\n                <input\r\n                  id=\"delayT\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"6\"\r\n                  step=\"0.01\"\r\n                  value={delayTime}\r\n                  onInput={(e) => setDelayTime(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"delayVal\">{delayTime}</output>\r\n\r\n                <h2>Feedback</h2>\r\n                <input\r\n                  id=\"feedback\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={feedback}\r\n                  onInput={(e) => setFeedback(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"feedVal\">{feedback}</output>\r\n\r\n                <h2>Wet</h2>\r\n                <input\r\n                  id=\"wets\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={wetness}\r\n                  onInput={(e) => setWetness(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"wetVal\">{wetness}</output>\r\n\r\n                <h2>Dry</h2>\r\n                <input\r\n                  id=\"dryer\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={dryness}\r\n                  onInput={(e) => setDryness(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"dryVal\">{dryness}</output>\r\n              <button onClick={closeDelayModal} style={backButtonStyle}>Close</button>\r\n              <button onClick={delay} style={backButtonStyle}>Apply Delay</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <button style={adjustGainButtonStyle} onClick={openDistortionModal}>\r\n          Apply Distortion\r\n        </button>\r\n\r\n        {isDistortionModalOpen && (\r\n          <>\r\n             <div style={overlayStyle} onClick={closeDistortionModal} />\r\n              <div style={modalStyle}>\r\n                <h2>Gain Percentage</h2>\r\n                <input\r\n                  id=\"gains\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"200\"\r\n                  step=\"0.01\"\r\n                  value={gainDistortValue}\r\n                  onInput={(e) => setGainDistortValue(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"gainDistortVal\">{gainDistortValue}%</output>\r\n              <button onClick={closeDistortionModal} style={backButtonStyle}>Close</button>\r\n              <button onClick={distort} style={backButtonStyle}>Apply Distortion</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <button style={adjustGainButtonStyle} onClick={openReverbModal}>\r\n          Apply Reverb\r\n        </button>\r\n\r\n        {isReverbModalOpen && (\r\n          <>\r\n             <div style={overlayStyle} onClick={closeReverbModal} />\r\n              <div style={modalStyle}>\r\n                <h2>Time</h2>\r\n                <input\r\n                  id=\"reverbT\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"3\"\r\n                  step=\"0.01\"\r\n                  value={reverbTime}\r\n                  onInput={(e) => setReverbTime(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"reverbTime\">{reverbTime}</output>\r\n\r\n                <h2>Decay</h2>\r\n                <input\r\n                  id=\"decay\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"3\"\r\n                  step=\"0.01\"\r\n                  value={decay}\r\n                  onInput={(e) => setDecay(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"decayVal\">{decay}</output>\r\n\r\n                <h2>Wet</h2>\r\n                <input\r\n                  id=\"wetR\"\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"1\"\r\n                  step=\"0.01\"\r\n                  value={reverbWet}\r\n                  onInput={(e) => setReverbWet(e.target.value)}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"wetRVal\">{reverbWet}</output>\r\n\r\n              <button onClick={closeReverbModal} style={backButtonStyle}>Close</button>\r\n              <button onClick={reverb} style={backButtonStyle}>Apply Reverb</button>\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <button style={adjustGainButtonStyle} onClick={openEquaModal}>\r\n          Parametric Equalizer\r\n        </button>\r\n\r\n        {isEquaModalOpen && (\r\n          <>\r\n             <div style={overlayStyle} onClick={closeEquaModal} />\r\n              <div style={modalStyle}>\r\n\r\n              <h2>32</h2>\r\n                <input\r\n                  id=\"32hz\"\r\n                  type=\"range\"\r\n                  orient = \"vertical\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filters[0].gain.value}\r\n                  onInput={(e) => filters[0].gain.value = e.target.value}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"0\">{filters[0].gain.value}</output>\r\n\r\n                <h2>64</h2>\r\n                <input\r\n                  id=\"64hz\"\r\n                  type=\"range\"\r\n                  orient = \"vertical\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filters[1].gain.value}\r\n                  onInput={(e) => filters[1].gain.value = e.target.value}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"1\">{filters[1].gain.value}</output>\r\n\r\n                <h2>125</h2>\r\n                <input\r\n                  id=\"125hz\"\r\n                  type=\"range\"\r\n                  orient = \"vertical\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filters[2].gain.value}\r\n                  onInput={(e) => filters[2].gain.value = e.target.value}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"2\">{filters[2].gain.value}</output>\r\n                 \r\n                <h2>250</h2>\r\n                <input\r\n                  id=\"250hz\"\r\n                  type=\"range\"\r\n                  orient = \"vertical\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filters[3].gain.value}\r\n                  onInput={(e) => filters[3].gain.value = e.target.value}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"3\">{filters[3].gain.value}</output>\r\n                 \r\n                <h2>500</h2>\r\n                <input\r\n                  id=\"500hz\"\r\n                  type=\"range\"\r\n                  orient = \"vertical\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filters[4].gain.value}\r\n                  onInput={(e) => filters[4].gain.value = e.target.value}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"4\">{filters[4].gain.value}</output>\r\n                 \r\n                <h2>1000</h2>\r\n                <input\r\n                  id=\"1000hz\"\r\n                  type=\"range\"\r\n                  orient = \"vertical\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filters[5].gain.value}\r\n                  onInput={(e) => filters[5].gain.value = e.target.value}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"5\">{filters[5].gain.value}</output>\r\n                 \r\n                <h2>2000</h2>\r\n                <input\r\n                  id=\"2000hz\"\r\n                  type=\"range\"\r\n                  orient = \"vertical\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filters[6].gain.value}\r\n                  onInput={(e) => filters[6].gain.value = e.target.value}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"6\">{filters[6].gain.value}</output>\r\n                 \r\n                <h2>4000</h2>\r\n                <input\r\n                  id=\"4000hz\"\r\n                  type=\"range\"\r\n                  orient = \"vertical\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filters[7].gain.value}\r\n                  onInput={(e) => filters[7].gain.value = e.target.value}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"7\">{filters[7].gain.value}</output>\r\n                 \r\n                <h2>8000</h2>\r\n                <input\r\n                  id=\"8000hz\"\r\n                  type=\"range\"\r\n                  orient = \"vertical\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filters[8].gain.value}\r\n                  onInput={(e) => filters[8].gain.value = e.target.value}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"8\">{filters[8].gain.value}</output>\r\n                 \r\n                <h2>16000</h2>\r\n                <input\r\n                  id=\"16000hz\"\r\n                  type=\"range\"\r\n                  orient = \"vertical\"\r\n                  min=\"-40\"\r\n                  max=\"40\"\r\n                  step=\"0.1\"\r\n                  value={filters[9].gain.value}\r\n                  onInput={(e) => filters[9].gain.value = e.target.value}\r\n                  style={sliderStyle}\r\n                />\r\n                <output id=\"9\">{filters[9].gain.value}</output>\r\n\r\n              <button onClick={closeEquaModal} style={backButtonStyle}>Close</button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}