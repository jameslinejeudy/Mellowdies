{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\Desktop\\\\School\\\\Senior Project\\\\Github Branch\\\\Mellowdies\\\\mellowdies\\\\src\\\\Homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport gifBackground from './images/yea.png'; // Adjust the path if needed\nimport useDrivePicker from 'react-google-drive-picker';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pageStyle = {\n  backgroundImage: `url(${gifBackground})`,\n  backgroundSize: 'cover',\n  backgroundPosition: 'center',\n  textAlign: 'center',\n  padding: '20px',\n  height: '100vh',\n  margin: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  fontFamily: 'Concert One'\n};\nconst headingStyle = {\n  color: '#000000',\n  fontSize: '3.5rem',\n  textShadow: '6px 6px 10px pink, -6px -6px 10px pink, 6px -6px 10px pink, -6px 6px 10px pink',\n  marginBottom: '10px',\n  marginTop: '0'\n};\nconst containerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'flex-start',\n  width: '100%',\n  paddingTop: '50px'\n};\nconst buttonStyle = {\n  padding: '10px 20px',\n  borderRadius: '30px',\n  border: '2px solid #ffffff',\n  backgroundColor: 'rgba(255, 255, 255, 0.5)',\n  color: '#000',\n  fontFamily: \"'Concert One', cursive\",\n  cursor: 'pointer',\n  marginTop: '15px',\n  width: '300px',\n  textAlign: 'center',\n  fontSize: '1.2rem',\n  boxShadow: '3px 3px 5px white, -3px -3px 5px white, 3px -3px 5px white, -3px 3px 5px white'\n};\nfunction HomePage() {\n  _s();\n  const navigate = useNavigate();\n  const [audioFiles, setAudioFiles] = useState([]);\n  const [openPicker, authResponse] = useDrivePicker();\n\n  // Track component mount status\n  const [isMounted, setIsMounted] = useState(true);\n  useEffect(() => {\n    // Set to true when component is mounted\n    setIsMounted(true);\n\n    // Cleanup function to run when component unmounts\n    return () => {\n      setIsMounted(false);\n      audioFiles.forEach(file => {\n        try {\n          URL.revokeObjectURL(file.url);\n        } catch (error) {\n          console.error(\"Error revoking object URL:\", error);\n        }\n      });\n    };\n  }, [audioFiles]);\n  const handleFileUpload = event => {\n    const files = event.target.files;\n    const audioFilesArray = Array.from(files).map(file => ({\n      name: file.name,\n      url: URL.createObjectURL(file),\n      // Creates a temporary URL for the file\n      mimeType: file.type\n    }));\n    if (audioFilesArray.length > 0) {\n      setAudioFiles(audioFilesArray);\n      navigate('/Landingpage', {\n        state: {\n          audioFiles: audioFilesArray\n        }\n      });\n    } else {\n      alert('Please select audio files.');\n    }\n  };\n  const handleGoogleDrive = () => {\n    openPicker({\n      clientId: \"473620447998-mljs5baieqfr2bfk9berae2suhb7fqag.apps.googleusercontent.com\",\n      developerKey: \"AIzaSyApSN-CVcrcURGIUIAS3wtNgIlOszHwk2k\",\n      showUploadView: true,\n      showUploadFolders: true,\n      supportDrives: true,\n      multiselect: true,\n      viewId: \"AUDIO\",\n      mimeTypes: ['audio/mpeg', 'audio/wav', 'audio/mp3', 'audio/x-wav', 'audio/x-m4a', 'audio/flac'],\n      callbackFunction: data => {\n        console.log('Google Drive callback data:', data);\n        if (data.action === 'picked') {\n          const googleDriveFiles = data.docs.map(doc => ({\n            name: doc.name,\n            url: doc.url,\n            mimeType: doc.mimeType\n          }));\n          if (googleDriveFiles.length > 0) {\n            navigate('/Landingpage', {\n              state: {\n                audioFiles: googleDriveFiles\n              }\n            });\n          } else {\n            alert('Please select only audio files.');\n          }\n        }\n      }\n    });\n    console.log('Google Drive clicked');\n  };\n  const handleNoFile = () => {\n    navigate('/Landingpage');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: pageStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: headingStyle,\n        children: \"MELLOWDIES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        style: buttonStyle,\n        multiple: true,\n        accept: \"audio/*\",\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: handleGoogleDrive,\n        children: \"Google Drive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: handleNoFile,\n        children: \"Continue Without Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"DYWfsqpiqhTQza/2fDCdCOkJT3Q=\", false, function () {\n  return [useNavigate, useDrivePicker];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","gifBackground","useDrivePicker","useNavigate","jsxDEV","_jsxDEV","pageStyle","backgroundImage","backgroundSize","backgroundPosition","textAlign","padding","height","margin","display","flexDirection","alignItems","fontFamily","headingStyle","color","fontSize","textShadow","marginBottom","marginTop","containerStyle","justifyContent","width","paddingTop","buttonStyle","borderRadius","border","backgroundColor","cursor","boxShadow","HomePage","_s","navigate","audioFiles","setAudioFiles","openPicker","authResponse","isMounted","setIsMounted","forEach","file","URL","revokeObjectURL","url","error","console","handleFileUpload","event","files","target","audioFilesArray","Array","from","map","name","createObjectURL","mimeType","type","length","state","alert","handleGoogleDrive","clientId","developerKey","showUploadView","showUploadFolders","supportDrives","multiselect","viewId","mimeTypes","callbackFunction","data","log","action","googleDriveFiles","docs","doc","handleNoFile","style","children","fileName","_jsxFileName","lineNumber","columnNumber","multiple","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kevin/Desktop/School/Senior Project/Github Branch/Mellowdies/mellowdies/src/Homepage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport gifBackground from './images/yea.png';  // Adjust the path if needed\r\nimport useDrivePicker from 'react-google-drive-picker';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst pageStyle = {\r\n  backgroundImage: `url(${gifBackground})`,\r\n  backgroundSize: 'cover',\r\n  backgroundPosition: 'center',\r\n  textAlign: 'center',\r\n  padding: '20px',\r\n  height: '100vh',\r\n  margin: 0,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  fontFamily: 'Concert One',\r\n};\r\n\r\nconst headingStyle = {\r\n  color: '#000000',\r\n  fontSize: '3.5rem',\r\n  textShadow: '6px 6px 10px pink, -6px -6px 10px pink, 6px -6px 10px pink, -6px 6px 10px pink',\r\n  marginBottom: '10px',\r\n  marginTop: '0',\r\n};\r\n\r\nconst containerStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-start',\r\n  width: '100%',\r\n  paddingTop: '50px',\r\n};\r\n\r\nconst buttonStyle = {\r\n  padding: '10px 20px',\r\n  borderRadius: '30px',\r\n  border: '2px solid #ffffff',\r\n  backgroundColor: 'rgba(255, 255, 255, 0.5)',\r\n  color: '#000',\r\n  fontFamily: \"'Concert One', cursive\",\r\n  cursor: 'pointer',\r\n  marginTop: '15px',\r\n  width: '300px',\r\n  textAlign: 'center',\r\n  fontSize: '1.2rem',\r\n  boxShadow: '3px 3px 5px white, -3px -3px 5px white, 3px -3px 5px white, -3px 3px 5px white',\r\n};\r\n\r\nfunction HomePage() {\r\n  const navigate = useNavigate();\r\n  const [audioFiles, setAudioFiles] = useState([]);\r\n  const [openPicker, authResponse] = useDrivePicker();\r\n\r\n  // Track component mount status\r\n  const [isMounted, setIsMounted] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Set to true when component is mounted\r\n    setIsMounted(true);\r\n\r\n    // Cleanup function to run when component unmounts\r\n    return () => {\r\n      setIsMounted(false);\r\n      audioFiles.forEach(file => {\r\n        try {\r\n          URL.revokeObjectURL(file.url);\r\n        } catch (error) {\r\n          console.error(\"Error revoking object URL:\", error);\r\n        }\r\n      });\r\n    };\r\n  }, [audioFiles]);\r\n\r\n  const handleFileUpload = (event) => {\r\n    const files = event.target.files;\r\n    const audioFilesArray = Array.from(files).map(file => ({\r\n      name: file.name,\r\n      url: URL.createObjectURL(file), // Creates a temporary URL for the file\r\n      mimeType: file.type\r\n    }));\r\n\r\n    if (audioFilesArray.length > 0) {\r\n      setAudioFiles(audioFilesArray);\r\n      navigate('/Landingpage', { state: { audioFiles: audioFilesArray } });\r\n    } else {\r\n      alert('Please select audio files.');\r\n    }\r\n  };\r\n\r\n  const handleGoogleDrive = () => {\r\n    openPicker({\r\n      clientId: \"473620447998-mljs5baieqfr2bfk9berae2suhb7fqag.apps.googleusercontent.com\",\r\n      developerKey: \"AIzaSyApSN-CVcrcURGIUIAS3wtNgIlOszHwk2k\",\r\n      showUploadView: true,\r\n      showUploadFolders: true,\r\n      supportDrives: true,\r\n      multiselect: true,\r\n      viewId: \"AUDIO\",\r\n      mimeTypes: ['audio/mpeg', 'audio/wav', 'audio/mp3', 'audio/x-wav', 'audio/x-m4a', 'audio/flac'],\r\n      callbackFunction: (data) => {\r\n        console.log('Google Drive callback data:', data);\r\n\r\n        if (data.action === 'picked') {\r\n          const googleDriveFiles = data.docs.map(doc => ({\r\n            name: doc.name,\r\n            url: doc.url,\r\n            mimeType: doc.mimeType\r\n          }));\r\n\r\n          if (googleDriveFiles.length > 0) {\r\n            navigate('/Landingpage', { state: { audioFiles: googleDriveFiles } });\r\n          } else {\r\n            alert('Please select only audio files.');\r\n          }\r\n        }\r\n      },\r\n    });\r\n    console.log('Google Drive clicked');\r\n  };\r\n\r\n  const handleNoFile = () => {\r\n    navigate('/Landingpage');\r\n  };\r\n\r\n  return (\r\n    <div style={pageStyle}>\r\n      <div style={containerStyle}>\r\n        <h1 style={headingStyle}>MELLOWDIES</h1>\r\n        <input\r\n          type=\"file\"\r\n          style={buttonStyle}\r\n          multiple  \r\n          accept=\"audio/*\"\r\n          onChange={handleFileUpload}\r\n        />\r\n        <button style={buttonStyle} onClick={handleGoogleDrive}>\r\n          Google Drive\r\n        </button>\r\n        <button style={buttonStyle} onClick={handleNoFile}>\r\n          Continue Without Upload\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}