{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\james\\\\Downloads\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Landingpage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport WaveSurfer from 'wavesurfer.js';\nimport { useLocation } from 'react-router-dom';\nimport Sidebar from './Sidebar.js';\nimport cloud from '../images/cloud.png'; // Adjust the path if needed\nimport PlayButton from './PlayButton.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pagebackground = {\n  backgroundSize: 'cover',\n  backgroundImage: `url(${cloud})`,\n  // Set the image as the background\n  backgroundPosition: 'center',\n  // Centers the background\n  padding: '10px',\n  // Adjust the padding\n  height: '100vh',\n  // Full viewport height\n  margin: 0,\n  display: 'flex',\n  flexDirection: 'column',\n  // Arrange children in a column\n  fontFamily: 'Concert One' // Use Concert One font\n};\nconst trackbackground = {\n  width: '75%',\n  height: '80%',\n  position: 'fixed',\n  top: '0',\n  // Position the box at the top of the screen\n  right: '0',\n  // Align the box to the right side of the screen\n  display: 'flex',\n  justifyContent: 'left',\n  alignItems: 'left',\n  backgroundColor: 'rgba(255, 255, 255, 0.3)',\n  // Slightly transparent white background\n  marginTop: '5px',\n  // Space between the box and the top of the screen\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\n  // Soft, glowy white shadow\n  overflowX: 'auto',\n  // Enable horizontal scrolling\n  overflowY: 'hidden' // Disable vertical scrolling\n};\nconst waveformStyle = {\n  width: '100%',\n  // Ensure waveform takes the full width of the container\n  height: 'calc(100% - 30px)' // Subtract 30px to make space for the scrollbar\n};\n\n// Add padding at the bottom to create space for the scrollbar\nconst paddingBottomStyle = {\n  paddingBottom: '30px' // Adjust this value to increase/decrease space\n};\nfunction Landingpage() {\n  _s();\n  const waveformRef = useRef(null);\n  const wavesurferRef = useRef(null);\n  const location = useLocation();\n  const {\n    audioFiles\n  } = location.state || {\n    audioFiles: []\n  };\n  const [isReady, setIsReady] = useState(false); // State to track if WaveSurfer is ready\n  const [speed, setSpeed] = useState(1); // State for playback speed\n  const [progress, setProgress] = useState(0); // State for progress bar\n\n  useEffect(() => {\n    if (audioFiles && audioFiles.length > 0 && waveformRef.current) {\n      console.log('Creating WaveSurfer instance...');\n      wavesurferRef.current = WaveSurfer.create({\n        container: waveformRef.current,\n        waveColor: 'blue',\n        progressColor: '#00FFFF',\n        // The color of the progress bar\n        height: 75,\n        // Increase the height to make it more prominent\n        autoCenter: true,\n        // Ensures the progress bar stays centered\n        interact: true,\n        // Enable user interaction (clicking, dragging)\n        backend: 'MediaElement',\n        // Use the MediaElement backend to support interaction\n        cursorWidth: 2,\n        // Visual indication of the cursor\n        cursorColor: '#FF0000',\n        backgroundColor: 'rgba(255, 255, 255, 255)',\n        // Slightly transparent white background\n        minPxPerSec: 100 // Zoom in on the waveform\n      });\n      if (wavesurferRef.current) {\n        console.log('Loading audio file:', audioFiles[0].url);\n        wavesurferRef.current.load(audioFiles[0].url);\n\n        // Listen for the ready event to ensure the WaveSurfer instance is fully loaded\n        wavesurferRef.current.on('ready', () => {\n          setIsReady(true);\n          // Adjust this to match your trackbackground height\n        });\n        // Update the progress state\n        wavesurferRef.current.on('audioprocess', () => {\n          setProgress(wavesurferRef.current.getCurrentTime() / wavesurferRef.current.getDuration() * 100);\n        });\n        wavesurferRef.current.on('seek', progress => {\n          setProgress(progress * 100);\n        });\n      }\n\n      // Cleanup function to properly handle the destruction of WaveSurfer\n      return () => {\n        if (wavesurferRef.current) {\n          // Ensure that no operations are in progress before destroying\n          wavesurferRef.current.destroy();\n          wavesurferRef.current = null; // Reset the ref to prevent future access\n        }\n      };\n    } else {\n      console.log('No audio files available to display or waveformRef is not ready.');\n    }\n  }, [audioFiles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: pagebackground,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: trackbackground,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: waveformRef,\n        style: waveformStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 12\n    }, this), audioFiles && audioFiles.length > 0 ? /*#__PURE__*/_jsxDEV(PlayButton, {\n      wavesurferRef: wavesurferRef,\n      isReady: isReady,\n      speed: speed,\n      setSpeed: setSpeed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No audio tracks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n_s(Landingpage, \"5fa37r6AUoGUt7KGd2kUwNvSt5A=\", false, function () {\n  return [useLocation];\n});\n_c = Landingpage;\nexport default Landingpage;\nvar _c;\n$RefreshReg$(_c, \"Landingpage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","WaveSurfer","useLocation","Sidebar","cloud","PlayButton","jsxDEV","_jsxDEV","pagebackground","backgroundSize","backgroundImage","backgroundPosition","padding","height","margin","display","flexDirection","fontFamily","trackbackground","width","position","top","right","justifyContent","alignItems","backgroundColor","marginTop","boxShadow","overflowX","overflowY","waveformStyle","paddingBottomStyle","paddingBottom","Landingpage","_s","waveformRef","wavesurferRef","location","audioFiles","state","isReady","setIsReady","speed","setSpeed","progress","setProgress","length","current","console","log","create","container","waveColor","progressColor","autoCenter","interact","backend","cursorWidth","cursorColor","minPxPerSec","url","load","on","getCurrentTime","getDuration","destroy","style","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","Menu","_c","$RefreshReg$"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/src/Landingpage/Landingpage.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Sidebar from './Sidebar.js';\r\nimport cloud from '../images/cloud.png';  // Adjust the path if needed\r\nimport PlayButton from './PlayButton.js';\r\n\r\n\r\nconst pagebackground = {\r\n    backgroundSize: 'cover',\r\n    backgroundImage: `url(${cloud})`,  // Set the image as the background\r\n    backgroundPosition: 'center',  // Centers the background\r\n    padding: '10px',  // Adjust the padding\r\n    height: '100vh',  // Full viewport height\r\n    margin: 0,\r\n    display: 'flex',\r\n    flexDirection: 'column',  // Arrange children in a column\r\n    fontFamily: 'Concert One',  // Use Concert One font\r\n};\r\n\r\n\r\nconst trackbackground = {\r\n      width: '75%',\r\n    height: '80%',\r\n    position: 'fixed',\r\n    top: '0',  // Position the box at the top of the screen\r\n    right: '0',  // Align the box to the right side of the screen\r\n    display: 'flex',\r\n    justifyContent: 'left',\r\n    alignItems: 'left',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.3)',  // Slightly transparent white background\r\n    marginTop: '5px',  // Space between the box and the top of the screen\r\n    boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',  // Soft, glowy white shadow\r\n    overflowX: 'auto',  // Enable horizontal scrolling\r\n    overflowY: 'hidden',  // Disable vertical scrolling\r\n\r\n};\r\n\r\nconst waveformStyle = {\r\n    width: '100%',  // Ensure waveform takes the full width of the container\r\n    height: 'calc(100% - 30px)',  // Subtract 30px to make space for the scrollbar\r\n};\r\n\r\n// Add padding at the bottom to create space for the scrollbar\r\nconst paddingBottomStyle = {\r\n    paddingBottom: '30px',  // Adjust this value to increase/decrease space\r\n};\r\n\r\n\r\nfunction Landingpage() {\r\n    const waveformRef = useRef(null);\r\n    const wavesurferRef = useRef(null);\r\n    const location = useLocation();\r\n    const { audioFiles } = location.state || { audioFiles: [] };\r\n    const [isReady, setIsReady] = useState(false);  // State to track if WaveSurfer is ready\r\n    const [speed, setSpeed] = useState(1); // State for playback speed\r\n    const [progress, setProgress] = useState(0); // State for progress bar\r\n\r\n    useEffect(() => {\r\n        if (audioFiles && audioFiles.length > 0 && waveformRef.current) {\r\n            console.log('Creating WaveSurfer instance...');\r\n            wavesurferRef.current = WaveSurfer.create({\r\n                container: waveformRef.current,\r\n                waveColor: 'blue',\r\n                progressColor: '#00FFFF',  // The color of the progress bar\r\n                height: 75,  // Increase the height to make it more prominent\r\n                autoCenter: true,  // Ensures the progress bar stays centered\r\n                interact: true,  // Enable user interaction (clicking, dragging)\r\n                backend: 'MediaElement',  // Use the MediaElement backend to support interaction\r\n                cursorWidth: 2,  // Visual indication of the cursor\r\n                cursorColor: '#FF0000',\r\n                backgroundColor: 'rgba(255, 255, 255, 255)',  // Slightly transparent white background\r\n                minPxPerSec: 100,  // Zoom in on the waveform\r\n            });\r\n\r\n            if (wavesurferRef.current) {\r\n                console.log('Loading audio file:', audioFiles[0].url);\r\n                wavesurferRef.current.load(audioFiles[0].url);\r\n\r\n                // Listen for the ready event to ensure the WaveSurfer instance is fully loaded\r\n                wavesurferRef.current.on('ready', () => {\r\n                    setIsReady(true); \r\n                    // Adjust this to match your trackbackground height\r\n                });\r\n                // Update the progress state\r\n                wavesurferRef.current.on('audioprocess', () => {\r\n                    setProgress(wavesurferRef.current.getCurrentTime() / wavesurferRef.current.getDuration() * 100);\r\n                });\r\n\r\n                wavesurferRef.current.on('seek', (progress) => {\r\n                    setProgress(progress * 100);\r\n                });\r\n            }\r\n\r\n            // Cleanup function to properly handle the destruction of WaveSurfer\r\n            return () => {\r\n                if (wavesurferRef.current) {\r\n                    // Ensure that no operations are in progress before destroying\r\n                    wavesurferRef.current.destroy();\r\n                    wavesurferRef.current = null;  // Reset the ref to prevent future access\r\n                }\r\n            };\r\n        } else {\r\n            console.log('No audio files available to display or waveformRef is not ready.');\r\n        }\r\n    }, [audioFiles]);\r\n\r\n    return (\r\n        <div style={pagebackground}>\r\n            <div style={trackbackground}>\r\n    <div ref={waveformRef} style={waveformStyle}></div> {/* Waveform will be displayed here */}\r\n</div>\r\n           <Menu/>\r\n\r\n            {audioFiles && audioFiles.length > 0 ? (\r\n                <PlayButton\r\n                    wavesurferRef={wavesurferRef}\r\n                    isReady={isReady}\r\n                    speed={speed}\r\n                    setSpeed={setSpeed}\r\n                />\r\n            ) : (\r\n                <p>No audio tracks available.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Landingpage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}