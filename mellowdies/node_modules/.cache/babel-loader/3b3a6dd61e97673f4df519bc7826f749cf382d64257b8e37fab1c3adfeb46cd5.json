{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\james\\\\Downloads\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Landingpage.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport WaveSurfer from 'wavesurfer.js';\nimport WebAudioPlayer from 'wavesurfer.js/dist/webaudio.js';\nimport RegionsPlugin from \"wavesurfer.js/dist/plugins/regions.js\";\nimport TimelinePlugin from 'wavesurfer.js/dist/plugins/timeline';\nimport { useLocation } from 'react-router-dom';\nimport Sidebar from './Sidebar.js';\nimport PlayButton from './PlayButton.js';\nimport './Landingpage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar blobber = require('audiobuffer-to-blob');\nconst audioContext = new AudioContext();\nconst webAudioPlayer = new WebAudioPlayer(audioContext);\nconst eqBands = [32, 64, 125, 250, 500, 1000, 2000, 4000, 8000, 16000];\nconst filters = eqBands.map(band => {\n  const filter = audioContext.createBiquadFilter();\n  filter.type = band <= 32 ? 'lowshelf' : band >= 16000 ? 'highshelf' : 'peaking';\n  filter.gain.value = 0;\n  filter.frequency.value = band;\n  return filter;\n});\nfunction Landingpage() {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const wavesurferRefs = useRef([]);\n  const containerRefs = useRef([]);\n  const musicbackgroundRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const [audioFiles, setAudioFiles] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.audioFiles) || []);\n  const [isReady, setIsReady] = useState(false);\n  const [speed, setSpeed] = useState(1);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const waveSurferData = [];\n  let longestDuration = 0;\n  useEffect(() => {\n    var _location$state2;\n    if ((_location$state2 = location.state) !== null && _location$state2 !== void 0 && _location$state2.audioFiles) {\n      setAudioFiles(location.state.audioFiles);\n    }\n  }, [location.state]);\n  const setupWaveSurfer = (file, index, container) => {\n    const waveSurfer = WaveSurfer.create({\n      container: container,\n      waveColor: 'blue',\n      progressColor: '#00FFFF',\n      height: 75,\n      cursorColor: '#FF0000',\n      backgroundColor: 'rgba(255, 255, 255, 0)',\n      minPxPerSec: 50,\n      media: webAudioPlayer,\n      plugins: [RegionsPlugin.create()]\n    });\n    waveSurfer.on('ready', () => {\n      const duration = waveSurfer.getDuration();\n      if (duration > longestDuration) longestDuration = duration;\n      if (index === 0) waveSurfer.registerPlugin(TimelinePlugin.create({\n        primaryColor: '#000'\n      }));\n    });\n    waveSurfer.on('region-created', region => {\n      waveSurfer.clearRegions();\n      waveSurfer.addRegion(region);\n    });\n    waveSurferData.push({\n      waveSurfer\n    });\n    wavesurferRefs.current[index] = waveSurfer;\n  };\n  const initializeWaveSurfers = () => {\n    wavesurferRefs.current = [];\n    if (audioFiles.length) {\n      audioFiles.forEach((file, index) => {\n        const container = containerRefs.current[index];\n        setupWaveSurfer(file, index, container);\n      });\n    }\n  };\n  const mergeAndExport = async () => {\n    const buffer = waveSurferData[0].waveSurfer.getDecodedData();\n    const finalBlob = bufferToWaveBlob(buffer, buffer.sampleRate);\n    navigate('/Exportpage', {\n      state: {\n        mergedAudio: URL.createObjectURL(finalBlob)\n      }\n    });\n  };\n  const bufferToWaveBlob = (buffer, sampleRate) => {\n    const length = buffer.length * buffer.numberOfChannels * 2 + 44;\n    const result = new DataView(new ArrayBuffer(length));\n    let offset = 0;\n    [\"RIFF\", \"WAVE\", \"fmt \"].forEach(text => {\n      for (let i = 0; i < text.length; i++) {\n        result.setUint8(offset++, text.charCodeAt(i));\n      }\n    });\n    result.setUint32(offset, 16, true);\n    offset += 4;\n    result.setUint16(offset, 1, true);\n    offset += 2;\n    result.setUint16(offset, buffer.numberOfChannels, true);\n    offset += 2;\n    result.setUint32(offset, sampleRate, true);\n    offset += 4;\n    result.setUint32(offset, sampleRate * 2 * buffer.numberOfChannels, true);\n    offset += 4;\n    result.setUint16(offset, buffer.numberOfChannels * 2, true);\n    offset += 2;\n    result.setUint16(offset, 16, true);\n    offset += 2;\n    for (let i = 0; i < buffer.length; i++) {\n      for (let channel = 0; channel < buffer.numberOfChannels; channel++) {\n        const sample = buffer.getChannelData(channel)[i];\n        result.setInt16(offset, Math.max(-1, Math.min(1, sample)) * 32767, true);\n        offset += 2;\n      }\n    }\n    return new Blob([result], {\n      type: 'audio/wav'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagebackground\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"musicbackground\",\n      ref: musicbackgroundRef,\n      children: audioFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trackNameStyle\",\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"waveformStyle\",\n          ref: el => containerRefs.current[index] = el\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      waveData: waveSurferData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), audioFiles.length > 0 ? /*#__PURE__*/_jsxDEV(PlayButton, {\n      wavesurferRefs: wavesurferRefs,\n      setSpeed: setSpeed,\n      isReady: isReady,\n      speed: speed,\n      aContext: audioContext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No audio tracks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"exportButton\",\n      onClick: mergeAndExport,\n      children: \"Export\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n}\n_s(Landingpage, \"2weTyMgPCumTvjVNMkpEKVSsQ0c=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Landingpage;\nexport default Landingpage;\nvar _c;\n$RefreshReg$(_c, \"Landingpage\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useNavigate","WaveSurfer","WebAudioPlayer","RegionsPlugin","TimelinePlugin","useLocation","Sidebar","PlayButton","jsxDEV","_jsxDEV","blobber","require","audioContext","AudioContext","webAudioPlayer","eqBands","filters","map","band","filter","createBiquadFilter","type","gain","value","frequency","Landingpage","_s","_location$state","navigate","location","wavesurferRefs","containerRefs","musicbackgroundRef","fileInputRef","audioFiles","setAudioFiles","state","isReady","setIsReady","speed","setSpeed","isDropdownOpen","setIsDropdownOpen","waveSurferData","longestDuration","_location$state2","setupWaveSurfer","file","index","container","waveSurfer","create","waveColor","progressColor","height","cursorColor","backgroundColor","minPxPerSec","media","plugins","on","duration","getDuration","registerPlugin","primaryColor","region","clearRegions","addRegion","push","current","initializeWaveSurfers","length","forEach","mergeAndExport","buffer","getDecodedData","finalBlob","bufferToWaveBlob","sampleRate","mergedAudio","URL","createObjectURL","numberOfChannels","result","DataView","ArrayBuffer","offset","text","i","setUint8","charCodeAt","setUint32","setUint16","channel","sample","getChannelData","setInt16","Math","max","min","Blob","className","children","ref","name","fileName","_jsxFileName","lineNumber","columnNumber","el","waveData","aContext","onClick","_c","$RefreshReg$"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/src/Landingpage/Landingpage.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport WaveSurfer from 'wavesurfer.js';\r\nimport WebAudioPlayer from 'wavesurfer.js/dist/webaudio.js';\r\nimport RegionsPlugin from \"wavesurfer.js/dist/plugins/regions.js\";\r\nimport TimelinePlugin from 'wavesurfer.js/dist/plugins/timeline';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Sidebar from './Sidebar.js';\r\nimport PlayButton from './PlayButton.js';\r\nimport './Landingpage.css';\r\n\r\nvar blobber = require('audiobuffer-to-blob');\r\nconst audioContext = new AudioContext();\r\nconst webAudioPlayer = new WebAudioPlayer(audioContext);\r\nconst eqBands = [32, 64, 125, 250, 500, 1000, 2000, 4000, 8000, 16000];\r\nconst filters = eqBands.map(band => {\r\n    const filter = audioContext.createBiquadFilter();\r\n    filter.type = band <= 32 ? 'lowshelf' : band >= 16000 ? 'highshelf' : 'peaking';\r\n    filter.gain.value = 0;\r\n    filter.frequency.value = band;\r\n    return filter;\r\n});\r\n\r\nfunction Landingpage() {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const wavesurferRefs = useRef([]);\r\n    const containerRefs = useRef([]);\r\n    const musicbackgroundRef = useRef(null);\r\n    const fileInputRef = useRef(null);\r\n\r\n    const [audioFiles, setAudioFiles] = useState(location.state?.audioFiles || []);\r\n    const [isReady, setIsReady] = useState(false);\r\n    const [speed, setSpeed] = useState(1);\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n    const waveSurferData = [];\r\n    let longestDuration = 0;\r\n\r\n    useEffect(() => {\r\n        if (location.state?.audioFiles) {\r\n            setAudioFiles(location.state.audioFiles);\r\n        }\r\n    }, [location.state]);\r\n\r\n    const setupWaveSurfer = (file, index, container) => {\r\n        const waveSurfer = WaveSurfer.create({\r\n            container: container,\r\n            waveColor: 'blue',\r\n            progressColor: '#00FFFF',\r\n            height: 75,\r\n            cursorColor: '#FF0000',\r\n            backgroundColor: 'rgba(255, 255, 255, 0)',\r\n            minPxPerSec: 50,\r\n            media: webAudioPlayer,\r\n            plugins: [RegionsPlugin.create()]\r\n        });\r\n\r\n        waveSurfer.on('ready', () => {\r\n            const duration = waveSurfer.getDuration();\r\n            if (duration > longestDuration) longestDuration = duration;\r\n            if (index === 0) waveSurfer.registerPlugin(TimelinePlugin.create({ primaryColor: '#000' }));\r\n        });\r\n\r\n        waveSurfer.on('region-created', (region) => {\r\n            waveSurfer.clearRegions();\r\n            waveSurfer.addRegion(region);\r\n        });\r\n\r\n        waveSurferData.push({ waveSurfer });\r\n        wavesurferRefs.current[index] = waveSurfer;\r\n    };\r\n\r\n    const initializeWaveSurfers = () => {\r\n        wavesurferRefs.current = [];\r\n        if (audioFiles.length) {\r\n            audioFiles.forEach((file, index) => {\r\n                const container = containerRefs.current[index];\r\n                setupWaveSurfer(file, index, container);\r\n            });\r\n        }\r\n    };\r\n\r\n    const mergeAndExport = async () => {\r\n        const buffer = waveSurferData[0].waveSurfer.getDecodedData();\r\n        const finalBlob = bufferToWaveBlob(buffer, buffer.sampleRate);\r\n        navigate('/Exportpage', { state: { mergedAudio: URL.createObjectURL(finalBlob) } });\r\n    };\r\n\r\n    const bufferToWaveBlob = (buffer, sampleRate) => {\r\n        const length = buffer.length * buffer.numberOfChannels * 2 + 44;\r\n        const result = new DataView(new ArrayBuffer(length));\r\n        let offset = 0;\r\n\r\n        [\"RIFF\", \"WAVE\", \"fmt \"].forEach(text => {\r\n            for (let i = 0; i < text.length; i++) {\r\n                result.setUint8(offset++, text.charCodeAt(i));\r\n            }\r\n        });\r\n\r\n        result.setUint32(offset, 16, true);\r\n        offset += 4;\r\n        result.setUint16(offset, 1, true);\r\n        offset += 2;\r\n        result.setUint16(offset, buffer.numberOfChannels, true);\r\n        offset += 2;\r\n        result.setUint32(offset, sampleRate, true);\r\n        offset += 4;\r\n        result.setUint32(offset, sampleRate * 2 * buffer.numberOfChannels, true);\r\n        offset += 4;\r\n        result.setUint16(offset, buffer.numberOfChannels * 2, true);\r\n        offset += 2;\r\n        result.setUint16(offset, 16, true);\r\n        offset += 2;\r\n        for (let i = 0; i < buffer.length; i++) {\r\n            for (let channel = 0; channel < buffer.numberOfChannels; channel++) {\r\n                const sample = buffer.getChannelData(channel)[i];\r\n                result.setInt16(offset, Math.max(-1, Math.min(1, sample)) * 32767, true);\r\n                offset += 2;\r\n            }\r\n        }\r\n\r\n        return new Blob([result], { type: 'audio/wav' });\r\n    };\r\n\r\n    return (\r\n        <div className=\"pagebackground\">\r\n            <div className=\"musicbackground\" ref={musicbackgroundRef}>\r\n                {audioFiles.map((file, index) => (\r\n                    <div key={index}>\r\n                        <div className=\"trackNameStyle\">{file.name}</div>\r\n                        <div className=\"waveformStyle\" ref={el => containerRefs.current[index] = el}></div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <Sidebar waveData={waveSurferData} />\r\n            {audioFiles.length > 0 ? (\r\n                <PlayButton\r\n                    wavesurferRefs={wavesurferRefs}\r\n                    setSpeed={setSpeed}\r\n                    isReady={isReady}\r\n                    speed={speed}\r\n                    aContext={audioContext}\r\n                />\r\n            ) : (\r\n                <p>No audio tracks available.</p>\r\n            )}\r\n            <button className=\"exportButton\" onClick={mergeAndExport}>Export</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Landingpage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}