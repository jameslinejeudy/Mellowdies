{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Ai.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar toWav = require('audiobuffer-to-wav');\nvar slicer = require('audiobuffer-slice');\nlet wavURL = \"\";\nlet sliceBuffer = null;\nconst menubackground = {/* styles remain unchanged */};\nconst contentStyle = {/* styles remain unchanged */};\nconst descriptionBoxStyle = {/* styles remain unchanged */};\nconst buttonBaseStyle = {\n  padding: \"10px 20px\",\n  fontSize: \"16px\",\n  borderRadius: \"8px\",\n  border: \"none\",\n  cursor: \"pointer\",\n  transition: \"all 0.3s ease\"\n};\nconst generateButtonStyle = {\n  ...buttonBaseStyle,\n  backgroundColor: \"#4CAF50\",\n  color: \"white\",\n  boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\"\n};\nconst backButtonStyle = {\n  ...buttonBaseStyle,\n  backgroundColor: \"#f44336\",\n  color: \"white\",\n  marginLeft: \"10px\",\n  boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\"\n};\nconst hoverEffectStyle = {\n  transform: \"scale(1.05)\",\n  boxShadow: \"0 6px 8px rgba(0, 0, 0, 0.2)\"\n};\nfunction getAudioSlice(buffer, region) {\n  slicer(buffer, region.start * 1000, region.end * 1000, function (error, slicedBuffer) {\n    if (error) {\n      console.error(error);\n      return;\n    } else {\n      sliceBuffer = slicedBuffer;\n    }\n  });\n  return sliceBuffer;\n}\nfunction bufferToWavURL(buffer) {\n  var blob = new window.Blob([new DataView(toWav(buffer))], {\n    type: \"audio/wav\"\n  });\n  wavURL = window.URL.createObjectURL(blob);\n  return wavURL;\n}\nfunction AIMenu({\n  handleBack,\n  waveData\n}) {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [description, setDescription] = useState(\"\");\n  const [file, setFile] = useState(null); // State to store the uploaded file\n  const [apiChoice, setApiChoice] = useState(\"old\"); // New state for API selection\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [progressMessage, setProgressMessage] = useState(null);\n  const [sendToAI, setSendToAI] = useState(false); // Checkbox state\n  const [hover, setHover] = useState({\n    generate: false,\n    back: false\n  });\n  let wavURL = \"\";\n  const handleMouseEnter = button => setHover({\n    ...hover,\n    [button]: true\n  });\n  const handleMouseLeave = button => setHover({\n    ...hover,\n    [button]: false\n  });\n  const handleFileChange = event => {\n    setFile(event.target.files[0]); // Capture the uploaded file\n  };\n  const handleGenerateMusic = async () => {\n    if (!description && !file) {\n      setErrorMessage(\"Please provide a description or upload a file.\");\n      return;\n    }\n    setLoading(true);\n    setErrorMessage(null);\n    setProgressMessage(\"Connecting to the server...\");\n\n    // Select the fn_index based on the API choice\n    let fn_index = 0; // Default to 0 if you want to test fn_index 0\n\n    if (apiChoice === \"new\") {\n      // Adjust this based on user selection or logic\n      fn_index = 0; // Change this value depending on what you want to pass for testing\n    }\n    if (sendToAI != false) {\n      let buffer = waveData[0].waveSurfer.getDecodedData();\n      let region = waveData[0].regions.getRegions()[0];\n      let slicedBuffer = getAudioSlice(buffer, region);\n      wavURL = bufferToWavURL(slicedBuffer);\n      console.log(wavURL);\n    }\n    try {\n      const formData = new FormData(); // Create form data object to send description, file, and fn_index\n      formData.append(\"description\", description);\n      formData.append(\"audio\", wavURL);\n      formData.append(\"apiChoice\", apiChoice); // Include the API choice\n      formData.append(\"fn_index\", fn_index); // Include the fn_index for new API\n      if (file) formData.append(\"file\", file);\n      const response = await fetch(\"http://localhost:3001/api/generate-music\", {\n        method: \"POST\",\n        body: formData // Send form data instead of JSON\n      });\n      console.log(formData);\n      if (!response.ok) {\n        throw new Error(\"Server failed to generate music.\");\n      }\n      setProgressMessage(\"Generating music on server...\");\n      const blob = await response.blob();\n      setProgressMessage(\"Downloading generated music file...\");\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = `${description || \"uploaded_file\"}_generated_music.wav`;\n\n      // Trigger download\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n      URL.revokeObjectURL(url);\n      setProgressMessage(\"Download complete. Check your Downloads folder.\");\n    } catch (error) {\n      console.error(\"Error during music generation or download:\", error);\n      setErrorMessage(`Failed to generate or download music: ${error.message}`);\n      setProgressMessage(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: menubackground,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: contentStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI Music Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 26\n      }, this), progressMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"blue\"\n        },\n        children: progressMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"apiChoice\",\n        children: \"Choose API:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"apiChoice\",\n        value: apiChoice,\n        onChange: e => setApiChoice(e.target.value),\n        disabled: loading,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"old\",\n          children: \"Old API\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"new\",\n          children: \"New API\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        style: descriptionBoxStyle,\n        placeholder: \"Describe your music...\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: sendToAI,\n            onChange: e => setSendToAI(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), \"Send selected music region to AI\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          ...generateButtonStyle,\n          ...(hover.generate ? hoverEffectStyle : {})\n        },\n        onClick: handleGenerateMusic,\n        onMouseEnter: () => handleMouseEnter(\"generate\"),\n        onMouseLeave: () => handleMouseLeave(\"generate\"),\n        disabled: loading,\n        children: loading ? \"Processing...\" : \"Generate Music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          ...backButtonStyle,\n          ...(hover.back ? hoverEffectStyle : {})\n        },\n        onClick: handleBack,\n        onMouseEnter: () => handleMouseEnter(\"back\"),\n        onMouseLeave: () => handleMouseLeave(\"back\"),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(AIMenu, \"ACBkK+KFrIh6o5VMKg7gb7EaeRI=\");\n_c = AIMenu;\nexport default AIMenu;\nvar _c;\n$RefreshReg$(_c, \"AIMenu\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","toWav","require","slicer","wavURL","sliceBuffer","menubackground","contentStyle","descriptionBoxStyle","buttonBaseStyle","padding","fontSize","borderRadius","border","cursor","transition","generateButtonStyle","backgroundColor","color","boxShadow","backButtonStyle","marginLeft","hoverEffectStyle","transform","getAudioSlice","buffer","region","start","end","error","slicedBuffer","console","bufferToWavURL","blob","window","Blob","DataView","type","URL","createObjectURL","AIMenu","handleBack","waveData","_s","loading","setLoading","description","setDescription","file","setFile","apiChoice","setApiChoice","errorMessage","setErrorMessage","progressMessage","setProgressMessage","sendToAI","setSendToAI","hover","setHover","generate","back","handleMouseEnter","button","handleMouseLeave","handleFileChange","event","target","files","handleGenerateMusic","fn_index","waveSurfer","getDecodedData","regions","getRegions","log","formData","FormData","append","response","fetch","method","body","ok","Error","url","a","document","createElement","href","download","appendChild","click","remove","revokeObjectURL","message","style","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","disabled","placeholder","checked","onClick","onMouseEnter","onMouseLeave","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Mellowdies/mellowdies/src/Landingpage/Ai.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nvar toWav = require('audiobuffer-to-wav');\r\nvar slicer = require('audiobuffer-slice');\r\nlet wavURL = \"\";\r\nlet sliceBuffer = null;\r\nconst menubackground = { /* styles remain unchanged */ };\r\nconst contentStyle = { /* styles remain unchanged */ };\r\nconst descriptionBoxStyle = { /* styles remain unchanged */ };\r\nconst buttonBaseStyle = {\r\n  padding: \"10px 20px\",\r\n  fontSize: \"16px\",\r\n  borderRadius: \"8px\",\r\n  border: \"none\",\r\n  cursor: \"pointer\",\r\n  transition: \"all 0.3s ease\",\r\n};\r\n\r\nconst generateButtonStyle = {\r\n  ...buttonBaseStyle,\r\n  backgroundColor: \"#4CAF50\",\r\n  color: \"white\",\r\n  boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\",\r\n};\r\n\r\nconst backButtonStyle = {\r\n  ...buttonBaseStyle,\r\n  backgroundColor: \"#f44336\",\r\n  color: \"white\",\r\n  marginLeft: \"10px\",\r\n  boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\",\r\n};\r\n\r\nconst hoverEffectStyle = {\r\n  transform: \"scale(1.05)\",\r\n  boxShadow: \"0 6px 8px rgba(0, 0, 0, 0.2)\",\r\n};\r\n\r\nfunction getAudioSlice(buffer, region) {\r\n  slicer(buffer, region.start * 1000, region.end * 1000, function(error, slicedBuffer) {\r\n      if (error) {\r\n          console.error(error);\r\n          return;\r\n      } else {\r\n          sliceBuffer = slicedBuffer;\r\n      }\r\n  })\r\n  return sliceBuffer;\r\n}\r\n\r\nfunction bufferToWavURL(buffer) {\r\n  var blob = new window.Blob([new DataView(toWav(buffer))], {type: \"audio/wav\"});\r\n  wavURL = window.URL.createObjectURL(blob);\r\n  return wavURL;\r\n}\r\n\r\nfunction AIMenu({ handleBack, waveData }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [file, setFile] = useState(null); // State to store the uploaded file\r\n  const [apiChoice, setApiChoice] = useState(\"old\");  // New state for API selection\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [progressMessage, setProgressMessage] = useState(null);\r\n  const [sendToAI, setSendToAI] = useState(false);  // Checkbox state\r\n  const [hover, setHover] = useState({ generate: false, back: false });\r\n  let wavURL = \"\";\r\n\r\n  const handleMouseEnter = (button) => setHover({ ...hover, [button]: true });\r\n  const handleMouseLeave = (button) => setHover({ ...hover, [button]: false });\r\n\r\n  const handleFileChange = (event) => {\r\n    setFile(event.target.files[0]); // Capture the uploaded file\r\n  };\r\n\r\n  const handleGenerateMusic = async () => {\r\n    if (!description && !file) {\r\n      setErrorMessage(\"Please provide a description or upload a file.\");\r\n      return;\r\n    }\r\n  \r\n    setLoading(true);\r\n    setErrorMessage(null);\r\n    setProgressMessage(\"Connecting to the server...\");\r\n  \r\n    // Select the fn_index based on the API choice\r\n    let fn_index = 0; // Default to 0 if you want to test fn_index 0\r\n  \r\n    if (apiChoice === \"new\") {\r\n      // Adjust this based on user selection or logic\r\n      fn_index = 0;  // Change this value depending on what you want to pass for testing\r\n    }\r\n\r\n    if (sendToAI != false) {\r\n      let buffer = waveData[0].waveSurfer.getDecodedData();\r\n      let region = (waveData[0].regions.getRegions())[0];\r\n      let slicedBuffer = getAudioSlice(buffer, region);\r\n      wavURL = bufferToWavURL(slicedBuffer);\r\n      console.log(wavURL);\r\n    }\r\n  \r\n    try {\r\n      const formData = new FormData(); // Create form data object to send description, file, and fn_index\r\n      formData.append(\"description\", description);\r\n      formData.append(\"audio\", wavURL);\r\n      formData.append(\"apiChoice\", apiChoice); // Include the API choice\r\n      formData.append(\"fn_index\", fn_index); // Include the fn_index for new API\r\n      if (file) formData.append(\"file\", file);\r\n  \r\n      const response = await fetch(\"http://localhost:3001/api/generate-music\", {\r\n        method: \"POST\",\r\n        body: formData, // Send form data instead of JSON\r\n      });\r\n      \r\n      console.log(formData);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(\"Server failed to generate music.\");\r\n      }\r\n  \r\n      setProgressMessage(\"Generating music on server...\");\r\n  \r\n      const blob = await response.blob();\r\n      setProgressMessage(\"Downloading generated music file...\");\r\n  \r\n      const url = URL.createObjectURL(blob);\r\n      const a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.download = `${description || \"uploaded_file\"}_generated_music.wav`;\r\n  \r\n      // Trigger download\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      a.remove();\r\n      URL.revokeObjectURL(url);\r\n  \r\n      setProgressMessage(\"Download complete. Check your Downloads folder.\");\r\n    } catch (error) {\r\n      console.error(\"Error during music generation or download:\", error);\r\n      setErrorMessage(`Failed to generate or download music: ${error.message}`);\r\n      setProgressMessage(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div style={menubackground}>\r\n      <div style={contentStyle}>\r\n        <h1>AI Music Generator</h1>\r\n        {errorMessage && <div style={{ color: \"red\" }}>{errorMessage}</div>}\r\n        {progressMessage && <div style={{ color: \"blue\" }}>{progressMessage}</div>}\r\n\r\n        {/* Dropdown for API selection */}\r\n        <label htmlFor=\"apiChoice\">Choose API:</label>\r\n        <select\r\n          id=\"apiChoice\"\r\n          value={apiChoice}\r\n          onChange={(e) => setApiChoice(e.target.value)}\r\n          disabled={loading}\r\n        >\r\n          <option value=\"old\">Old API</option>\r\n          <option value=\"new\">New API</option>\r\n        </select>\r\n\r\n        <textarea\r\n          style={descriptionBoxStyle}\r\n          placeholder=\"Describe your music...\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <div>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={sendToAI}\r\n              onChange={(e) => setSendToAI(e.target.checked)}\r\n            />\r\n            Send selected music region to AI\r\n          </label>\r\n        </div>\r\n        <input type=\"file\" onChange={handleFileChange} /> {/* Add file input */}\r\n        <button\r\n          style={{\r\n            ...generateButtonStyle,\r\n            ...(hover.generate ? hoverEffectStyle : {}),\r\n          }}\r\n          onClick={handleGenerateMusic}\r\n          onMouseEnter={() => handleMouseEnter(\"generate\")}\r\n          onMouseLeave={() => handleMouseLeave(\"generate\")}\r\n          disabled={loading}\r\n        >\r\n          {loading ? \"Processing...\" : \"Generate Music\"}\r\n        </button>\r\n        <button\r\n          style={{\r\n            ...backButtonStyle,\r\n            ...(hover.back ? hoverEffectStyle : {}),\r\n          }}\r\n          onClick={handleBack}\r\n          onMouseEnter={() => handleMouseEnter(\"back\")}\r\n          onMouseLeave={() => handleMouseLeave(\"back\")}\r\n        >\r\n          Back\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AIMenu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}