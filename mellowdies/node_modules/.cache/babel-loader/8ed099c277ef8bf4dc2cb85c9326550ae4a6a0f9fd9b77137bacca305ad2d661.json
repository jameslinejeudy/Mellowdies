{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\james\\\\Downloads\\\\Mellowdies\\\\mellowdies\\\\src\\\\Landingpage\\\\Ai.js\",\n  _s = $RefreshSig$();\nimport menubutton from '../images/menubutton.png';\nimport React, { useState, useEffect } from \"react\";\nimport { Client } from \"@gradio/client\";\n\n// CSS styling for the component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst menubackground = {\n  width: '25%',\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'flex-start',\n  alignItems: 'left',\n  border: '2px solid #ffffff',\n  backgroundColor: '#ffffff',\n  fontFamily: \"'Concert One', cursive\",\n  fontSize: '1.2rem',\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\n  border: 'none',\n  position: 'fixed',\n  top: '0',\n  left: '0',\n  zIndex: '1000',\n  paddingTop: '50px'\n};\nconst backbuttonStyle = {\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  justifyContent: 'center',\n  position: 'fixed',\n  top: '1%',\n  left: '0.5%',\n  zIndex: '1001',\n  cursor: 'pointer',\n  backgroundColor: 'rgba(255, 255, 255, 0.0)',\n  border: 'none',\n  padding: '0',\n  width: 'auto',\n  height: 'auto'\n};\nconst textstyle = {\n  color: '#000000',\n  fontSize: '2rem',\n  textAlign: 'center',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  marginTop: '50px'\n};\nconst backButtonStyle = {\n  marginTop: '10px',\n  background: '#007bff',\n  color: '#fff',\n  border: 'none',\n  padding: '10px 20px',\n  borderRadius: '5px',\n  cursor: 'pointer',\n  fontSize: '16px',\n  textAlign: 'center',\n  width: 'auto',\n  display: 'inline-block',\n  transition: 'background 0.3s ease'\n};\nconst contentStyle = {\n  flexGrow: 1,\n  paddingTop: '60px'\n};\nconst generateButtonStyle = {\n  marginTop: '20px',\n  background: '#28a745',\n  color: '#fff',\n  border: 'none',\n  padding: '10px 20px',\n  borderRadius: '5px',\n  cursor: 'pointer',\n  fontSize: '16px',\n  textAlign: 'center',\n  width: 'auto',\n  display: 'inline-block',\n  transition: 'background 0.3s ease'\n};\nconst descriptionBoxStyle = {\n  marginTop: '20px',\n  padding: '10px',\n  borderRadius: '5px',\n  border: '1px solid #ccc',\n  width: '90%'\n};\nasync function generateMusic(description, audioFileUrl) {\n  try {\n    console.log(\"Sending request to the backend proxy...\");\n    const response = await fetch('http://localhost:3001/api/musicgen', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        description: description,\n        audioUrl: audioFileUrl,\n        fn_index: 0 // Using fn_index 0 for text-to-music\n      })\n    });\n    const result = await response.json();\n    console.log(\"Music generation result:\", result);\n    if (result) {\n      return result;\n    } else {\n      console.error(\"Failed to generate music.\");\n      return null;\n    }\n  } catch (error) {\n    console.error(\"Error in music generation:\", error);\n  }\n}\n\n// Example usage:\nconst description = \"happy rock\";\nconst audioFileUrl = \"https://github.com/gradio-app/gradio/raw/main/test/test_files/audio_sample.wav\";\ngenerateMusic(description, audioFileUrl).then(response => {\n  if (response) {\n    console.log(\"Generated music response:\", response);\n    if (response.data && response.data[0]) {\n      const generatedMusicUrl = response.data[0]; // Assuming the audio data is in response.data[0]\n      console.log(\"Generated music URL:\", generatedMusicUrl);\n    } else {\n      console.error(\"No audio data found in response.\");\n    }\n  }\n});\n\n//above is a test\n\n// Counter to track the number of connection attempts (for testing)\nlet i = 0;\nfunction someFunction() {\n  i++; // Increment the counter each time this line is reached\n  alert(`Trying to connect to API for the ${i} time`); // Display the count in the alert\n}\n\n// Main AIMenu Component\nfunction AIMenu({\n  handleBack\n}) {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [description, setDescription] = useState(\"\");\n  const [app, setApp] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  useEffect(() => {\n    const connectToClient = async () => {\n      try {\n        someFunction(); // Call the counter for testing\n        console.log(\"Connecting to API via proxy...\");\n\n        // Replace Client.connect with fetch to hit the local proxy server\n        const response = await fetch('http://localhost:3001/api/musicgen', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            description: 'happy rock',\n            // Replace this with dynamic data if needed\n            audioUrl: 'https://github.com/gradio-app/gradio/raw/main/test/test_files/audio_sample.wav',\n            fn_index: 0 // Using fn_index 0 for text-to-music conversion\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to connect to the proxy server.');\n        }\n        const appInstance = await response.json();\n        console.log('Connected to API through proxy:', appInstance);\n        setApp(appInstance);\n      } catch (error) {\n        console.error('Failed to connect to the API:', error);\n        setErrorMessage('Failed to connect to the MusicGen API via proxy. Please try again later.');\n      }\n    };\n    connectToClient();\n  }, []); // Empty dependency array to ensure it only runs once\n\n  const handleGenerateMusic = async () => {\n    alert(\"Reached line 132\");\n\n    // Ensure the app is connected before proceeding\n    if (!app) {\n      alert('App is still connecting, please wait.');\n      return;\n    }\n    setLoading(true);\n    setAudioUrl(null); // Reset audio URL before generating\n    try {\n      const result = await generateMusic(app, description);\n      console.log(\"API Result:\", result);\n      if (result && result[1]) {\n        setAudioUrl(URL.createObjectURL(result[1])); // Assuming result[1] contains the audio blob\n      } else {\n        throw new Error(\"No audio data returned from the music generation API.\");\n      }\n    } catch (error) {\n      console.error(\"Error generating music:\", error);\n      alert(`Failed to generate music: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (errorMessage) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: menubackground,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: contentStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"This Is The AI Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        style: descriptionBoxStyle,\n        placeholder: \"Describe your music...\",\n        value: description,\n        onChange: e => setDescription(e.target.value) // Update state on change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: generateButtonStyle,\n        onClick: handleGenerateMusic,\n        disabled: loading,\n        children: loading ? 'Generating...' : 'Generate Music'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: audioUrl,\n          type: \"audio/wav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), \"Your browser does not support the audio tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: backButtonStyle,\n        onClick: handleBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n}\n_s(AIMenu, \"SLSrTr60wBMPFa6PxP4MF7yr3uU=\");\n_c = AIMenu;\nexport default AIMenu;\nvar _c;\n$RefreshReg$(_c, \"AIMenu\");","map":{"version":3,"names":["menubutton","React","useState","useEffect","Client","jsxDEV","_jsxDEV","menubackground","width","height","display","flexDirection","justifyContent","alignItems","border","backgroundColor","fontFamily","fontSize","boxShadow","position","top","left","zIndex","paddingTop","backbuttonStyle","cursor","padding","textstyle","color","textAlign","marginTop","backButtonStyle","background","borderRadius","transition","contentStyle","flexGrow","generateButtonStyle","descriptionBoxStyle","generateMusic","description","audioFileUrl","console","log","response","fetch","method","headers","body","JSON","stringify","audioUrl","fn_index","result","json","error","then","data","generatedMusicUrl","i","someFunction","alert","AIMenu","handleBack","_s","loading","setLoading","setAudioUrl","setDescription","app","setApp","errorMessage","setErrorMessage","connectToClient","ok","Error","appInstance","handleGenerateMusic","URL","createObjectURL","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","placeholder","value","onChange","e","target","onClick","disabled","controls","src","type","_c","$RefreshReg$"],"sources":["C:/Users/james/Downloads/Mellowdies/mellowdies/src/Landingpage/Ai.js"],"sourcesContent":["import menubutton from '../images/menubutton.png';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Client } from \"@gradio/client\";\r\n\r\n// CSS styling for the component\r\nconst menubackground = {\r\n  width: '25%',\r\n  height: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'flex-start',\r\n  alignItems: 'left',\r\n  border: '2px solid #ffffff',\r\n  backgroundColor: '#ffffff',\r\n  fontFamily: \"'Concert One', cursive\",\r\n  fontSize: '1.2rem',\r\n  boxShadow: '0px 0px 15px 5px rgba(255, 255, 255, 0.6)',\r\n  border: 'none',\r\n  position: 'fixed',\r\n  top: '0',\r\n  left: '0',\r\n  zIndex: '1000',\r\n  paddingTop: '50px',\r\n};\r\n\r\nconst backbuttonStyle = {\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  position: 'fixed',\r\n  top: '1%',\r\n  left: '0.5%',\r\n  zIndex: '1001',\r\n  cursor: 'pointer',\r\n  backgroundColor: 'rgba(255, 255, 255, 0.0)',\r\n  border: 'none',\r\n  padding: '0',\r\n  width: 'auto',\r\n  height: 'auto',\r\n};\r\n\r\nconst textstyle = {\r\n  color: '#000000',\r\n  fontSize: '2rem',\r\n  textAlign: 'center',\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  marginTop: '50px',\r\n};\r\n\r\nconst backButtonStyle = {\r\n  marginTop: '10px',\r\n  background: '#007bff',\r\n  color: '#fff',\r\n  border: 'none',\r\n  padding: '10px 20px',\r\n  borderRadius: '5px',\r\n  cursor: 'pointer',\r\n  fontSize: '16px',\r\n  textAlign: 'center',\r\n  width: 'auto',\r\n  display: 'inline-block',\r\n  transition: 'background 0.3s ease',\r\n};\r\n\r\nconst contentStyle = {\r\n  flexGrow: 1,\r\n  paddingTop: '60px',\r\n};\r\n\r\nconst generateButtonStyle = {\r\n  marginTop: '20px',\r\n  background: '#28a745',\r\n  color: '#fff',\r\n  border: 'none',\r\n  padding: '10px 20px',\r\n  borderRadius: '5px',\r\n  cursor: 'pointer',\r\n  fontSize: '16px',\r\n  textAlign: 'center',\r\n  width: 'auto',\r\n  display: 'inline-block',\r\n  transition: 'background 0.3s ease',\r\n};\r\n\r\nconst descriptionBoxStyle = {\r\n  marginTop: '20px',\r\n  padding: '10px',\r\n  borderRadius: '5px',\r\n  border: '1px solid #ccc',\r\n  width: '90%',\r\n};\r\n\r\nasync function generateMusic(description, audioFileUrl) {\r\n  try {\r\n    console.log(\"Sending request to the backend proxy...\");\r\n\r\n    const response = await fetch('http://localhost:3001/api/musicgen', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        description: description,\r\n        audioUrl: audioFileUrl,\r\n        fn_index: 0,  // Using fn_index 0 for text-to-music\r\n      })\r\n    });\r\n\r\n    const result = await response.json();\r\n\r\n    console.log(\"Music generation result:\", result);\r\n    \r\n    if (result) {\r\n      return result;\r\n    } else {\r\n      console.error(\"Failed to generate music.\");\r\n      return null;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error in music generation:\", error);\r\n  }\r\n}\r\n\r\n// Example usage:\r\nconst description = \"happy rock\";\r\nconst audioFileUrl = \"https://github.com/gradio-app/gradio/raw/main/test/test_files/audio_sample.wav\";\r\n\r\ngenerateMusic(description, audioFileUrl).then((response) => {\r\n  if (response) {\r\n    console.log(\"Generated music response:\", response);\r\n    if (response.data && response.data[0]) {\r\n      const generatedMusicUrl = response.data[0];  // Assuming the audio data is in response.data[0]\r\n      console.log(\"Generated music URL:\", generatedMusicUrl);\r\n    } else {\r\n      console.error(\"No audio data found in response.\");\r\n    }\r\n  }\r\n});\r\n\r\n//above is a test\r\n\r\n// Counter to track the number of connection attempts (for testing)\r\nlet i = 0;\r\n\r\nfunction someFunction() {\r\n  i++; // Increment the counter each time this line is reached\r\n  alert(`Trying to connect to API for the ${i} time`); // Display the count in the alert\r\n}\r\n\r\n// Main AIMenu Component\r\nfunction AIMenu({ handleBack }) {\r\n  const [loading, setLoading] = useState(false);\r\n  const [audioUrl, setAudioUrl] = useState(null);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [app, setApp] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const connectToClient = async () => {\r\n      try {\r\n        someFunction(); // Call the counter for testing\r\n        console.log(\"Connecting to API via proxy...\");\r\n  \r\n        // Replace Client.connect with fetch to hit the local proxy server\r\n        const response = await fetch('http://localhost:3001/api/musicgen', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            description: 'happy rock', // Replace this with dynamic data if needed\r\n            audioUrl: 'https://github.com/gradio-app/gradio/raw/main/test/test_files/audio_sample.wav',\r\n            fn_index: 0, // Using fn_index 0 for text-to-music conversion\r\n          }),\r\n        });\r\n  \r\n        if (!response.ok) {\r\n          throw new Error('Failed to connect to the proxy server.');\r\n        }\r\n  \r\n        const appInstance = await response.json();\r\n        console.log('Connected to API through proxy:', appInstance);\r\n        setApp(appInstance);\r\n      } catch (error) {\r\n        console.error('Failed to connect to the API:', error);\r\n        setErrorMessage('Failed to connect to the MusicGen API via proxy. Please try again later.');\r\n      }\r\n    };\r\n  \r\n    connectToClient();\r\n  }, []); // Empty dependency array to ensure it only runs once\r\n  \r\n\r\n  const handleGenerateMusic = async () => {\r\n    alert(\"Reached line 132\");\r\n  \r\n    // Ensure the app is connected before proceeding\r\n    if (!app) {\r\n      alert('App is still connecting, please wait.');\r\n      return;\r\n    }\r\n  \r\n    setLoading(true);\r\n    setAudioUrl(null); // Reset audio URL before generating\r\n    try {\r\n      const result = await generateMusic(app, description);\r\n      console.log(\"API Result:\", result);\r\n  \r\n      if (result && result[1]) {\r\n        setAudioUrl(URL.createObjectURL(result[1])); // Assuming result[1] contains the audio blob\r\n      } else {\r\n        throw new Error(\"No audio data returned from the music generation API.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error generating music:\", error);\r\n      alert(`Failed to generate music: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n\r\n  if (errorMessage) {\r\n    return <div>{errorMessage}</div>;\r\n  }\r\n\r\n  return (\r\n    <div style={menubackground}>\r\n      <div style={contentStyle}>\r\n        <h1>This Is The AI Menu</h1>\r\n        {/* Textbox for user to input description */}\r\n        <textarea\r\n          style={descriptionBoxStyle}\r\n          placeholder=\"Describe your music...\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)} // Update state on change\r\n        />\r\n        {/* Button to generate music */}\r\n        <button style={generateButtonStyle} onClick={handleGenerateMusic} disabled={loading}>\r\n          {loading ? 'Generating...' : 'Generate Music'}\r\n        </button>\r\n        {/* If an audio URL is available, provide a way to play it */}\r\n        {audioUrl && (\r\n          <audio controls>\r\n            <source src={audioUrl} type=\"audio/wav\" />\r\n            Your browser does not support the audio tag.\r\n          </audio>\r\n        )}\r\n        {/* Back button to close the menu */}\r\n        <button style={backButtonStyle} onClick={handleBack}>Back</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AIMenu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}